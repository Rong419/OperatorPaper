%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: correlation.pdf
%%Creator: (Adobe Acrobat 19.10.0)
%%For: ryanzhang
%%CreationDate: 3/04/19, 11:04 PM
%%BoundingBox: 0 0 482 230
%%HiResBoundingBox: 0 0 481.3664 229.3520
%%CropBox: 0 0 481.3664 229.3520
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 32320 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:MetadataDate="2019-04-03T17:24:02+13:00"
   xmp:ModifyDate="2019-04-03T17:24:02+13:00"
   xmp:CreateDate="2019-04-03T17:24:02+13:00"
   xmp:CreatorTool="Adobe Illustrator CC 2017 (Macintosh)"
   xmpMM:InstanceID="uuid:7b2162bc-dac7-2545-8780-b1ef1100799e"
   xmpMM:DocumentID="xmp.did:6c466b9e-415f-49a2-bd79-ed0987b30324"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">correlation</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="128"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FWJalcefj5ttVtkhj8sRXIW5KxqZngbT7p2dpHkPwpeLAoVIw2/&#xA;UrXFVLzbrOo2GhzXVvcNFKjIQ232eQqN6j4umZWHGDIAtUpEBKfy/wDMmu6mt39fvHnZBG0dQoCq&#xA;xcfshf5Mt1OGMaoMcciWXi7uCT+8ag365i8IbLa+tXPGvqN7b48ITajeXt4kNUmYN45Xl2js26cC&#xA;UqLtLvruYuZJWYACm/Q716ZRCRLk5sURVBEyXNwrsPUag6CuZMBYcOexVFmmMYPNuVAep8MqJbeE&#xA;UuMsu1Hb33OC08IYN+ZHmXXdKns49OvHt/WjldqBWqYyv8wb9knMXU5ZRqi7nsnR4svFxi6r7bRP&#xA;lrzDq97odndT3TvLMriRzQfErstdhSm2HHlkYg21avS44ZZRA2H6mXCab00PNqnjXc96Zk26rhCv&#xA;bySGVQWJBrUE17YQUSACMyTW7FWg6kKQdn+z91cVb5DkV7gAn6f9rFXKwZQw6EVGKuxV2KuxV2Ku&#xA;xV2KuZgqlj0AqcVdirD/AD55l83aWJYfL2lJeSJp896bmUTOokhkiRYUjiQ83ZZGYDmOmKswJAFT&#xA;0GKpZdeaPLdpdyWd1qlrBdxMiSQSTIrq0sck0alSagtFBI4HcKT2xVD6b548nanefUtP1qyurz1T&#xA;bi3injaQyqsjsgUGpIWCQmn8reBxVO8VYtea9o0eoS2r3ca3Am9MxE/EGJ2WnicyI45cN01mQtju&#xA;naB5pTzi2pancLdWf+n0lS5kAWKS8kaztxaCKOELFaBOchq5f9riu9Q2ZlJPzLTUPMdvFYeU7hLq&#xA;/sLnjqiWs6K8CyLVfUoy0qR+HscztHkhGR4mnIDWyWad5Z88LYWcU1tcI8fP1gZ15ECRiikh9zwp&#xA;vXvmQcuKz+phwyeoaTDcx6RaLcqRcJBGs1d/jCDluNuua3JKPEa73IETSA82WmoXWiSQ6dG0l2zD&#xA;gFIU+BIJI6DLMUoiVy5MSCRsgPI2k67Ym7XVIpFDLEYjIwfkRzL0oWpTkBktRlxmuFYQkOadXUFy&#xA;0zcVNCB023Ga7JEk2OTn4ZwjGpc0Ym0Yr1oO2ZI5OEeandpI8IWIEvWu2V5hts3acgS3Qv6T0zSV&#xA;P6WuYrT1TWH12C1oNwK+Fcx+IRHqNOaMMsp/dxMq7glOqO19etc6dKJrOVKLJE448l+E037MtDlM&#xA;7JscnJwgQjUxUh5ITStJ1+LzBDcTQyiyLkuS1VAqeJpXvQdu+CEJid9GzNmwnDQri26PQbTj660F&#xA;Dv2p2zMDpZ8kfkmt2KqKfYt/o/4gcVXj++b/AFV/W2Ksaj/M78tljVW82aMrAAMp1C1qCB/xkxVd&#xA;/wArQ/LT/qbdF/7iFr/1UxViH5kfmpZjTEi8neatE9eRJ/rM316xaVKIBGYhLOic+RJFQa0ptWuK&#xA;p35W/NHycfLWlHXfNmirrX1SD9JD9I2R/wBJ9Mer/dycN3r9nbwxVNP+Voflp/1Nui/9xC1/6qYq&#xA;7/laH5af9Tbov/cQtf8Aqpirv+Voflp/1Nui/wDcQtf+qmKrZPzO/LZo2VfNmjMxBCqNQtakkf8A&#xA;GTFUF5J8leTJvJmgyyaDp0kkmnWjvI1pAzMzQISSSm5OKp1/gXyT/wBS9pn/AEh2/wDzRiq1/Ivk&#xA;ng3/ADr2m9D/AMecH/NGKsQ1v/nH/wAl6xq0mq3NxfLd3E09xcmOeiO8kD29qQhBSP6lFJSD0wvQ&#xA;c+WKozy9+TWj6NrGl6mNTvbt9Eubu50qCX0AkQv/AKybiMmOJHcM96zfE1RxWm1aqvQMVeX6z5M1&#xA;KXzTJqwlhFpHdfWWQs3qHiwNAONOiDvmxhqAMfD1poMDxWu0/wA7eVPOBv8Ay3A9ypurW4guX9MK&#xA;VWWNom4sxK8hyNMrzaacY2WUZglMbPQ/L3le4vdUbUDBa3K2lmqXX1aCCGOAtHbwxekkXIlpio5V&#xA;NOI7ZijZmd0NF+ZPlWe2ivLW5e7tLhpVt54UJSQwzPA5WvGoEkTCvfYjY5kY8RmLDCUgGUW15DcW&#xA;ccsVSk0YdDt0cVH68xpYyC3jIKpZLdRWsfry19NOtNzv3ywxMtg1xlW7rLWLS9JMIY8KVqKdenf2&#xA;yuWCQ5toygrbi8hSR61rt27HB4gjsWQwynuFZY2MSsOhFfwyQyBqOMrTOkIEj14Dbb3xymgywxJl&#xA;sxDz75W1Dza1odOkijW1WVJvrBZTykKFOPFX7x75rs+I5Kp33ZmtjpTLjBPFXKvPzHe1o9q+gaXa&#xA;6VqEiNdWiMJmh5MhV5CVoSFP2X8MERwAA8wufJ4+SU4A8Mj19yf2nmzSrm7TT4xJ9ZqFIKgDYjvX&#xA;LxmiTTgT0c4w4jyZFan9+op4/qy4OHPkjsk1OxVCXF1DaWK3U7FYLeMyzNStESNmY0G/QdsVY75T&#xA;/MfRPM2vahpdlDcwzWcEFwGuUEfqRTLyDKhPqJ9tdpFU+GKp75c/5R7S/wDmEg/5NLiqYYq7FXYq&#xA;7FXYq7FVk39zJ/qn9WKsa8n6rDaeUtEtbm3vYri3sLWKaJrK7DK6QqrKf3XUEYqxz8yo/Musosei&#xA;Pd/UxbSI9mF1CxLXLzRcJmlgtzKRFEJCEDgFqcqjFWZWutWsNhDFKl68scSq7vaXbsWVQCWcQryP&#xA;vxFfDFWAa1+eM+lazqVkdMtruKye6VIobthdgWgi/v4DF+79b1v3e/7JxVOvy5/NFfN+r6rpYgtu&#xA;WkhRLeWc8k9vK7Ow/dNJDAWXiF+IbHFWfYqkGpk8bo/yiQ/gcuiwLyP8sNF0yx8zK9r9Y9b0JJJD&#xA;LIjg8+NK8Y0rQGo37nNnq5yMN65tGOrZz56vbO20yBb2yjv7YzpMYpGZVDwESxk8T8Q5qAQdvHMH&#xA;Fh8Q1bbKVPNtdby9onlzT7jStGa3mljvLm002G6t7WygjjvoBNI812y8SZdTUxov+qKADJnKcJMB&#xA;ugR493r2gGJtC04wcvRe1haLmCG4emOPIEKa067DKJSMrLOqQHnnUX07y5cXKResUeJBHy4VMkir&#xA;9qjePhl2CPFMBhM0En/K/wAwHXTqbrb/AFeK2MKRtz58q8+1Fp0r9OS1sDjrracHqtV83+ZZNJ1b&#xA;6qlsJy6oEJfjXl17HptlOLRjKOImm/8AMyx+kBmtuxeyjYEUaJWG3iuYtUaZk2Eu1iX0rJnpyowU&#xA;CtKknb8cOoNRZaON5EHpGsMYmZYwObcWBNdwPo8cxYZNnOzYPVzYT5285Naa5IptBIyJGGo/H4XU&#xA;jpxb5fdmLnzVLk7ns7s/jx/VW/d+12g6lE/nCCNYWEiXTws5cEUJah48fn322w4yPE+LHU4ZDTXe&#xA;3CDy93m9ftQfXWp6V/VmxDzE+SOyTU7FWL+cbqeK30C2RqQahqUFneRkAiSCWGXnGag7NTtiqP03&#xA;yp5d0y+urnTrGOzuLtIhczQVjaQRAqgcqQTxXYVxVE+XP+Ue0v8A5hIP+TS4qmGKuxV2KuxV2Kux&#xA;VZN/cv8A6p/Viq/FUDrGvaLolp9c1e/g0+1qF9a5kWJKkgAVYjucVRhIaMspBBFQR0pTFVq29usj&#xA;yLEgkkILuFALFehJ70xVdHDDEvGJFRRsAoAFKk9vniq7FUku0VpZlYVVmYEe3fLRyYFA2Oi6RbXX&#xA;rW1pFDK9VLooViCKmpGSy5JEc0wiLV9S02wu40S5t0nWpIWQchXxochimb5s8sQ63tra2gFtbxpH&#xA;BuPSVRxptXbpvTJHc2Wvkwjz1/ytc65bT6HGsfluGWGS7khEPrulA07SSTSNSILzqEj5VC065Ac6&#xA;ZMI/KXzl5i816/JpfmS6Go2M1pNcfVJYovT/AHciIh+FRXct18M3GrwRxxuGxtoib5vZtN0fS9M5&#xA;Lp1rFZiWnq+igTkFqRXjStKnNZORl9RttjtyddaRpd5OJ7q0inmAp6kihmoOgqcYyMRQKDvzTKON&#xA;Vt0CiiqoAAJoBTMUndygNmKfmheT6d5XN1aN6cqzxCvWoJNRvXMfVZCIO07HwQnnESOhS38qLifU&#xA;rDUWvnFwY50ETFVX4GTkDRQOtcr0psG+9ye2sccc48O3p8+9l115X8u3c7zXWnW88rgAySRqzECh&#xA;AJOZBxxPMB1ePV5YCoykB7yl3mHSdM07QtT1WxtIoNSgtZZobpUXmsioWDVI8RkckQASBvTdpcs8&#xA;mSEJEmBlEVZ5WxP8ovN/mTWfNL2+o3rXNr9SeRYyqACRHjQmqqN/iJp75j6XNKUtz0dt25oMOHCD&#xA;CNS4/PlReyZsHlEt8ya5FoWiXWrSwyXKWqg+hDxDuWYIqrzKLuW7nFXm+sedr7U9c8q6bPpRtEXz&#xA;DLA05mR6GyQhfhUdZFl5Hei9Knsq9XH983+qv62xVJ9JXzHa6VZ2ps7NjBBHEWF3KASiBa/7ze2K&#xA;or1/MX/LFaf9Jcv/AGTYq71/MX/LFaf9Jcv/AGTYq71/MX/LFaf9Jcv/AGTYq71/MX/LFaf9Jcv/&#xA;AGTYq71/MX/LFaf9Jcv/AGTYq71/MX/LFaf9Jcv/AGTYqtln8w+k9bK0A4nf63Ke3/MNiq71/MX/&#xA;ACxWn/SXL/2TYqxPzn5BvfNUwnuoobacWc1gJI50kpDcSRvLQXFjMAzCLjUdjirJ4f8AEFvaJAtp&#xA;bOsUYQPJeys5CrSrMbbc+JxV5p5jb8+E1+WbTUeTTIr6S4tIIGs+EllBBNIbaf1gH5XE4hjiZSKK&#xA;W5ceuKpv+WcX5wJrDr53lMlnDbzwI6/VvTlkSSBoZ6RDmGdJJVIrT4eg7qvSsVSG7ngW4lUsA3Jq&#xA;jvQZITjyT4cudbIG01nSb64+r2t1HNP1MaGrBR1y6cDEWQ1A3yRVxNFbrznYRhjsW2GRjudmRBHN&#xA;Lr3zT5bspAl3qEMDMAwDsASpqFP/AApyyOGR5BgZB5PeeUPzBvPzHbXbWCWTQ5b+3mt3S5jEZtTI&#xA;rPIIzJWhQH4eNTy2zYDNiGLhP1UenVjRu3o2geVdag8xXGt6vqLXkpgmiijSV/S/e3csgrCFihVY&#xA;baOEIePIlpKnYHNOBXNuKe2Wp6ZfT3EFldQ3Mtk4jvI4XV2jcgMFcKTxNDk+IIESsu9a0qyuBBd3&#xA;UcM5HIRuaE16GmTjAyFgbMSa5plE0bW6Mu4ZAQadQRmKebkiqY1+Y0F7deWnj03e79aJkoyx/Zbf&#xA;4mKj8co1MZcGzseysuMZxx/TR6X0Sr8s0uNKsr+PVpRGZZg9uHlWU8Qm4qrP075HR45kH3t/bWfF&#xA;KcTH+b3Uya483eVraV47jUYInADFWNCAdgenjl05iJqRouDh0mTJHihEkILXda0rUNG1HStOu45d&#xA;UntpYYLdG4uZmQqo3pQ8vHK5zBBAO7dpsEsc4TnEiAkCTXS2OflT5W836X5na71mCSK3eyeKrzJI&#xA;PV5px2V3O6LWuU6bHOMrl3Oz7Z1mnyYRHGRfFfIjaj5d713M95dxAYUIqPA4qwnzXG3DyhK0jMX1&#xA;i0YqQlKtBKT0UH8cVZmP75v9Vf1tirof7mP/AFR+rFV+KuxV2KuxV2KuxVZN/cyf6p/Viq/FWI/m&#xA;B+aPlXyJZvca28xcW8l1FbwRM7OsbpHxDbRhmeVQOTD7hirKxIkkIkjYPG68kdSCCCKgg9Diq/FX&#xA;Yq7FWN3+mTS3M0odQObEDfp4ZVw+q3LjlqFV0Y35U8mXej6qLyS6SfnzDqFKklht49N82Wpz8cap&#xA;wMMKkyDXdOkv4oYwwQK5Y9TXamY2nnwktuYXTCfMX5W6jreoW92l/DEluhRUKMavyZ69em42zNx6&#xA;4QBFc2j8uZb2zPR7GXTtIs7B2Ej2cEVu0gqAxiQLUA+PHMac+Ik97MCtm9Y0i31rRdR0W6Z47XVb&#xA;O4sp5IiBIsdzE0TMhYMOQDbVGVzOzKIssfj0jyp+XC6xryG6Nvq06k2UMXrcW5SyJFbw28QY0Mrq&#xA;OVaIqLXigynm2D0pSlgnn2CLzPp831S3uIngWCYB3VoZHhkq0bMhFValDmw02fgjVdXHyx4pW9Bt&#xA;2aOzihoCURUrXrRaZhmBu28T2pQ1XTJryzNurKhYg8jU9DXwyvMeONN2mPhz4uaUv5XnVSpnXkfi&#xA;LAH9qlf+I5ZpPRaNbl8QjpTGte/K+61LUhdR3scSGERSIyMa0r8XX3r88xtVpDlyGV07Xs3tqOnw&#xA;jGYk0bROl+T7i280waibpWpKzPHxI5AsaCte23btmPHDU7tuy6/i0/Bw9B19z0m05estQOh6H+zM&#xA;0OinyR+SanYqw3zX/vL5O/7a9l/1Dy4qy8f3zf6q/rbFVNp1t7E3DglIovUYDc0VamnTFXmNz+eF&#xA;ylzZougmGG9/Rstubm5RZJIdRR3ARYlmUz0SkcXL4t9xTFXquKpb5m1CfTfLeq6jbhTcWVncXEIc&#xA;VXnFEzryAI2quKoz6vL/AMtMn3R/80Yq76vL/wAtMn3R/wDNGKu+ry/8tMn3R/8ANGKrJoJfRf8A&#xA;0iQ/CdqR+H+piq/6vL/y0yfdH/zRiqB1Hy3pepCQahEl2JYJLWUTxQScoJSDJE3KM1RioqMVRjW8&#xA;oQgXElANhSP/AJoxV5XrHkD81Lu8nGm6ymmt9ckvn1WS8vLn62I5mms7c2I9GK2ROSRuY3IYLurA&#xA;0xVK4vyz/N9dcjvP0sPqi34ufSfVb1wS0wd5WjEaKyCIemkQIp0YsDXFXuGKpRdSuJJVFOrZLg2t&#xA;PGeSXWt68k4UgDjXfxFDlcchmaLfkwDGOIKt7dyRorhQTU1G/fJTPByY4oeIaLFte8932kX62sVt&#xA;FJEYfXLsWB3LADY96DMrT6cZY8RPVpzT8OXCGS6bdve6ba3jqEe5iSYqOgMihiB8q5GUeEkdzC73&#xA;QvmTWZtG0mXUIY1lki4AI9eJ5sF7exyWPFxnhKDPh3S7y55hTzMLy31PT7aWKzMTCORPVXm4cHZ6&#xA;jalMc2mEKo80jKZMeb8wrPSIPqOk+X49P0mEX8NlNJLFbWolsNXtdKmkdYhM0Vus1600sjAHipbi&#xA;a5RxUyq3oGkXH1/SbLUPTaA3VvFcfV3+0nqoH4t03WtMh4h5NgxjmiL2eSCD1FAYg9D/ALeVE0G+&#xA;EbNKVnM13yZwF4gUA79cljyGmObELSrV9amsr426RqykCrsSDUivbtvkZ6kxNU34NDGcbspPp/mG&#xA;aXzBDaGFQrXDxl6moZSe33ZjRy3OnOyaWsPFfQM/ta+sv0/qzMDp58kdkmp2KpLdaLbarpukrM8k&#xA;b2kkN1byxFQyyxxMFPxB1OzHYjFVcaXfeqw/S939ld+Fp4n/AIoxV0Wl3xiQ/pe7HwjbhaeH/GDF&#xA;Wv0Lcbf7lLr4acf3dntx6U/0ftXFV/6Lvv8Aq8Xf/AWn/ZPiqTeddNvE8m687ardSKunXZMbLa8W&#xA;AgfY8YFah9jirKsVdirsVWTf3L/6p/Viq/FWA/mb+aMnk0LDbaX9fuDCLmWWW5t7WCOEOVarTOrO&#xA;9FbiiKSx2G+2Ks7DrJCHWvF15LUEGhFdwaEYqky+evJp1N9L/TVmNQSY2rWxmQOJwGYxUJ+3SNvh&#xA;67HFUVpnmXy9qotzpupW159ajee29CVH9SKP0+bpxJqq/WI6ntyXxGKpliqU3Ah5ykkcqtXf3wWW&#xA;wRFIIRwIysFUN4j5dMtEYjk1nJIjcqqxwSbS0YUrQnIZQyxGioXGiaDcyF7i0gmagTk6qx49eO/a&#xA;uCOSURQNM5REjZRUcFpFCsUQVI414xqpoFVdgAPADAZElHDGlt1Z2F1H6NzGksTEckejKSNxsfcY&#xA;ROQ5FTCKhBpulWPI2VvFb+p/e+kAvIjpWnhXLI5JS+otc4gckXD6XpFGKlW5BlNKEP8AaBHv3yuf&#xA;NnACmA2kH5uy2kN1e3EaTzReXLme1gigRIzJeS/pu1UtLK37u2MZMnI1AonxHBSLL0CRIXUK9Ctd&#xA;wTt0ORbbpRKwxNSGiAgbKfnlmOIa8sz3oeazsp3Z5YkkY0+JgCTTYdckccDzCI5sg5EqcWl6Ulws&#xA;6W0SShw3qBQG5E7tXrXc5E4oAXW7P8xkOxkaTqzKeuKNU71Fa9sgET5I/JNancW9vcwtDcRJNC9O&#xA;cUihlNDUVU1HXFUPp6Imn6eiKFRI4wqgUAAioAAOmKokf3zf6q/rbFXQ/wBzH/qj9WKr8Vdiqy4t&#xA;4LmCS3uI0mt5kaOaGRQyOjCjKymoIINCDiqz6lZf8s8f/AL/AExV31Ky/wCWeP8A4Bf6Yq76lZf8&#xA;s8f/AAC/0xVZNZWfov8AuI/sn9hfD5Yqv+pWX/LPH/wC/wBMVWvpunP9u1hbp1jU9DUduxxVt7Kz&#xA;4n9xH0P7C/0xV5rrn5AeXtZubyS71a/SG61F9WSCEwx+lcusy/C4j58V+ssQK9hiqfeS/wArdJ8p&#xA;3kE9nfXVzFZ2j2VhbT+jwhjmFv65BjjRmMn1GH7RPGhp1xVmeKpZcMKy/Nu2R6to5ICOeKRlWNuT&#xA;bmg8aZb4kT1azhkOYXyMsXH1PhB6V7nCckUDFI8ghX1SwjfjJMqsQWANenj+GR8aA6tg0uQ8ghz5&#xA;18qxyfVX1GMT8hGY6NXm32R075jSzQ4ubmx7Pz8F8JqnRecvLF8fStdQjlcL6lAG+wDxruP5jTJY&#xA;88L5oz6DPEbxPNMbC9tbh39CQScAKgV2B6ZZKYlycUYpQ+oUrPd20TsrvxI3IIPTIEhnGJKW6+de&#xA;eysk0RxFLJcwLdzlUcx2v+7XVZCAWp06/I4QwPJjvlj/AB/DrdsPMDXb6db6c31q+mmtfQa4EjN/&#xA;cw/GG9OjNIdv2QB3kWERR3ZLpmv6Lrlqb3R72K+tAxiaeBg6B0+0tR3HIVyeNjkNqV75v8t6Zciz&#xA;v7+O3uiAwhflXieh2B2yf5ectwLCxyxAolDzefPKCBoH1OJZYw5dDyBAiqXJ2/Z4NXDHS5OdKcsa&#xA;q1byp508ra5qX1bSdRivJljeQxx8q8EKhm3A2Bcffk82GcRZFNcSGYZjM3Yqg7MgWNhUgVRBv/xj&#xA;OKpXq/nvyXot4kOr67Y2Ek8KywpcXEcZeMsy815EVWqkVxVAx/mz+WKxqr+atKDKAGBu4diBv+1i&#xA;q7/lbf5X/wDU16V/0mQ/81Yq7/lbf5X/APU16V/0mQ/81Yq7/lbf5X/9TXpX/SZD/wA1Yq7/AJW3&#xA;+V//AFNelf8ASZD/AM1Yq7/lbf5X/wDU16V/0mQ/81Yq7/lbf5X/APU16V/0mQ/81Yqtk/Nn8sWj&#xA;ZU81aUWYEKBdw7kjb9rFV3/K2/yv/wCpr0r/AKTIf+asVYD+aXnPTdft1tvLfn/SbG0NuyzwjUo7&#xA;V5JvXhdD60aySIBGjj4Tv0I3qFWbWn5rfltHYwxT+bdJkuEiVJXW8jIZwoDEFnLbnxNcVYnrn5+S&#xA;aebg2+nWVxH6k6wMb/i0CW0/olr9fSPoGcfvIFBbmtabihVZr+X/AJt1bzNDqVzeWcFpb2twkFp6&#xA;MskjurwR3FZFkji4HhOgpvvX6VWV4qwXVPP2nW2uPo728zTtcfVxIOPDm5A7mtPjHbMWWcCXC7fF&#xA;2bOWLxARVWiNUuY/L1jLqtwDNDEVHpRgciZGCKBUgdWwyIgLa8UJZ5iA2J/UgtA81WPnCOYWUUtu&#xA;toVLmbjuXrsOJP8ALkceUZBs3arRT0hHFR4u7+xdq2klruOsvF0GxC1B3J8RjOG7HBmIB2+1j7/l&#xA;VJPq36WTUFWF3imFuYySPTKn7XLqeJ7d8q/K3K7c8dtcOLw+HfcXfffkt038t38uLLez363KGJoQ&#xA;FiKkc3Vh1Y9CnT3yeDRG6tr1vbgyRHpqjfP3+XmyfyoY4zPwJclY68gFoKtToWzNGkMOrp8+tGWt&#xA;qpNJ7BrqYzBgoI4lTvlU8e6cWahyRKS8YQtOgA6+Ay4Y3HORViuxG6uVrSvf6MIxljLJbHJ7rTPK&#xA;ml2Nkkd1cxXV9NDAsaetMZrtri+IKoF+EcWUUHhhHpYc2Aa9odr5uuLPzLBdyWsOsaba3NrBJEHe&#xA;KK4hWQc6SUrwcggZs9NnqFV1aMkN1O5/Lpb3WL2mocHv0uYI19Gqx+urozf3m/2mPTfJjUkQG3Ku&#xA;qOD1Mg/Kr8pJvKHmY6m2preRtZPZrAITGRykSQvyLv8AtIdqd8x9Xq/EhVVvbbCNF65mubXYq801&#xA;vyrBqd4l1cXN08iS2ckFpNZ309rH9Vt5YnT00pE4lMp5MvUd8VX/AJVaJ+hNY1PTWKNNFptg87w2&#xA;stjC0k19qczGOCX7C/vOi/COgxV6LD/cx/6o/Viq/FXYq7FXYq7FXYqsm/uZP9U/qxVfiqA1rX9E&#xA;0OzN7rF9DYWi7Gadwi/ecVRayxTW4liYPFInNHU1DKwqCCOxGKue3t3Dh4kYSU9QFQeVOlfGmKqg&#xA;ABJAoTufc9MVdirzzVfLWlSeYbi9eNjcm4WcNyNOSHbbpmJLGOO3c4tVkGHhB2ohRvL2TX7WXTb9&#xA;VNpMqyH0+SNVHVh8QPZhkTPjFHk2Qx+BITgfUD5dxUtN0+z8sJcy6THwa8KGQSFnB4BmFN9qVOCI&#xA;EAeEc2WbJPUEDIfpvu8kg82fmDrNneRrDFbuTAkxMivtV3janF17quVZdQR0Dn6DsrHOJsy+qunc&#xA;D3PSdDuWvNCsLwnibm2ilKgAAF0DUFa+OZ2M2AXndTj4Mko90iPtSz8wL+TTvLE90vFykkQpICVo&#xA;8gUk8eJ2r44J5jjHEObdotJHPlEJXRvl5C2Pfljr91q36U+tRRwzW5hXjEGAo3Mb8mfpx7ZLS6qe&#xA;a+Lo29sdmY9Lw8BJEr5+VeQ72Q6trt5YXQhi4GMU58gSRX5EeByGfKYyadHpozhZtNogXjj5HcqC&#xA;1KdSMzB9LrSPVSU+eNWutC0GTUbQK8sckassoJXgT8ZopU14jbfJ6YeJPhK5hwxsMV8redtT12wS&#xA;61K0s5JIboS237osI2iHwyrydqMCzb1zLz6WMZVu0QyEhB+cNQ1WwtLE6RYra2j6dKlsbexubqJJ&#xA;bWeC3trYR23FYY/SY8mJ2UHippTMSUzA8IbABLdivlj8zPMF9+ZC6RcQ2y20moy2aMiOJCsRYk1L&#xA;ldgig/D3zPyYQMd+THq+gtOH+lDeoAIzWT5NgRF7rmi2EohvtQtrSVl5rHPNHGxUkjkAxBpUHK2S&#xA;H/xZ5V/6vNj/ANJMP/NWKqS+avK4SEfpiyqtOX+kw7fCRv8AFirF7/znYaX5yvtQtoRq9ne6dY26&#xA;TWV7pacJbae8d1cXd3an7NyhHEHFVVPzXtVRV/Ql2eIAr9f0EVp89TBxVd/ytq0/6sd3/wBJ+gf9&#xA;5PFXf8ratP8Aqx3f/SfoH/eTxV3/ACtq0/6sd3/0n6B/3k8Vd/ytq0/6sd3/ANJ+gf8AeTxV3/K2&#xA;rT/qx3f/AEn6B/3k8Vd/ytq0/wCrHd/9J+gf95PFVr/mvasjL+hLscgRX6/oJpX5amTiq7/lbVp/&#xA;1Y7v/pP0D/vJ4qxrzLrvlvzDqMF9f6Lf+pBAbXgt95d4tC9zDcSoeWoswEot/Seh3RmHvirJG/Nm&#xA;1KkDQ7utP+W/QP8AvJ4q83sPMn5xwWswk1+xlmltppQJrrTm4O8cRRUZGWkqv6ihCCgpXkeVFVb8&#xA;p+dvzPhi0SXVdUt2S1uIn8xrqF7p0bXCziO39GzEPIMUd5JKMyAkJRjupVfQeKpNeQ25adyqmQcq&#xA;NtWu+QIb4y25sI8pjUm1rhewMlsUZlLxcFFRXhXiPH8MxMPFxbj7Hca04/DHCd77/wBqaedYriOy&#xA;gOmx1lDkkRxhzQDwoadcnnBrZx9BKJmeM7V3sC1211iV7aZNNMzrEPVraK5+J3qm8ZIAp098xZiW&#xA;232O70s8Q4gZ1v8Az/Ieb1HQ5beLQrCJ5FR0tolaM0jKkIARw+Hj8qbZn4/pDzWpF5JH+kfvS/zz&#xA;wufLlxDbBbqZnjCxACb9sb8CGqF69Mhm3iXI7PIjmBJob9a6d7GfIEOqQR3sk1obWRmiBAgEJfjz&#xA;PI8VWv2qe305Tp+IA7V8HYdqHFIxAlxDf+K65eaI8xfpn9Ip6MckkTJxdhDzoamhrxPjWmOXjtr0&#xA;nhCBsgb99fpZpaA/VoQ2zcF5du2bIfT8HnpfUfex/wDNBJ5PKcsdqollaaEceAn+HnufTYMDQb9M&#xA;t0VDJuuo+nZhvkVdXfTbgy2XoO1ywjj+rrHxjKjsEXbfrTNhnMeLn073FhdMc8+eY/zZ03XLiHy8&#xA;dSj0xIY/QhtbZmj9VyeR2jPRQSd+tMGOGIj1VfvbQSyOw8keaIPzA07VINFsE0BL83NxeBYUu/Tm&#xA;0eM8h1en6Q9Tn+2WoP7vprzmkdr2bKevac6G8KKwLItWUHcVqNx9ByEuSAm2VslG8tILy0mtJ+Rh&#xA;nRo5QjvG3FhQ0eMq6mndTXFXk+t/lr+Zz+SND0Xy/wCYjp2pWuhXFlq9y9zcS+tqMxtZPVSRqyfE&#xA;8M6iTrGH+FeoxVOpPKHntvP0WsHUS+mLfm44/XJ0iS0bTYLaSFbIIY2LXMcki1koux3Jaqq/8svK&#xA;nnLRLuV/MVw9y36PsbVrg6hPeC4uYIVE87RTKojJeoXhSq7tyY1Cr0HFXYq7FXYq7FXYqkvnLTtZ&#xA;1Hyzf2Wi3BtNUlRfq06yGEhldWI9QLJx5KCteJxVryhpGq6Vp1zbalePfSvfXk8E8shlf6vNO7wq&#xA;xIUAqjAcVFB0GKp3iqA8wWmpXmg6laaXciy1O4tZ4rG8IqIZ3jZYpSP8hyGxVQ8p2OrWHl6ztNWn&#xA;+sX8Qb1HMjzEKXZo4zLJ8cpjjKoXbdqVPXFU2IBFCKjY7+I3GKuxVAy287M9ErUtTcdD9ORpsEhS&#xA;021wSvwdDvuOlD740njDvq9xUHgdvdf640vGHC2nBPwGhPiPD540vGHkOs/ld5xu/N1xqcVtGbRr&#xA;4XMTGWMHhyBbavWgGYE9NMzvpb1WDtjBHTiBJ4uCuSP/AC4/LnzXofmEX+pW6JF9VeAlJUcluS8d&#xA;gf5Vp9GS0+nlGVnuae1u1cObFwwJvivl73qH1a45V4HpvuP65m083xhoW1xvVDv7j+uNLxhr6rc+&#xA;lx4HlSnVfD54gboMhTDPzS8oeYfMHk640rSYVa8meMgPIqDirgt8RP8ALtmfpc8YTBPJx5RJCX/l&#xA;D5A8zeV9Lv7TVIEQyTIbcRyI4KKgDMaHbk1TT3yer1EckgQiMCGffUbqo/d7DfqvX78xOMM6XQ2V&#xA;yssZZKKrAk1Hj88BkKWmJ+Qvyun8reYJtUa9t5ke2ltSsNu8c0vqXAmSS4lkmm5NEqlV4gbNQ7Iu&#xA;VsnoGKuxV2KuxV2KuxV2KsW8zfmX5T8s6rDpusXD2805tURxGzp6l88yWyHjU1f6pMa0oAu5G1VU&#xA;r1b84dGsNJl1WPTb68s7TTV1fUmiECtawyNLHGjrLLGXdpbaRKR8gKVJoRVVB3n/ADkL+WFshlW/&#xA;lnhiupLO8ljt5uNvJGjuPU5Kv95w4xqKsxNAOuKsn8o/mB5V83fW/wBAXbXX1IQNccopYSFuY/Vi&#xA;NJVQ/EuKsixV2KuxV2KuxV2KuxV2KuxV2KoLWda0zRdPfUNTnFtaRsiNIwJ+KVxGigKCSWdgBiqQ&#xA;t+aXkc6PNq9vqIu7OBbVnNqjzORfT/VbcKiAsxeesdB0YGtMVWp+bP5cmBZ3161hj4JJMZ39IwLK&#xA;oaP6wJOJhLV250riqMP5h+R/rcdr+m7MyTSejEwmQxvNzMforIDwMnJT8Fa7YqvHn/yMbC11AeYN&#xA;PNhemVbS6+sxelKYK+rwflxPCnxeH04qg1/Nb8tGJC+aNMJUAkC6iJFRypTl1p2xVfJ+aH5cRh2f&#xA;zPpgWNebt9bhoF4epWvLpw3xVkdvcW9zbxXFvKk1vMiyQzRsHR0cVVlYVBBBqCMVVMVdirsVdirs&#xA;VdirsVdirsVdiqTav5N8r6zeJearpsF7cRqio068wPSLmJuJ25RmaTg3VeTU6nFVGbyB5KuLSztL&#xA;rRbO7gsIGtLUXMSzFYXXi6cpAxbmPtV6nc74qoj8s/y8DMw8t6cGcyszfVoqkzp6chJ4/tJ8PyxV&#xA;NNI8ueX9GaZtJ062sDcCNZvq0SRclhXhGp4AbIv2R2xVMcVdirsVdirsVdirsVdirsVdiqV+ZfLe&#xA;neYtKbTNQ5+g0kUwaNuLB4JFlQg/NaHxGKpDZflJ5Jtbe5tWtZLq0uvqgmgupZJ1YWNybuLkZCzP&#xA;++NWDEhgAv2RTFXR/lD+X8es3WsR6WEvLuW3nm4ySCLlaU9ECIN6YVeI+GlKbdNsVQNr+Qv5WWlp&#xA;DZ2ujejbQXCXaRpPOAZo6cXb49/sjriqNi/KDyFDpNrpMNjLFY2aXMUccd1cozRXpQ3EcjrIGdHa&#xA;KNuLHqi+GKoC/wDyI/L+6sjbrDdQSteJqLXqXc7XBulkErTGSR3PN2BLHxNRirUH5A/lXA980Wjk&#xA;HUIkhuKzzkcYnWSMgFyOSyIGDda4qzvTtPtNO0+10+yj9Kzs4kt7aKpbhFEoRFqxLGigDc4qiMVd&#xA;irsVf//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:b11fc92f-cc5e-43f7-93d4-1c4971273c49"
    stRef:documentID="xmp.did:b11fc92f-cc5e-43f7-93d4-1c4971273c49"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:21dd3f47-5830-496f-abf7-c12570e35368"
      stEvt:when="2019-04-03T16:03:44+13:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2017 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6c466b9e-415f-49a2-bd79-ed0987b30324"
      stEvt:when="2019-04-03T17:24+13:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2017 (Macintosh)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="170.000083"
    stDim:h="225.001667"
    stDim:unit="Millimeters"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="TimesNewRomanPSMT"
      stFnt:fontFamily="Times New Roman"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 5.01.3x"
      stFnt:composite="False"
      stFnt:fontFileName="Times New Roman.ttf"/>
     <rdf:li
      stFnt:fontName="ArialMT"
      stFnt:fontFamily="Arial"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 5.01.2x"
      stFnt:composite="False"
      stFnt:fontFileName="Arial.ttf"/>
     <rdf:li
      stFnt:fontName="Helvetica"
      stFnt:fontFamily="Helvetica"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="12.0d1e3"
      stFnt:composite="False"
      stFnt:fontFileName="Helvetica.dfont"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
        <rdf:li
         xmpG:swatchName="CMYK Red"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="CMYK Yellow"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="242"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="CMYK Green"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="166"
         xmpG:blue="81"/>
        <rdf:li
         xmpG:swatchName="CMYK Cyan"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="174"
         xmpG:blue="239"/>
        <rdf:li
         xmpG:swatchName="CMYK Blue"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="46"
         xmpG:green="49"
         xmpG:blue="146"/>
        <rdf:li
         xmpG:swatchName="CMYK Magenta"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="236"
         xmpG:green="0"
         xmpG:blue="140"/>
        <rdf:li
         xmpG:swatchName="C=15 M=100 Y=90 K=10"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="190"
         xmpG:green="30"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="C=0 M=90 Y=85 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="239"
         xmpG:green="65"
         xmpG:blue="54"/>
        <rdf:li
         xmpG:swatchName="C=0 M=80 Y=95 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="90"
         xmpG:blue="41"/>
        <rdf:li
         xmpG:swatchName="C=0 M=50 Y=100 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="247"
         xmpG:green="148"
         xmpG:blue="29"/>
        <rdf:li
         xmpG:swatchName="C=0 M=35 Y=85 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="176"
         xmpG:blue="64"/>
        <rdf:li
         xmpG:swatchName="C=5 M=0 Y=90 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="249"
         xmpG:green="237"
         xmpG:blue="50"/>
        <rdf:li
         xmpG:swatchName="C=20 M=0 Y=100 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="215"
         xmpG:green="223"
         xmpG:blue="35"/>
        <rdf:li
         xmpG:swatchName="C=50 M=0 Y=100 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="141"
         xmpG:green="198"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=100 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="57"
         xmpG:green="181"
         xmpG:blue="74"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=10"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="148"
         xmpG:blue="68"/>
        <rdf:li
         xmpG:swatchName="C=90 M=30 Y=95 K=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="104"
         xmpG:blue="56"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=75 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="43"
         xmpG:green="182"
         xmpG:blue="115"/>
        <rdf:li
         xmpG:swatchName="C=80 M=10 Y=45 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="167"
         xmpG:blue="157"/>
        <rdf:li
         xmpG:swatchName="C=70 M=15 Y=0 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="39"
         xmpG:green="170"
         xmpG:blue="225"/>
        <rdf:li
         xmpG:swatchName="C=85 M=50 Y=0 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="27"
         xmpG:green="117"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="C=100 M=95 Y=5 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="43"
         xmpG:green="57"
         xmpG:blue="144"/>
        <rdf:li
         xmpG:swatchName="C=100 M=100 Y=25 K=25"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="38"
         xmpG:green="34"
         xmpG:blue="98"/>
        <rdf:li
         xmpG:swatchName="C=75 M=100 Y=0 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="45"
         xmpG:blue="145"/>
        <rdf:li
         xmpG:swatchName="C=50 M=100 Y=0 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="146"
         xmpG:green="39"
         xmpG:blue="143"/>
        <rdf:li
         xmpG:swatchName="C=35 M=100 Y=35 K=10"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="158"
         xmpG:green="31"
         xmpG:blue="99"/>
        <rdf:li
         xmpG:swatchName="C=10 M=100 Y=50 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="218"
         xmpG:green="28"
         xmpG:blue="92"/>
        <rdf:li
         xmpG:swatchName="C=0 M=95 Y=20 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="238"
         xmpG:green="42"
         xmpG:blue="123"/>
        <rdf:li
         xmpG:swatchName="C=25 M=25 Y=40 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="194"
         xmpG:green="181"
         xmpG:blue="155"/>
        <rdf:li
         xmpG:swatchName="C=40 M=45 Y=50 K=5"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="155"
         xmpG:green="133"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="C=50 M=50 Y=60 K=25"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="114"
         xmpG:green="102"
         xmpG:blue="88"/>
        <rdf:li
         xmpG:swatchName="C=55 M=60 Y=65 K=40"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="89"
         xmpG:green="74"
         xmpG:blue="66"/>
        <rdf:li
         xmpG:swatchName="C=25 M=40 Y=65 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="196"
         xmpG:green="154"
         xmpG:blue="108"/>
        <rdf:li
         xmpG:swatchName="C=30 M=50 Y=75 K=10"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="169"
         xmpG:green="124"
         xmpG:blue="80"/>
        <rdf:li
         xmpG:swatchName="C=35 M=60 Y=80 K=25"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="139"
         xmpG:green="94"
         xmpG:blue="60"/>
        <rdf:li
         xmpG:swatchName="C=40 M=65 Y=90 K=35"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="117"
         xmpG:green="76"
         xmpG:blue="41"/>
        <rdf:li
         xmpG:swatchName="C=40 M=70 Y=100 K=50"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="96"
         xmpG:green="57"
         xmpG:blue="19"/>
        <rdf:li
         xmpG:swatchName="C=50 M=70 Y=80 K=70"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="60"
         xmpG:green="36"
         xmpG:blue="21"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grays"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=90"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="65"
         xmpG:green="64"
         xmpG:blue="66"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=80"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="88"
         xmpG:green="89"
         xmpG:blue="91"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=70"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="109"
         xmpG:green="110"
         xmpG:blue="113"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=60"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="128"
         xmpG:green="130"
         xmpG:blue="133"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=50"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="147"
         xmpG:green="149"
         xmpG:blue="152"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=40"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="167"
         xmpG:green="169"
         xmpG:blue="172"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="188"
         xmpG:green="190"
         xmpG:blue="192"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=20"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="209"
         xmpG:green="211"
         xmpG:blue="212"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=10"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="230"
         xmpG:green="231"
         xmpG:blue="232"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=5"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="242"
         xmpG:blue="242"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Brights"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=100 Y=100 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="C=0 M=75 Y=100 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="101"
         xmpG:blue="34"/>
        <rdf:li
         xmpG:swatchName="C=0 M=10 Y=95 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="222"
         xmpG:blue="23"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="161"
         xmpG:blue="75"/>
        <rdf:li
         xmpG:swatchName="C=100 M=90 Y=0 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="33"
         xmpG:green="64"
         xmpG:blue="154"/>
        <rdf:li
         xmpG:swatchName="C=60 M=90 Y=0 K=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="127"
         xmpG:green="63"
         xmpG:blue="152"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 240 
/Lookup <~
z!W`<%!s/Q)"U"r.#R1J5#mLS6#m^e:$O[7@%1<LC&.K$J&J#BP&e>KQ'G(fU((q5[()%;\(_m_b)&<q
e)]0:i*#BIm*>oaq*uc*u+<2=#+WML&,9@j*,p+0.-QsT4.3]r9.O-2=/0uPA/12_D0e+UP1+FaR1b1-
X2D$K\3%lob3A<,e3\`>h4Ynko4u>(r5;b7t5W:S$69$n(6TR.+6om=.7QNX37m/s783T0:8O#B=9Kt`
A:.%>J:IIPM:dmbP;b':W<(9=W<(KLZ<_,g_=%c-c=\MKh>#%cl>Ye)p?;FE!?W'`%?rKr(@oZJ/A6)\
2AQMk5Alr(8B384:BNnU@Bj+^CC0b$GCgC9JCgC?LD-gKND.$ZRDdcuVE+32ZEFN>\EarP`F(AbcFD#%
gF_54lG%Y@mGA(RqG\LduH"q"$H>@4'HY[=)I;EX.HuEd2I;Ng4IrB0:J8fB>JT5TAJT>ZCJokuJK6)#
JKQM2ML3I_YL3[n^Lj4%_M0X7cLjO=fM0sOjMgTanN.#srMgfstN.6.#NdlC'O+;U,O+;X.OF_j2Ob/$
6Ob8-9P(S9=PD"H@P_FZDP_FcJQ%srKQA:)OQ%juPR#6S[R>HV[R#-V_R#6_cR>cndRZ3+iR>d"jRuN4
lRuW=oS<&OtSW/S"SW8\%S<&Y'T9,"+Srnt,Sro"/T9>44T9G=7TokI;TotO>TotR@Tp:^BTp:aEU6^p
IU6h$MTpCpNUQq'OUQq'QUmI9TUR@<VUm[HZUmIB\V3mQ`UmdQ`V3mTcVO<fhV43cgVO<fjVja#oW192
qW192sVjj,uW109$WL]E%Wh#Q)WLTK+WgfN,WL]Q/WL]T2X.Pl5XIYo7Wh,f9X.Pu>XJ)/@Xe)/BX.Z)
DXe25EX.Z,GXeMDJXeMDMY+VJPXJ)>QY+qVTY+qVWYG%\ZY,%\ZYG.b]YbRk^YGInaYG.ecYbRtgZ)+.
iYbn+kZ)"1nZDF:oZDO@rZ_jM!ZDFD"ZDFG&Z_sS'[&9_+[&Be.Z_jY/[&Be/[A]n2[Ag"6[Ag"8[]-+
;[\p(=\>c=?\>c@B[]64C\#?:F\>ZCH\Z2OI\>cIK\>cIL\Z2RM\uM[O\>uOO\uVaR\uVaS\uVaU\Z2[
V\ZDaX];qmZ];qm[]WA'^]WA'`];qsa^8n6d]r\3f]r\3g^9"<i^9+Em^9+En^T=Ho^TFQt^TFQu^TFR
!~>
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 0 
/Lookup <~
^TFR!~>
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 3 
/Lookup <~
?qjDsMg':aVNR$E^TFR!~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -229.352 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-05 0 mo
1.52588e-05 229.352 li
481.366 229.352 li
481.366 0 li
cp
clp
-.0276206 222.305 mo
470.102 222.305 li
470.102 -.878845 li
-.0276206 -.878845 li
cp
false sop
0 0 0 0 cmyk
f
-.0276206 203.847 mo
254.847 203.847 li
254.847 18.7462 li
-.0276206 18.7462 li
cp
f
246.519 188.013 mo
248.972 189.239 li
246.519 190.466 li
246.519 189.444 li
5.86438 189.444 li
5.86438 189.035 li
246.519 189.035 li
cp
.75021 .679683 .670222 .90164 cmyk
f
220.04 26.7682 mo
220.45 26.7682 li
220.45 25.1322 li
220.04 25.1322 li
cp
220.04 25.1321 mo
220.04 29.6302 mo
220.45 29.6302 li
220.45 27.9952 li
220.04 27.9952 li
cp
220.04 27.9952 mo
220.04 32.4941 mo
220.45 32.4941 li
220.45 30.8582 li
220.04 30.8582 li
cp
220.04 30.8582 mo
220.04 35.3572 mo
220.45 35.3572 li
220.45 33.7212 li
220.04 33.7212 li
cp
220.04 33.7211 mo
220.04 38.2192 mo
220.45 38.2192 li
220.45 36.5832 li
220.04 36.5832 li
cp
220.04 36.5831 mo
220.04 41.0822 mo
220.45 41.0822 li
220.45 39.4462 li
220.04 39.4462 li
cp
220.04 39.4451 mo
220.04 43.9451 mo
220.45 43.9451 li
220.45 42.3091 li
220.04 42.3091 li
cp
220.04 42.3082 mo
220.04 46.8072 mo
220.45 46.8072 li
220.45 45.1712 li
220.04 45.1712 li
cp
220.04 45.1711 mo
220.04 49.6702 mo
220.45 49.6702 li
220.45 48.0342 li
220.04 48.0342 li
cp
220.04 48.0342 mo
220.04 52.5331 mo
220.45 52.5331 li
220.45 50.8972 li
220.04 50.8972 li
cp
220.04 50.8972 mo
220.04 55.3962 mo
220.45 55.3962 li
220.45 53.7602 li
220.04 53.7602 li
cp
220.04 53.7601 mo
220.04 58.2581 mo
220.45 58.2581 li
220.45 56.6232 li
220.04 56.6232 li
cp
220.04 56.6232 mo
220.04 61.1212 mo
220.45 61.1212 li
220.45 59.4852 li
220.04 59.4852 li
cp
220.04 59.4852 mo
220.04 63.9842 mo
220.45 63.9842 li
220.45 62.3482 li
220.04 62.3482 li
cp
220.04 62.3481 mo
220.04 66.8472 mo
220.45 66.8472 li
220.45 65.2112 li
220.04 65.2112 li
cp
220.04 65.2112 mo
220.04 69.7102 mo
220.45 69.7102 li
220.45 68.0742 li
220.04 68.0742 li
cp
220.04 68.0742 mo
220.04 72.5732 mo
220.45 72.5732 li
220.45 70.9372 li
220.04 70.9372 li
cp
220.04 70.9362 mo
220.04 75.4362 mo
220.45 75.4362 li
220.45 73.8002 li
220.04 73.8002 li
cp
220.04 73.7992 mo
220.04 78.2982 mo
220.45 78.2982 li
220.45 76.6622 li
220.04 76.6622 li
cp
220.04 76.6622 mo
220.04 81.1612 mo
220.45 81.1612 li
220.45 79.5252 li
220.04 79.5252 li
cp
220.04 79.5251 mo
220.04 84.0242 mo
220.45 84.0242 li
220.45 82.3872 li
220.04 82.3872 li
cp
220.04 82.3871 mo
220.04 86.8862 mo
220.45 86.8862 li
220.45 85.2502 li
220.04 85.2502 li
cp
220.04 85.2502 mo
220.04 89.7491 mo
220.45 89.7491 li
220.45 88.1132 li
220.04 88.1132 li
cp
220.04 88.1132 mo
220.04 92.6122 mo
220.45 92.6122 li
220.45 90.9762 li
220.04 90.9762 li
cp
220.04 90.9762 mo
220.04 95.4752 mo
220.45 95.4752 li
220.45 93.8392 li
220.04 93.8392 li
cp
220.04 93.8392 mo
220.04 96.7021 mo
220.04 98.3382 li
220.449 98.3372 li
220.449 96.7021 li
cp
220.04 99.5652 mo
220.04 101.201 li
220.449 101.2 li
220.449 99.5652 li
cp
220.04 102.427 mo
220.04 104.064 li
220.449 104.063 li
220.449 102.427 li
cp
220.04 105.29 mo
220.04 106.927 li
220.449 106.926 li
220.449 105.29 li
cp
220.04 108.153 mo
220.04 109.789 li
220.449 109.789 li
220.449 108.152 li
cp
220.04 111.016 mo
220.04 112.651 li
220.449 112.651 li
220.449 111.015 li
cp
220.04 115.514 mo
220.45 115.514 li
220.45 113.878 li
220.04 113.878 li
cp
220.04 113.878 mo
220.04 118.377 mo
220.45 118.377 li
220.45 116.741 li
220.04 116.741 li
cp
220.04 116.741 mo
220.04 121.239 mo
220.45 121.239 li
220.45 119.604 li
220.04 119.604 li
cp
220.04 119.604 mo
220.04 124.102 mo
220.45 124.102 li
220.45 122.467 li
220.04 122.467 li
cp
220.04 122.467 mo
220.04 126.965 mo
220.45 126.965 li
220.45 125.33 li
220.04 125.33 li
cp
220.04 125.33 mo
220.04 129.828 mo
220.45 129.828 li
220.45 128.193 li
220.04 128.193 li
cp
220.04 128.193 mo
220.04 132.691 mo
220.45 132.691 li
220.45 131.055 li
220.04 131.055 li
cp
220.04 131.055 mo
220.04 135.554 mo
220.45 135.554 li
220.45 133.918 li
220.04 133.918 li
cp
220.04 133.918 mo
220.04 138.417 mo
220.45 138.417 li
220.45 136.781 li
220.04 136.781 li
cp
220.04 136.78 mo
220.04 141.28 mo
220.45 141.28 li
220.45 139.644 li
220.04 139.644 li
cp
220.04 139.643 mo
220.04 144.142 mo
220.45 144.142 li
220.45 142.506 li
220.04 142.506 li
cp
220.04 142.505 mo
220.04 147.004 mo
220.45 147.004 li
220.45 145.368 li
220.04 145.368 li
cp
220.04 145.368 mo
220.04 149.867 mo
220.45 149.867 li
220.45 148.231 li
220.04 148.231 li
cp
220.04 148.231 mo
220.04 152.73 mo
220.45 152.73 li
220.45 151.095 li
220.04 151.095 li
cp
220.04 151.095 mo
220.04 155.594 mo
220.45 155.594 li
220.45 153.958 li
220.04 153.958 li
cp
220.04 153.958 mo
220.04 158.456 mo
220.45 158.456 li
220.45 156.821 li
220.04 156.821 li
cp
220.04 156.821 mo
220.04 161.318 mo
220.45 161.318 li
220.45 159.683 li
220.04 159.683 li
cp
220.04 159.683 mo
220.04 164.181 mo
220.45 164.181 li
220.45 162.546 li
220.04 162.546 li
cp
220.04 162.546 mo
220.04 167.045 mo
220.45 167.045 li
220.45 165.409 li
220.04 165.409 li
cp
220.04 165.409 mo
220.04 169.907 mo
220.45 169.907 li
220.45 168.272 li
220.04 168.272 li
cp
220.04 168.271 mo
220.04 172.771 mo
220.45 172.771 li
220.45 171.135 li
220.04 171.135 li
cp
220.04 171.134 mo
220.04 175.633 mo
220.45 175.633 li
220.45 173.996 li
220.04 173.996 li
cp
220.04 173.996 mo
220.04 178.495 mo
220.45 178.495 li
220.45 176.859 li
220.04 176.859 li
cp
220.04 176.859 mo
220.04 181.358 mo
220.45 181.358 li
220.45 179.722 li
220.04 179.722 li
cp
220.04 179.722 mo
220.04 184.221 mo
220.45 184.221 li
220.45 182.585 li
220.04 182.585 li
cp
220.04 182.585 mo
220.04 187.084 mo
220.45 187.084 li
220.45 185.449 li
220.04 185.449 li
cp
220.04 185.449 mo
220.04 189.238 mo
220.45 189.238 li
220.45 188.312 li
220.04 188.312 li
cp
.37998 .307744 .312413 .00195315 cmyk
f
gsave
23.9334 23.5782 mo
23.9334 189.034 li
220.04 189.034 li
220.04 188.312 li
220.449 188.312 li
220.449 189.034 li
240.737 189.034 li
240.737 23.5782 li
cp
220.04 25.1321 mo
220.45 25.1321 li
220.45 26.7681 li
220.04 26.7681 li
cp
220.04 27.9952 mo
220.45 27.9952 li
220.45 29.6312 li
220.04 29.6312 li
cp
220.04 30.8582 mo
220.45 30.8582 li
220.45 32.4941 li
220.04 32.4941 li
cp
220.04 33.7211 mo
220.45 33.7211 li
220.45 35.3571 li
220.04 35.3571 li
cp
220.04 36.5831 mo
220.45 36.5831 li
220.45 38.2191 li
220.04 38.2191 li
cp
220.04 39.4451 mo
220.45 39.4451 li
220.45 41.0811 li
220.04 41.0811 li
cp
220.04 42.3082 mo
220.45 42.3082 li
220.45 43.9442 li
220.04 43.9442 li
cp
220.04 45.1711 mo
220.45 45.1711 li
220.45 46.8071 li
220.04 46.8071 li
cp
220.04 48.0342 mo
220.45 48.0342 li
220.45 49.6702 li
220.04 49.6702 li
cp
220.04 50.8972 mo
220.45 50.8972 li
220.45 52.5331 li
220.04 52.5331 li
cp
220.04 53.7601 mo
220.45 53.7601 li
220.45 55.3961 li
220.04 55.3961 li
cp
220.04 56.6232 mo
220.45 56.6232 li
220.45 58.2592 li
220.04 58.2592 li
cp
220.04 59.4852 mo
220.45 59.4852 li
220.45 61.1212 li
220.04 61.1212 li
cp
220.04 62.3492 mo
220.45 62.3492 li
220.45 63.9842 li
220.04 63.9842 li
cp
220.04 65.2112 mo
220.45 65.2112 li
220.45 66.8471 li
220.04 66.8471 li
cp
220.04 68.0742 mo
220.45 68.0742 li
220.45 69.7101 li
220.04 69.7101 li
cp
220.04 70.9362 mo
220.45 70.9362 li
220.45 72.5721 li
220.04 72.5721 li
cp
220.04 73.7992 mo
220.45 73.7992 li
220.45 75.4352 li
220.04 75.4352 li
cp
220.04 76.6622 mo
220.45 76.6622 li
220.45 78.2982 li
220.04 78.2982 li
cp
220.04 79.5251 mo
220.45 79.5251 li
220.45 81.1611 li
220.04 81.1611 li
cp
220.04 82.3871 mo
220.45 82.3871 li
220.45 84.0241 li
220.04 84.0241 li
cp
220.04 85.2502 mo
220.45 85.2502 li
220.45 86.8861 li
220.04 86.8861 li
cp
220.04 88.1132 mo
220.45 88.1132 li
220.45 89.7491 li
220.04 89.7491 li
cp
220.04 90.9772 mo
220.45 90.9772 li
220.45 92.6122 li
220.04 92.6122 li
cp
220.04 93.8392 mo
220.45 93.8392 li
220.45 95.4752 li
220.04 95.4752 li
cp
220.04 96.7021 mo
220.449 96.7021 li
220.449 98.3372 li
220.04 98.3382 li
cp
220.04 99.5652 mo
220.449 99.5652 li
220.449 101.2 li
220.04 101.201 li
cp
220.04 102.427 mo
220.449 102.427 li
220.449 104.063 li
220.04 104.064 li
cp
220.04 105.29 mo
220.449 105.29 li
220.449 106.926 li
220.04 106.927 li
cp
220.04 108.153 mo
220.449 108.152 li
220.449 109.789 li
220.04 109.789 li
cp
220.04 111.016 mo
220.449 111.015 li
220.449 112.651 li
220.04 112.651 li
cp
220.04 113.878 mo
220.45 113.878 li
220.45 115.514 li
220.04 115.514 li
cp
220.04 116.741 mo
220.45 116.741 li
220.45 118.377 li
220.04 118.377 li
cp
220.04 119.604 mo
220.45 119.604 li
220.45 121.239 li
220.04 121.239 li
cp
220.04 122.467 mo
220.45 122.467 li
220.45 124.102 li
220.04 124.102 li
cp
220.04 125.33 mo
220.45 125.33 li
220.45 126.965 li
220.04 126.965 li
cp
220.04 128.193 mo
220.45 128.193 li
220.45 129.828 li
220.04 129.828 li
cp
220.04 131.055 mo
220.45 131.055 li
220.45 132.691 li
220.04 132.691 li
cp
220.04 133.918 mo
220.45 133.918 li
220.45 135.554 li
220.04 135.554 li
cp
220.04 136.78 mo
220.45 136.78 li
220.45 138.416 li
220.04 138.416 li
cp
220.04 139.643 mo
220.45 139.643 li
220.45 141.279 li
220.04 141.279 li
cp
220.04 142.505 mo
220.45 142.505 li
220.45 144.141 li
220.04 144.141 li
cp
220.04 145.368 mo
220.45 145.368 li
220.45 147.004 li
220.04 147.004 li
cp
220.04 148.231 mo
220.45 148.231 li
220.45 149.867 li
220.04 149.867 li
cp
220.04 151.095 mo
220.45 151.095 li
220.45 152.73 li
220.04 152.73 li
cp
220.04 153.958 mo
220.45 153.958 li
220.45 155.594 li
220.04 155.594 li
cp
220.04 156.821 mo
220.45 156.821 li
220.45 158.456 li
220.04 158.456 li
cp
220.04 159.683 mo
220.45 159.683 li
220.45 161.318 li
220.04 161.318 li
cp
220.04 162.546 mo
220.45 162.546 li
220.45 164.181 li
220.04 164.181 li
cp
220.04 165.409 mo
220.45 165.409 li
220.45 167.045 li
220.04 167.045 li
cp
220.04 168.271 mo
220.45 168.271 li
220.45 169.906 li
220.04 169.906 li
cp
220.04 171.134 mo
220.45 171.134 li
220.45 172.77 li
220.04 172.77 li
cp
220.04 173.996 mo
220.45 173.996 li
220.45 175.633 li
220.04 175.633 li
cp
220.04 176.859 mo
220.45 176.859 li
220.45 178.495 li
220.04 178.495 li
cp
220.04 179.722 mo
220.45 179.722 li
220.45 181.358 li
220.04 181.358 li
cp
220.04 182.585 mo
220.45 182.585 li
220.45 184.221 li
220.04 184.221 li
cp
220.04 185.449 mo
220.45 185.449 li
220.45 187.084 li
220.04 187.084 li
cp
23.9334 190.793 mo
240.738 190.793 li
240.738 189.443 li
23.9334 189.443 li
cp
clp
23.5146 191.246 mo
241.237 191.246 li
241.237 23.0676 li
23.5146 23.0676 li
cp
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 .523621 229.352 ]ct
[217.723 0 0 168.178 22.9909 38.1061 ]ct
snap_to_device
<<
/T 1
/W 785 
/H 650 
/M[785 0 0 -650 0 650 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&NW=Y2
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLf2JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&hZ*bAfY@Oa!!:EtG5;1?SCf@k
!!(:BfEB^DZ$Reo!!:Hu5LKO`!.k3&!.k3&!6G3D(@1JZ5l(H_jRDLgqZ$]$n1ahA$KU^$]tqnNnF5XO
qu?f]n4*'NJcLB&JcLB&JcMYJ!,_`)!1ird"Q](A_Z]l;!jD)IrW!#\n4EQY!$q`OnF2nF!!;?Q7Z@D"
!.k3&!.k34!!WJLn=/q5'Dhb0j9+l:n8\@+!jD)IrW!#\n4ENX"9EZ7n3HsQ!pB&BU]>uHJcLB&JcLB&
p](L]nAc.*n7_\!"m#&pnEMA!!!9@n0`D%RjR>b<!!<>FnA5)(!pB&B])[E_JcLB&JcLB&i;a(On7M`f
nAkD+#3>.Ua7-V@rW!#'n1ahA!p&iBq>^e,nF-ke!9`i@dK"k!JcLB&JcLB&b5_e^lKJo]3q2Vqqu?r^
m/Sp/n7V_#!jD)IrW!#\n4EHV#W;,@/cYn7n4*'NJcLB&JcLB&JcM_L!c%4lrW!#Cn<!PJ%-6dU!.jY%
*rl;En1ahA!p&iBqu@'(!#G(n9`P1Vn4&B;JcLB&JcLB&OT5I*n2pUL")IDf%/g/+j9t>T!"$s?Y5eR+
n1ahA!p&iBq>^d@nF/C;!9`i@U]>uHJcLB&W;lo\gNJ?q!'L2[q>^UXnBi!M'E]]Ln6Z%n!T`YI!!bUS
n6H$tn1ahA!p&iBq>^d^nF.1n!9`i@])[E_JcLB&OoPK*o'h8#n*g=#p&G)Yq!\9rr;ZlZmJR"hMt#[C
YOF7F!!;6N8brDg@IW:U!!;?Q7a_9g!.k3&!.k4I!!%2"nC[41G4tt<&aAWYN!#U>n1">:!T`YH!!Wn^
n>3>X0`D%RjR>b<!!<;En<s7U!pB&Bo`0RDJcLB&JcOC&!-YL6[I=0>pAb8+n=TRX!s-g=L&M&QjR)jF
"[qkLjmXu'!!;6N8c/Pk!+><X)?'U;kO:s#!.k3&!.k3d!!%3@nAodEFoXZ!!!:105l(HbFR\,l!!)'[
mJ?k`QN$@R0`D%RjR>b>!!EggnF1/j!!;?Q7\g$9!.k3&!3#quG5gt2G2E:O!;lg!2"8flq>^a=mI4$S
!9EPE!!EqgnF/.2!".fV]VD7+f'r1]9`+klkO:sQ!.k3&!.k36!!%3An,RY*!.k44!!8>QE;0D;W:7"k
!9EPD!!?!cn1ahA!9F+J"R3mpE=i!I!pB&BdK"k!JcLB&JcPWI!-\A2!-XA&NW=Y2JcLB&JcOC&!-\A2
!-YUIJcLB&JcLB&JcNRd!-\A2!-ZE`JcLB&JcLB&JcMbM!-\A2!-[6"JcLB&JcLB&JcLr6!-\A2!-\&9
JcLB&JcLB&JcLB&q>^M=rpTo2NW>(>JcLB&JcLB&f)PeorpTo2YlK@UJcLB&JcLB&^]4@XrpTo2a8gel
JcLB&JcLB&W;lpArpTo2hZ/6.JcLB&JcLB&OoPK*rpTo2p&K[EJcLB&JcLB&JcPWI!-\A2!-XA&NW=Y2
JcLB&JcOC&!-\A2!-YUIJcLB&JcLB&JcNRd!-\A2!-ZE`JcLB&JcLB&JcMbM!-\A2!-[6"JcLB&JcLB&
JcLr6!-\A2!-\&9JcLB&JcLB&JcLB&q>^M=rpTo2NW>(>JcLB&JcLB&f)PeorpTo2YlK@UJcLB&JcLB&
^]4@XrpTo2a8gelJcLB&JcLB&W;lpArpTo2hZ/6.JcLB&JcLB&OoPK*rpTo2p&K[EJcLB&JcLB&JcPWI
!-\A2!-XA&NW=Y2JcLB&JcOC&!-\A2!-YUIJcLB&JcLB&JcNRd!-\A2!-ZE`JcLB&JcLB&JcMbM!-\A2
!-[6"JcLB&JcLB&JcLr6!-\A2!-\&9JcLB&JcLB&JcLB&q>^M=rpTo2NW>(>JcLB&JcLB&f)PeorpTo2
YlK@UJcLB&JcLB&^]4@XrpTo2a8gelJcLB&JcLB&W;lpArpTo2hZ/6.JcLB&JcLB&OoPK*rpTo2p&K[E
JcLB&JcLB&JcPWI!-\A2!-XA&NW=Y2JcLB&JcOC&!-\A2!-YUIJcLB&JcLB&JcNRd!-\A2!-ZE`JcLB&
JcLB&JcMbM!-\A2!-[6"JcLB&JcLB&JcLr6!-\A2!-\&9JcLB&JcLB&JcLB&q>^M=rpTo2NW>(>JcLB&
JcLB&f)PeorpTo2YlK@UJcLB&JcLB&^]4@XrpTo2a8gelJcLB&JcLB&W;lpArpTo2hZ/6.JcLB&JcLB&
OoPK*rpTo2p&K[EJcLB&JcLB&JcPWI!-\A2!-XA&NW=Y2JcLB&JcOC&!-\A2!-YUIJcLB&JcLB&JcNRd
!-\A2!-ZE`JcLB&eGoS3YBGM@Jp+,:!4Dgq!.E`)JcLB&^&S.V`peTLK(+fi!7:E>JcLB&VZ6^?h=-$c
K(+B]p@&(2NW>(>KE)$rn:L.]n:L/Yn,Tr&!.k3&!:0[cG5^p#G(OmhG//8$[JoXqHcQ2=!.k4$!!%3A
n,RX<!.k3&!3#quG5gt2G2E:O!.k3b!!%3An,RXS!.k3&!0R<^G5gt2G4kof!.k3K!!%3An,RXj!.k3&
!.k4I!!%3An,RWl!0.&4!!.94!q>]&K`H])JcOC&!-\A2!-YUIJcLB&li7$/rpTo2S,e-@JcNRd!-\A2
!-ZE`JcLB&eGoSmrpTo2ZN,RWJcMbM!-\A2!-[6"JcLB&^&S.VrpTo2aoI"nJcLr6!-\A2!-\&9JcLB&
VZ6^?rpTo2i;eH0JcLB&q>^M=rpTo2NW>(>KE)$rn,i+KG(fpJ!.k4&!!%3An,RX:!.k3&!:0[cG5gt2
G+8Pa!.k3d!!%3An,RXQ!.k3&!7_&LG5gt2G-_1#!.k3M!!%3An,RXh!.k3&!58F5G5gt2G00f:!.k36
!!%3An,RY*!.k3&!2fesG5gt2G2WFQ!.k3&!;ZZqG5gt2G)cQ_!/(=QG45S&n90KcJcLB&f)PeorpTo2
YlK@UJcP-;!-\A2!-Xk4JcLB&^]4@XrpTo2a8gelJcO=$!-\A2!-Y[KJcLB&W;lpArpTo2hZ/6.JcNLb
!-\A2!-ZKbJcLB&OoPK*rpTo2p&K[EJcM\K!-\A2!-[<$JcLB&JcPWI!-\A2!-XA&NW=_4!I!r6nF1UT
!.k3&!7q2NG5gt2G-M%!!.k4;!!%3An,RX%!.k3&!5JR7G5gt2G/sZ8!.k4$!!%3An,RX<!.k3&!3#qu
G5gt2G2E:O!.k3b!!%3An,RXS!.k3&!0R<^G5gt2G4kof!.k3K!!%3An,RXj!.k3&!.k4I!!%3An,RWl
!0.&4!!.94!q>]&K`H])JcOC&!-\A2!-YUIJcLB&li7$/rpTo2S,e-@JcNRd!-\A2!-ZE`JcLB&eGoSm
rpTo2ZN,RWJcMbM!-\A2!-[6"JcLB&^&S.VrpTo2aoI"nJcLr6!-\A2!-\&9JcLB&VZ6^?rpTo2i;eH0
JcLB&q>^M=rpTo2NW>(>KE)$rn,i+KG(fpJ!.k4&!!%3An,RX:!.k3&!:0[cG5gt2G+8Pa!.k3d!!%3A
n,RXQ!.k3&!7_&LG5gt2G-_1#!.k3M!!%3An,RXh!.k3&!58F5G5gt2G00f:!.k36!!%3An,RY*!.k3&
!2fesG5gt2G2WFQ!.k3&!;ZZqG5gt2G)cQ_!/(=QG45S&n90KcJcLB&f)PeorpTo2YlK@UJcP-;!-\A2
!-Xk4JcLB&^]4@XrpTo2a8gelJcO=$!-\A2!-Y[KJcLB&W;lpArpTo2hZ/6.hZ*`h2)5fC!58F5G5gt2
G00f:!.k36!!%3An,RY*!.k42!!(:BfEB^DZ$Reo!!:Hu5PtK_'9h#Gn,hL\Q2L[acIbA'!2fesG5gt2
G2WFQ!.k3&!;ZZqG5gt2G)cRH!".fVc+Us:iUH@#A,H<.kO:t>!")BRnCjIQD2c6ulhpebkO:t-!/(=Q
G45S&n90KcJcLB&f)PeorpTo2YlLa'!p&iBr;ZsHYjh.Nr;Zo^n4*BW">9-3W"Jq-!>\`7!!)0_n4&'2
li7$/rpTo2S,e-@JcNRd!-\A2!-ZE`OoPREn4ENX"9EZ7n3HsQ!pB&BrW!&0n?i;i!!;?Q7[jD.!!%3A
n,RX<!.k3&!3#quG5gt2G2E:O!;ZZsjR>b<!!<>FnA5)(#j:\H!!#RZn2p7B!pB&BZ2hT=!-\A2!-ZKb
JcLB&OoPK*rpTo2p&K[EirB/An4EHV%:/Jm%0-Ckn4!BXGjrrK!!;?Q7`bY.!!%3An,RXj!.k3&!.k4I
!!%3An,RWl!6bEEjR>b;!"CgTn1F\@kO:q@!1`PXo)JjTn4)aEKE)$rn,i+KG(fpJ!.k4&!!%3An,RX:
!3#r"jR>b;!"B_5n4`l_kO:q@!5\/]o)JdR!UrR3!:0[cG5gt2G+8Pa!.k3d!!%3An,RXQ!0R<`jR>b;
!!OA3n2LCJ#NtSG!!("-L[tKIkO:s1!7_&LG5gt2G-_1#!.k3M!!%3@nDADEFoXZ'!;ZZsjR>b;!"D!Y
n.l!(kO:q@!28n]q>^RPcd)Ih!pB&BZ2hT=!-\A2!-ZKbJcLB&OoPK*o'h8#n*g=#p&G0Tn4EHV!b(TX
rW!2dn4!BXIIPGV!!57OnGN=gkO:s_!2fesG5gt2G2WFQ!.k3&!;ZZqG)GeAn,RY*!!;6N8c&Ji!m0r"
rW!5en4!BX=7G]>qZ$[ZnF6AV!pB&Bli;\=!I!r6nF1UT!.k3&!7q2NG-18An,RY*!!;6N8c&Ji@.<7q
rW!5en4!BX"j6>HqZ$[ZnF6AV!9XCP7YCd.!!%3An,RX%!.k3&!5JR74N)E7FoXYu!!;6N8c8Vl%uB`E
C&J#5kO:t?!!G[Yn>@$"!!57OnGN=gkO:s1!7_&LG5gt2G-_1#!.k3&!.k4I!".fV]VD7+f'r1]9`+kl
kO:t>!"*T.nCit:;0&`,nGN=gkO:sH!58F5G5gt2G00f:!.k3&!.k42!!)*Yn-&!pRrK#:!!;?Q7f35f
-*ut9n,_:<r;Zo^n4(M"VZ6^?rpTo2i;eH0JcLB&JcN(V"U-5I<'DJc!/(=QG45S&n90KcJcLB&JcLB&
JcP-;!-\A2!-Xk4JcLB&JcLB&JcO=$!-\A2!-Y[KJcLB&JcLB&JcNLb!-\A2!-ZKbJcLB&JcLB&JcM\K
!-\A2!-[<$JcLB&JcLB&NW=_4!I!r6nF1UT!.k3&!.k3&!.k4;!!%3An,RX%!.k3&!.k3&!.k4$!!%3A
n,RX<!.k3&!.k3&!.k3b!!%3An,RXS!.k3&!.k3&!.k3K!!%3An,RXj!.k3&!.k3&!0.&4!!.94!q>]&
K`H])JcLB&JcLB&li7$/rpTo2S,e-@JcLB&JcLB&eGoSmrpTo2ZN,RWJcLB&JcLB&^&S.VrpTo2aoI"n
JcLB&JcLB&VZ6^?rpTo2i;eH0JcLB&JcLf2KE)$rn,i+KG(fpJ!.k3&!.k3&!:0[cG5gt2G+8Pa!.k3&
!.k3>!!#.HG1Ca9[JoXqH*[L&!.k3&!.k3'!!%2Rn,Tl=!.k3&!.k3&!.k4:!!%2Rn,U2]!.k3&!.k3&
!0.'#!!%2Tn,i+KZ\8C2!.k3&!.k3U!!%3@nCMjMFo\rLn,Rg*!.k3&!.k3&!1ElfG5gt2G4#@\!!%3A
n,RX<!.k3&!.k3&!.t7OG5gt2G/=4ZG5gt2G00f:!.k3&!.k3&!:'UbG5gt2G/=4ZG5gt2G2WFQ!.k3&
!.k32!6>-?G5gt2G/=4[G45S&n90KcJcLB&JcLB&YlFcIrpTo2f)Y.;!-\A2!-Xk4JcLB&JcLB&RK*>2
rpTo2mJtc;!-\A2!-Y[KJcLB&JcLB&K)bmprpTo2_>jRZrpTo2aoI"nJcLB&JcLB&lMpp.rpTo2_>jRZ
rpTo2i;eH0JcLB&JcLf2a8c3`rpTo2_>jU[n,i+KG(fpJ!.k3&!.k3U!!%3An,RX`!:0[cG5gt2G+8Pa
!.k3&!.k3>!!%3An,RY"!7_&LG5gt2G-_1#!.k3&!.k3'!!%3An,RXK!!%3An,RXS!.k3&!.k3&!.k4:
!!%3An,RXK!!%3An,RXj!.k3&!.k3&!0.'#!!%3An,RXK!!.94!q>]&K`H])JcLB&JcN%U!-\A2!-Zro
li7$/rpTo2S,e-@JcLB&JcM5>!-\A2!-[c1eGoSmrpTo2ZN,RWJcLB&JcLE'!-\A2!-Z3Z!-\A2!-ZKb
JcLB&JcLB&JcP*:!-\A2!-Z3Z!-\A2!-[<$JcLB&JcLB&NW@-#!-\A2!-Z3Z!I!r6nF1UT!.k3&!.k3&
!3lM(G5gt2G1Q`\!!%3An,RX%!.k3&!.k3&!1ElfG5gt2G4#@\!!%3An,RX<!.k3&!.k3&!.t7OG5gt2
G/=4ZG5gt2G00f:!.k3&!.k3&!:'UbG5gt2G/=4ZG5gt2G2WFQ!.k3&!.k32!6>-?G5gt2G/=4[G45S&
n90KcJcLB&JcLB&YlFcIrpTo2f)Y.;!-\A2!-Xk4JcLB&JcLB&RK*>2rpTo2mJtc;!-\A2!-Y[KJcLB&
JcLB&K)bmprpTo2_>jRZrpTo2aoI"nJcLB&JcLB&lMpp.rpTo2_>jRZrpTo2i;eH0JcLB&JcLf2a8c3`
rpTo2_>jU[n,i+KG(fpJ!.k3&!.k3U!!%3An,RX`!:0[cG5gt2G+8Pa!.k3&!.k3>!!%3An,RY"!7_&L
G5gt2G-_1#!.k3&!.k3'!!%3An,RXK!!%3An,RXS!.k3&!.k3&!.k4:!!%3An,RXK!!%3An,RXj!.k3&
!.k3&!0.'#!!%3An,RXK!!.94!q>]&K`H])JcLB&JcN%U!-\A2!-Zroli7$/rpTo2S,e-@JcLB&JcM5>
!-\A2!-[c1eGoSmrpTo2ZN,RWJcLB&JcLE'!-\A2!-Z3Z!-\A2!-ZKbJcLB&JcLB&JcP*:!-\A2!-Z3Z
!-\A2!-[<$JcLB&JcLB&NW@-#!-\A2!-Z3Z!I!r6nF1UT!.k3&!.k3&!3lM(G5gt2G1Q`\!!%3An,RX%
!.k3&!.k3&!1ElfG5gt2G4#@\!!%3An,RX<!.k3&!.k3&!.t7OG5gt2G/=4ZG5gt2G00f:!.k3&!.k3&
!:'UbG5gt2G/=4ZG5gt2G2WFQ!.k3&!.k32!6>-?G5gt2G/=4[G45S&n90KcJcLB&JcLB&YlFcIrpTo2
f)Y.;!-\A2!-Xk4JcLB&JcLB&RK*>2rpTo2mJtc;!-\A2!-Y[KJcLB&JcLB&K)bmprpTo2_>jRZrpTo2
aoI"nJcLB&JcLB&lMpp.rpTo2_>jRZrpTo2i;eH0JcLB&JcLf2a8c3`rpTo2_>jU[n,i+KG(fpJ!.k3&
!.k3U!!%3An,RX`!:0[cG5gt2G+8Pa!.k3&!.k3>!!%3An,RY"!7_&LG5gt2G-_1#!.k3&!.k3'!!%3A
n,RXK!!%3An,RXS!.k3&!.k3&!.k4:!!%3An,RXK!!%3An,RXj!.k3&!.k3&!0.'#!!%3An,RXK!!.94
!q>]&K`H])JcLB&JcN%U!-\A2!-Zroli7$/rpTo2S,e-@JcLB&JcM5>!-\A2!-[c1eGoSmrpTo2ZN,RW
JcLB&JcLE'!-\A2!-Z3Z!-\A2!-ZKbJcLB&JcLB&JcP*:!-\A2!-Z3Z!-\A2!-[<$JcLB&JcLB&NW@-#
!-\A2!-Z3Z!I!r6nF1UT!.k3&!.k3&!3lM(G5gt2G1Q`\!!%3An,RX%!.k3&!.k3&!1ElfG5gt2G4#@\
!!%3An,RX<!.k3&!.k3&!.t7OG5gt2G/=4ZG5gt2G00f:!.k3&!.k3&!:'UbG5gt2G/=4ZG5gt2G2WFQ
!.k3&!.k3p!!:Et,Q.TE!hn7]rW!/JfKTAIfL#K9!fYd!qu?sJfSfe1cIbAK!6>-?G5gt2G/=4[G45S&
n90KcJcLB&JcMbM!p&hur;ZqNn>QKg!!_WU7KAV@K)>TNf'qPtr;Zt7n6Z.q!pB&BZiC)LrpTo2f)Y.;
!-\A2!-Xk4JcLB&JcLr6!p&hurW!%(nAu1=!!29P"@`AmnAP8*!$D40!%.XE#HmP9!!)3O7^N-qG5gt2
G4#@\!!%3An,RX<!.k3&!.k3&!;Z[$jR=Ms!&a'",5_EGkO:q@)=[)/rW!((nEfXNrW!!,lH&r)!pB&B
ZiC)LrpTo2_>jRZrpTo2aoI"nJcLB&JcOg2#NYA%!#sVY5l1NdkO:q@!6ak-rW!(^n<rd/rW!!gn:LW>
!pB&BaoL`-!-\A2!-Z3Z!-\A2!-[<$JcLB&JcLB&bQ%k.n0\OYn7VRt#NtSG!!%oGMuE\ZbK`cMbl.SD
M"!_0!!;?Q7dU2s!!%3An,RXK!!.94!q>]&K`H])JcLB&W;m+_n0jgrOSJkkkO:q@!)N+.!!!f(P8E`X
'EA-YkQq.f!pB&BZiC)LrpTo2f)Y.;!-\A2!-Xk4JcLB&JcLr6"m#0AnB;+4!!29P&k2j$'^tN1!);re
!7((*!$Uj3r;Zo^n4'bb!-\A2!-[c1eGoSmrU@.:Jp)`hJp)om!'L2[q>^][n9XTm=8;gtkO:t?!"R!;
=TF-E+TResIK3pJB)M]2kO:sJ!!%3An,RXK!!%2^n:L.]n:L.]nF,iHG4kn?jR=O=nEW:7!!;?Q7fEAt
K^b3+^tA\f@.:W*W:2)2!!;?Q7`k_s!!%3An,RXK!!%2un:L.]n:L.]nC[41G4kn@jR=MsPORT_qZ$]\
n4*BW%7p!<%IK_e!%IF%%d27;!!;?Q7dU2s!!%3An,RXK!!.94K(+B]K(+B][I=0>p&GBZn0\2>Z1-<`
qu?f]n4*BW%1hjqA+4"/!!;-KFRY4d!!;?Q7^N-qG5gt2G1Q`\!!#-KG(OmhG(On/FoXYu!"%`U-NF,X
amd:\r;Zl]n,PrV!!L")eaP-h!!K@lip]S<!!;?Q7^N-qG5gt2G4#?^!.k3&!.k3&!;ZZsjR=Pr!!F@t
n?N8t!!;?Q7f<;iI.6Xb!r`0&F7A\b%K$2-kO:sJ!!%3An,RWd!.k3&!.k3&!94%\jR=Pq!!tFEn<j:W
!9`i@r;ZpbnF3FU!!>FSn?i&m!pB&BaoL`-!-\A2!-Xn5JcLB&JcLB&bQ%_*n0e,6#YjdWI/j91n4*?V
!t+A`DZ'P;%.3P&qZ$]\n4)dFa8c3`rpTo2^]8rdJcLB&JcLB&YlFcIrpTo2f)UC&JcLB&JcLB&RK*>2
rpTo2mJqh=JcLB&JcLB&K)bmprpTo2L&cf*JcLB&JcLB&lMpp.rpTo2SH+6AJcLB&JcLf2a8c3`rpTo2
^]8rdJcLB&JcLB&YlFcIrpTo2f)UC&JcLB&JcLB&RK*>2rpTo2mJqh=JcLB&JcLB&K)bmprpTo2L&cf*
JcLB&JcLB&lMpp.rpTo2SH+6AJcLB&JcLf2a8c3`rpTo2^]8rdJcLB&JcLB&YlFcIrpTo2f)UC&JcLB&
JcLB&RK*>2rpTo2mJqh=JcLB&JcLB&K)bmprpTo2L&cf*JcLB&JcLB&lMpp.rpTo2SH+6AJcLB&JcLf2
a8c3`rpTo2^]8rdJcLB&JcLB&YlFcIrpTo2f)UC&JcLB&JcLB&RK*>2rpTo2mJqh=JcLB&JcLB&K)bmp
rpTo2L&cf*JcLB&JcLB&lMpp.rpTo2SH+6AJcLB&JcLf2a8c3`rpTo2^]8rdJcLB&JcLB&YlFcIrpTo2
f)UC&JcLB&JcLB&RK*>2rpTo2mJqh=JcLB&JcLB&K)bmprpTo2L&cf*JcLB&JcLB&lMpp.rpTo2SH+6A
JcLB&JcLf2a8c3`rpTo2^]8rdJcLB&JcLB&YlFcIrpTo2f)UC&JcLB&JcLB&RK*>2rpTo2mJqh=JcLB&
JcLB&K)bmprpTo2L&cf*JcLB&JcLB&lMpp.rpTo2SH+6AJcLB&JcLf2l2UfHi-#+1rpTo5^]8rdJcLB&
JcLB&df9Akh!b<Lf)UC&JcLB&JcLB&]DqqTh!b<OmJqh=JcLB&JcLB&V#UL=hsgX7!3h1XJcLB&JcLB&
NW9'&rUBZ,lZN99rpTo7SH+6AJcLB&JcLf2l2Ug-rpTo2j8]1'rpTo2^]8rdJcLB&JcLB&df9AkrpTo2
j8]1'rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2j8]1'rpTo2mJqh=JcLB&JcLB&V#UL=rpTo2j8]1'rpTo2
L&cf*JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2SH+6AJcLB&JcLf2l2Ug-rpTo2j8]1'rpTo2^]8rdJcLB&
JcLB&df9AkrpTo2j8]1'rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2j8]1'rpTo2mJqh=JcLB&JcLB&V#UL=
rpTo2j8]1'rpTo2L&cf*JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2SH+6AJcLB&JcLf2l2Ug-rpTo2j8]1'
rpTo2^]8rdJcLB&JcLB&df9AkrpTo2j8]1'rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2j8]1'rpTo2mJqh=
JcLB&JcLB&V#UL=rpTo2j8]1'rpTo2L&cf*JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2SH+6AJcLB&JcLf2
l2Ug-rpTo2j8]1'rpTo2^]8rdJcLB&JcLB&df9AkrpTo2j8]1'rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2
j8]1'rpTo2mJqh=JcLB&JcLB&V#UL=rpTo2j8]1'rpTo2L&cf*JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2
SH+6AJcLB&JcLf2l2Ug-rpTo2j8]1'rpTo2^]8rdJcLB&JcLB&df9AkrpTo2j8]1'rpTo2f)UC&JcLB&
JcLB&]DqqTrpTo2j8]1'rpTo2mJqh=JcLB&JcLB&V#UL=rpTo2j8]1'rpTo2L&cf*JcLB&JcLf2!-\A2
!-\2=lMpp.rpTo2SH+6AJcLB&JcLf2l2Ug-rpTo2j8]1'rpTo2^]8rdJcLB&JcLB&df9AkrpTo2j8]1'
rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2j8]1'rpTo2mJqh=JcLB&JcLB&V#UL=rpTo2j8]1'rpTo2L&cf*
JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2SH+6AJcLB&JcLf2l2Ug-rpTo2j8]1'rpTo2^]8rdJcLB&JcLB&
df9AkrpTo2j8]1'rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2j8]1'rpTo2mJqh=JcLB&JcLB&V#UL=rpTo2
j8]1'rpTo2L&cf*JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2SH+6AJcLB&JcLf2l2Ug-rpTo2j8]1'rpTo2
^]8rdJcLB&JcLB&df9AkrpTo2j8]1'rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2j8]1'rpTo2mJqh=JcLB&
JcLB&V#UL=rpTo2j8]1'rpTo2L&cf*JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2SH+6AJcLB&JcLf2l2Ug-
rpTo2j8]1'rpTo2^]8rdJcLB&JcLB&df9AkrpTo2j8]1'rpTo2f)UC&JcLB&JcLB&]DqqTrpTo2j8]1'
rpTo2mJqh=JcLB&JcLB&V#UL=rpTo2j8]1'rpTo2L&cf*JcLB&JcLf2!-\A2!-\2=lMpp.rpTo2SH+6A
JcLB&JcLf2l2Ug-rpTo2j8]1'rpTo2^]8rdJcLB&JcLB&df9AkrpTo2j8]1'rpTo2f)UC&JcLB&JcLB&
]DqqTrpTo2j8]1'rpTo2mJqh=JcLB&JcLB&V#UL=rpTo2j8]1'rpTo2L&cf*JcLB&JcOX-!tI+D($Yc$
'/qQPq#CL12_PQo!!%3An,RY.!:'UbG5gt2G+AVb!.k3&!.k3n!!3grec"t=j2%2\!!AD:^]F93!?e<>
n,i(.LA_)Q+K,5.!q4Wno`47W!-\A2!-[E'!-\A2!-Z-XJcLB&JcLB&VuR/tg@3gfE,CQKn*BiN";^=m
n3HjN#nkbWdXuG)i3r[n!!!Y]nBur,R,GI1!!%3An,RXm!!%3An,RX`!.k3&!.k3&!0R<b/ai,+&c;V0
(KgV9!WW4;rpToYqZ$_JnAtb2!!*6TrW!%MnAtb2!!*6Th>dP!rpTo2j8]1'rpTo2mJqh=JcLB&JcLB&
q>^W,n?`5g!!WJLn=/q5'Dqh3[I@i(!!9RtB@m1aG5gt2G2rW'G5gt2G(p!K!.k3&!.k43!!>d]n2p4A
#!MIr&aAduqu?f(n=o[X!j_<ifDknprpTo2q>fg]!-\A2!-Xn5JcLB&JcLB&bl@finBCG'#+P*p!132q
qu?k8nF(H$q>^Y6nF(H$nGqhS!-\A2!-[E'!-\A2!-Z-XJcLB&JcLB&WW3*in>Z!Z#ScRg&cau^n21(D
"UDC'nA.!\!!`K(#IEph_)9sI!-\A2!-[E'!-\A2!-ZroJcLB&JcLB&P5k[#n;6`:!c%4lrW!#Cn<!PJ
!=4bcn,\[`qu?a'O8eVLOq?FL!-\A2!-[E'!-\A2!-[c1JcLB&JcLB&JcPZJ!laYao)Jj7n2pUL")IDf
%/U#.50NHbf.-Xt"[:-!nCK/H!!%3An,RXm!!%3An,RWd!.k4>!!#-HG(OmhG40SS4SJgWU%#&R!!>7N
d1uWp""*F)?MXX*"`Wbrh\Q(h"U/l1nD>#=!!%3An,RY.!:'UbG5gt2G+AVb!8%8OG-(1bn:L/^n,RY+
!!7T<cL_):QMBqL]_DI/4Rhicq#CLZnF1_s!9sOaG5gt2G2rW'G5gt2G/+*0!4;e,G0fZ0n:L/;n,RY+
!!?9kn3H[I!YO\_qhtWInF.n%!!9h&Vt^5n]^ViV!!%3An,RXm!!%3An,RX`!.k3B!!%3)n:L.]n=K+L
G4tt>"Ng/N"8;crAaf\lqZ$^!dI;kb!!8DSOSAeWPjjdl!!%3An,RXm!!%3An,RY"!.k3+!!%3@n:Gh8
G)(5@4T,9V!!GXXn?s;6!!XQq!!(%.5l(HbFR\,l!)F"$!!a7mn65km:CI+$!u9PZ>MfD\G5gt2G2rW'
G5gt2G(p!K!:KmfG5gt2G*r>^!.k41!"Wo2nDU$^@t_/Vn,P<7cN3kB)B/#4;ZP\8Q>0B^hsdZJ!!(m:
Q>0B^hsdZJhZ*Y"rpTo2q>fg]!-\A2!-Xn5JcOF'!-\A2!-YRHJcLB&aoDJi[I!k]#4A]t!0Zhjp](Jr
n?;num/?DTkB[U:!!0ClrU9mOH4BNIl2Ug-rpTo2j8]1'rpTo2^]8rd[/^2MrpTo2df=t"JcMVI"U6AO
:,3ON!!N`g:fK1[rW)ot"Ud4b<&+s=!!%3An,RXm!!%3An,RX`!.k3B!!%3An,RXs!.k3&!.k3`!!%3A
n,RXm!!%3An,RY"!.k3+!!%3An,RW`!.k3&!2TYqG5gt2G2rW'G5gt2G(p!K!:KmfG5gt2G*r>^!.k32
!!%3An,RY.!:'UbG5gt2G+AVb!8%8OG5gt2G-Csu!.k32!9sOaG5gt2G2rW'G5gt2G/+*0!4;e,G5gt2
G1-GC!.k3&!7LoJG5gt2G2rW'G5gt2G1Q_G!1j/jG5gt2G3T'Z!.k3&!5&:3G5gt2G2rW'G5gt2G4#?^
!/COSG5gt2G(K^G!.k3I!!%3An,RXm!!%3An,RWd!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;4)!!%3A
n,RX&!.k4'!!%3An,RX9!.k3&!0.'E!!%3An,RXm!!%3An,RXI!.k3Y!!%3An,RX\!.k3&!.k4"!!%3A
n,RXm!!%3An,RX`!.k3B!!%3An,RXs!.k3&!.k3`!!%3An,RXm!!%3An,RY"!.k3+!!%3An,RW`!.k3&
!2TYqG5gt2G2rW'G5gt2G(p!K!:KmfG5gt2G*r>^!.k32!!%3An,RY.!:'UbG5gt2G+AVb!8%8OG5gt2
G-Csu!.k32!9sOaG5gt2G2rW'G5gt2G/+*0!4;e,G5gt2G1-GC!.k3&!7LoJG5gt2G2rW'G5gt2G1Q_G
!1j/jG5gt2G3T'Z!.k3&!5&:3G5gt2G2rW'G5gt2G4#?^!/COSG5gt2G(K^G!.k3I!!%3An,RXm!!%3A
n,RWd!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;4)!!%3An,RX&!.k4'!!%3An,RX9!.k3&!0.'E!!%3A
n,RXm!!%3An,RXI!.k3Y!!%3An,RX\!.k3&!.k4"!!%3An,RXm!!%3An,RX`!.k3B!!%3An,RXs!.k3&
!.k3`!!%3An,RXm!!%3An,RY"!.k3+!!%3An,RW`!.k3&!2TYqG5gt2G2rW'G5gt2G(p!K!:KmfG5gt2
G*r>^!.k32!!%3An,RY.!:'UbG5gt2G+AVb!8%8OG5gt2G-Csu!.k32!9sOaG5gt2G2rW'G5gt2G/+*0
!4;e,G5gt2G1-GC!.k3&!7LoJG5gt2G2rW'G5gt2G1Q_G!1j/jG5gt2G3T'Z!.k3&!5&:3G5gt2G2rW'
G5gt2G4#?^!/COSG5gt2G(K^G!.k3I!!%3An,RXm!!%3An,RWd!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2
G5;4)!!%3An,RX&!.k4'!!%3An,RX9!.k3&!0.'E!!%3An,RXm!!%3An,RXI!.k3Y!!%3An,RX\!.k3&
!.k4"!!%3An,RXm!!%3An,RX`!.k3B!!%3An,RXs!.k3&!.k3`!!%3An,RXm!!%3An,RY"!.k3+!!%3A
n,RW`!.k3&!2TYqG5gt2G2rW'G5gt2G(p!K!:KmfG5gt2G*r>^!.k32!!%3An,RY.!:'UbG5gt2G+AVb
!8%8OG5gt2G-Csu!.k32!9sOaG5gt2G2rW'G5gt2G/+*0!4;e,G5gt2G1-GC!.k3&!7LoJG5gt2G2rW'
G5gt2G1Q_G!1j/jG5gt2G3T'Z!.k3&!5&:3G5gt2G2rW'G5gt2G4#?^!/COSG5gt2G(K^G!.k3I!!%3A
n,RXm!!%3An,RWd!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;4)!!%3An,RX&!.k4'!!%3An,RX9!.k3&
!0.'E!!%3An,RXm!!%3An,RXI!.k3Y!!%3An,RX\!.k3&!.k4"!!%3An,RXm!!%3An,RX`!.k3B!!%3A
n,RXs!.k3&!.k3`!!%3An,RXm!!%3An,RY"!.k3+!!%3An,RW`!.k3&!2TYqG5gt2G2rW'G5^obG(Oo+
Fo]/Rn,Ra%!.k3&!0.$ZG5gt2G5;4)!!%21n:L/Zn,Tf!!.k3&!0.'E!!%3An,RXm!!%2Tn:L/7n,TiE
!.k3&!.k4"!!%3An,RXm!!%2kn:L.un,T]X!.k3&!.k3`!!%3An,RXm!!#.HG(OmmFo\rLn,Rfe!.k3&
!2TYqG5gt2G2iRS!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;2j!.k4'!!%3An,RX9!.k3&!0.'E!!%3A
n,RX'!.k3Y!!%3An,RX\!.k3&!.k4"!!%3An,RX>!.k3B!!%3An,RXs!.k3&!.k3`!!%3An,RXU!.k3+
!!%3An,RW`!.k3&!2TYqG5gt2G2iRS!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;2j!.k4'!!%3An,RX9
!.k3&!0.'E!!%3An,RX'!.k3Y!!%3An,RX\!.k3&!.k4"!!%3An,RX>!.k3B!!%3An,RXs!.k3&!.k3`
!!%3An,RXU!.k3+!!%3An,RW`!.k3&!2TYqG5gt2G2iRS!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;2j
!.k4'!!%3An,RX9!.k3&!0.'E!!%3An,RX'!.k3Y!!%3An,RX\!.k3&!.k4"!!%3An,RX>!.k3B!!%3A
n,RXs!.k3&!.k3`!!%3An,RXU!.k3+!!%3An,RW`!.k3&!2TYqG5gt2G2iRS!.k4>!!%3An,RX"!.k3&
!0.$ZG5gt2G5;2j!.k4'!!%3An,RX9!.k3&!0.'E!!%3An,RX'!.k3Y!!%3An,RX\!.k3&!.k4"!!%3A
n,RX>!.k3B!!%3An,RXs!.k3&!.k3`!!%3An,RXU!.k3+!!%3An,RW`!.k3&!2TYqG5gt2G2iRS!.k4>
!!%3An,RX"!.k3&!0.$ZG5gt2G5;2j!.k4'!!%3An,RX9!.k3&!0.'E!!%3An,RX'!.k3Y!!%3An,RX\
!.k3&!.k4"!!%3An,RX>!.k3B!!%3An,RXs!.k3&!.k3`!!%3An,RXU!.k3+!!%3An,RW`!.k3&!2TYq
G5gt2G2iRS!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;2j!.k4'!!%3An,RX9!.k3&!0.'E!!%3An,RX'
!.k3Y!!%3An,RX\!.k3&!.k4"!!%3An,RX>!.k3B!!%3An,RXs!.k3&!.k3`!!%3An,RXU!.k3+!!%3A
n,RW`!.k3&!2TYqG5gt2G2iRS!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;2j!.k4'!!%3An,RX9!.k3&
!0.'E!!%3An,RX'!.k3Y!!%3An,RX\!.k3&!.k4"!!%3An,RX>!.k3B!!%3An,RXs!.k3&!.k3`!!%3A
n,RXU!.k3+!!%3An,RW`!.k3&!2TYqG5gt2G2iRS!.k4>!!%3An,RX"!.k3&!0.$ZG5gt2G5;2j!.k4'
!!%3An,RX9!.k3&!6bECc2-&mb5MACc.LZ?q>^U/e(DV<!!<hcfI$Iq!f5K!mJuMP!-\A2!-Xq6JcN1Y
!-\A2!-ZfkJcLB&W;m"\nBLmE!3lG&"6At@U&"`k@.<[>rW!$6nF.q*!!<4hn5%X9!-\A2!-YaMJcMAB
!-\A2!-[W-JcLB&OoPREn4EBT"6At@l2VCm!!Bb#nCmjA!u(1n.f02IRIF#7!!#.QFo\rLn,S*b!.k3+
!!%3An,RW`!.k3&!;ZZsjR>b9!!MBMbOAm:!!FJ7ame$`!!<o(n1+;8!h&ORjo>C)n*g>0irFZ2JcP6>
!-\A2!-Xb1JcLB&irB/An4EBT"Q\rln?i)n"F'?RnCmjA!u(1n.f02IRIF#7!!%32n,V8?!.k3&!8%8O
G5gt2G-Csu!.k3p!!;6N8b`8hjR",[miDB-"Td!$1%<or!!<o(n1+;8!h&ORmK!%_!-[i#!5>$)JcN1Y
!-\A2!-ZfkJcLB&W;m"\n6Go2!#YY7"m#%N]'sY;!!PFQI4t*DrW!$6nF.q*!!<4hn5&0H!'Kjr!4Dgq
!.2*RJcMAB!-\A2!-[W-JcLB&OoPLCqsXU2r;Zr\m/UVsnAbG-"d&4$0C[]p!!<o(n1+;8!h&ORf)Peo
rpTo2bQ*4pLB%<trpTo2JcLB&JcPWI!p&jIrIY)ir;[>gm/Rjen14PGj1bRInCmjA!u(1n.f02IRIF#(
!!%3An,RXl!.k3&!:KmfG5^ouG(OmhG40SS4SAaVjR>b9!"S)W!!&teIfNI;AH4CQgAV'S'CbK@qZ$\c
n5%X9!-\A2!-\2=JcLB&fDknpXRLi2K(.F^!-\&9!p&iBp](fbm/R,bnC@ZAlP'=PnCmjA!snAb1]%.R
T^YD<!9sOaG5gt2G+J\c!4;e,G0fZ0n:L/;n,RY*!!;6N8b`8qjQupI$K^bXmA'^^0C[]o!!:gB:Ab(o
!4_MIf)PeorpTo2[/bdYScAb6k4!ulK(,B$!-\&9!p&iBp](EWm/R+n!1!'5n4Wf^0C[]o!!9_#JG]BL
"l8YXf)PeorpTo2bQ*4pLB%<:rH<d9Jp)om!'L2[q>^TXn4EBT!T`YI!!ts\nD4?L!&*iqr;Zq-nDk\i
!!6TuYLW[RG5gt2G2iRS!.k3&!.k3&!94%\jRBhZUBEg^!9EPH!!<>KiIh+0!\a&sr;[0,a7/,:<Et[T
mkWGo!-\A2!-\2=JcLB&JcLB&JcO!p!9EtF"CD-/jR)[A!\a&squ?d/NUQi8!QmCg!9sOaG5gt2G+J\c
!.k3&!.k3+!!Eig<C7o0"4R;NG5gt2G-q=%!.k3&!.k3&!5&:3G5gt2G0Br<!.k3&!.k3&!2TYqG5gt2
G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!0.'E!!%3An,RX'!.k3&!.k3&!.k4"!!%3An,RX>
!.k3&!.k3&!.k3`!!%3An,RXU!.k3&!.k3&!.k3I!!%3An,RXl!.k3&!.k3&!.k32!!%3An,RY.!.k3&
!.k3&!.k32!9sOaG5gt2G+J\c!.k3&!.k3&!7LoJG5gt2G-q=%!.k3&!.k3&!5&:3G5gt2G0Br<!.k3&
!.k3&!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!0.'E!!%3An,RX'!.k3&!.k3&
!.k4"!!%3An,RX>!.k3&!.k3&!.k3`!!%3An,RXU!.k3&!.k3&!.k3I!!%3An,RXl!.k3&!.k3&!.k32
!!%3An,RY.!.k3&!.k3&!.k32!9sOaG5gt2G+J\c!.k3&!.k3&!7LoJG5gt2G-q=%!.k3&!.k3&!5&:3
G5gt2G0Br<!.k3&!.k3&!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!0.'E!!%3A
n,RX'!.k3&!.k3&!.k4"!!%3An,RX>!.k3&!.k3&!.k3`!!%3An,RXU!.k3&!.k3&!.k3I!!%3An,RXl
!.k3&!.k3&!.k32!!%3An,RY.!.k3&!.k3&!.k32!9sOaG5gt2G+J\c!.k3&!.k3&!7LoJG5gt2G-q=%
!.k3&!.k3&!5&:3G5gt2G0Br<!.k3&!.k3&!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&
!.k3&!0.'E!!%3An,RX'!.k3&!.k3&!.k4"!!%3An,RX>!.k3&!.k3&!.k3`!!%3An,RXU!.k3&!.k3&
!.k3I!!%3An,RXl!.k3&!.k3&!.k32!!%3An,RY.!.k3&!.k3&!.k32!9sOaG5gt2G+J\c!.k3&!.k3&
!7LoJG5gt2G-q=%!.k3&!.k3&!5&:3G5gt2G0Br<!.k3&!.k3&!2TYqG5gt2G2iRS!.k3&!.k3&!0.$Z
G5gt2G5;2j!.k3&!.k3&!0.'E!!%3An,RX'!.k3&!.k3&!.k4"!!%3An,RX>!.k3&!.k3&!.k3`!!%3A
n,RXU!.k3&!.k3&!.k3I!!%3An,RXl!.k3&!.k3&!.k32!!%3An,RY.!.k3&!.k3&!.k32!9sOaG5gt2
G+J\c!.k3&!.k3&!7LoJG5gt2G-q=%!.k3&!.k3&!5&:3G5gt2G0Br<!.k3&!.k3&!2TYqG5gt2G2iRS
!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!0.'E!!%3An,RX'!.k3&!.k3&!.k4"!!%3An,RX>!.k3&
!.k3&!.k3`!!%3An,RXU!.k3&!.k3&!.k3I!!%3An,RXl!.k3&!.k3&!.k32!!%3An,RY.!.k3&!.k3&
!.k32!9sOaG5gt2G+J\c!.k3&!.k3&!7LoJG5gt2G-q=%!.k3&!.k3&!5&:3G5gt2G0Br<!.k3&!.k3&
!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!0.'E!!%3An,RX'!.k3&!.k3&!.k4"
!!%3An,RX>!.k3&!.k3&!.k3`!!%3An,RXU!.k3&!.k3&!.k3I!!%3An,RXl!.k3&!.k3&!.k32!!%3A
n,RY.!.k3&!.k3&!.k32!9sOaG5gt2G+J\c!.k3&!.k3&!7LoJG5gt2G-q=%!.k3&!.k3&!5&:3G5gt2
G0Br<!.k3&!.k3&!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!0.'E!!%3An,RX'
!.k3&!.k3&!.k4"!!%3An,RX>!.k3&!.k3&!.k3`!!%3An,RXU!.k3&!.k3&!.k3I!!%3An,RXl!.k3&
!.k3&!.k32!!%3An,RY.!.k3&!.k3&!.k32!9sOaG5gt2G+J\c!.k3&!.k3&!7LoJG5gt2G-q=%!.k3&
!.k3&!5&:3G5gt2G0Br<!.k3&!.k3&!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&
!65'@)*8l4!!<ln0+6J6l2Ug-rpTo2ScF?BJcLB&JcM\K!Z.B]rpU!IV]Yd9!?e<>n-/:1L&_4Up=KDu
S(.K=G5gt2G-q=%!.k3&!.k35!")-KnBI#.MT,)F<W)n*'%HF!K5R(7[f?DorOi<PnF4<n]`<i<!!%3A
n,RXU!.k3&!.k3&!.k4I!!Fb<n;[\O!!E=KnF/X@!!@`?aTDGA!<k(O!!=V<n.s@N!-\A2!-[B&JcLB&
JcLB&JcOg2!jD*gq>^eXnAPJ0!4D</oDet@nF.4?!!%3An,RY.!.k3&!.k3&!.k3q!!>OVn1a\=#T`7#
>6"Z/n=oOT""3U-(?Y\_!!%3An,RX'!.k3&!.k3&!3-##GOWWI!"#arNrT/qnF(H$p&G1BnF.4m!7LoJ
G5gt2G-q=%!.k3&!.k37!!8YZVYC,oMt"+S!!NV6nF47OpAb:CnF.4?!!%3An,RXU!.k3&!.k3&!.k4J
!!:"+M"grODt)K[!!*@drpTrO&GZ;.-h-U@ci=&hrpTo2irIs:!'I*$Jp)`hJp)`hmre[npAb95n:p]<
!cRS_qu?mabOG#Q.f',I-h-U@ci=&hrpTo2q>eS:!-Z$EK(+B]K(+B]f^JlapAb8dn>#aY!fHKWqZ$d'
E9crM(Ae(6-h-U@k5acI!-\A2!-Z0Y!-[8hK(+B]K(+B][I=0>pAb8?nAG#$!ib[Pq#CLZnF1`#!!=V<
n.u!'df9AkrpTo2_#OIYp@*\'K(+B]K(,B$!-\):"%i"N./EoI([:Eu!!)iq!ke$#qZ$^GnF.4?!!%3A
n,RXU!;6BmG5^onG(OmhG(OmmFoXZ'!;ZZs]'u$^!!@W<c3O+E!gN29qZ$^GnF.4?!!%3An,RXl!8dbV
G5gt2G,YIn!.k3&!.k42!!G+Hn94p3!!?cun4`f]!Da+%!!<tin6>bi""3U-(=3$]G5gt2G5;3[!!%3A
n,RXI!.k3&!.k3&!6Y?L=m#4_G#EFdnEXri!"%NCQ>0B^hsdZJqZ$^GnF.4V!9sOaG5gt2G/4.YG5gt2
G2iRS!.k3&!.k3K!!4FVmJcSVmCt:O!!0ClrU9mOH4B]N""3U-(B+<_!!%3An,RXJ!!%3An,RY.!.k3&
!.k3&!0.$^#r5I7$2OW+!"1\]<&+s$!!%3An,RXU!;6BmG5gt2G*2iW!.k3&!.k3I!!%3An,RXl!8dbV
G5gt2G,YIn!.k3&!.k32!!%3An,RY.!6>-?G5gt2G/+*0!.k3&!.k32!9sOaG5gt2G/4.YG5gt2G2iRS
!.k3&!.k3&!7LoJG5gt2G/4.YG5gt2G5;2j!.k3&!.k3&!5&:3G5gt2G0Bs[!!%3An,RWp!.k3&!.k3&
!2TYqG5gt2G2iS[!!%3An,RX2!.k3&!.k3&!0.$ZG5gt2G5;3[!!%3An,RXI!.k3&!.k3&!0.'E!!%3A
n,RXJ!!%3An,RXl!.k3&!.k3&!.k4"!!%3An,RXJ!!%3An,RY.!.k3&!.k3&!.k3`!!%3An,RXU!;6Bm
G5gt2G*2iW!.k3&!.k3I!!%3An,RXl!8dbVG5gt2G,YIn!.k3&!.k32!!%3An,RY.!6>-?G5gt2G/+*0
!.k3&!.k32!9sOaG5gt2G/4.YG5gt2G2iRS!.k3&!.k3&!7LoJG5gt2G/4.YG5gt2G5;2j!.k3&!.k3&
!5&:3G5gt2G0Bs[!!%3An,RWp!.k3&!.k3&!2TYqG5gt2G2iS[!!%3An,RX2!.k3&!.k3&!0.$ZG5gt2
G5;3[!!%3An,RXI!.k3&!.k3&!0.'E!!%3An,RXJ!!%3An,RXl!.k3&!.k3&!.k4"!!%3An,RXJ!!%3A
n,RY.!.k3&!.k3&!.k3`!!%3An,RXU!;6BmG5gt2G*2iW!.k3&!.k3I!!%3An,RXl!8dbVG5gt2G,YIn
!.k3&!.k32!!%3An,RY.!6>-?G5gt2G/+*0!.k3&!.k32!9sOaG5gt2G/4.YG5gt2G2iRS!.k3&!.k3&
!7LoJG5gt2G/4.YG5gt2G5;2j!.k3&!.k3&!5&:3G5gt2G0Bs[!!%3An,RWp!.k3&!.k3&!2TYqG5gt2
G2iS[!!%3An,RX2!.k3&!.k3&!0.$ZG5gt2G5;3[!!%3An,RXI!.k3&!.k3&!0.'E!!%3An,RXJ!!%3A
n,RXl!.k3&!.k3&!.k4"!!%3An,RXJ!!%3An,RY.!.k3&!.k3&!.k3`!!%3An,RXU!;6BmG5gt2G*2iW
!.k3&!.k3I!!%3An,RXl!8dbVG5gt2G,YIn!.k3&!.k32!!%3An,RY.!6>-?G5gt2G/+*0!.k3&!.k32
!9sOaG5gt2G/4.YG5gt2G2iRS!.k3&!.k3&!7LoJG5gt2G/4.YG5gt2G5;2j!.k3&!.k3&!5&:3G5gt2
G0Bs[!!%3An,RWp!.k3&!.k3&!2TYqG5gt2G2iS[!!%3An,RX2!.k3&!.k3&!0.$ZG5gt2G5;3[!!%3A
n,RXI!.k3&!.k3&!0.'E!!%3An,RXJ!!%3An,RXl!.k3&!.k3&!.k4"!!%3An,RXJ!!%3An,RY.!.k3&
!.k3&!.k3`!!%3An,RXU!;6BmG5gt2G*2iW!.k3&!.k3I!!%3@nDe]LFo\rLn,Ra5!.k3&!.k3&!0.$Z
G4tFDn,T].!.k3&!.k3&!0.'E!!%2Qn,TiU!.k3&!.k3&!.k4"!!%2Qn,Tfk!.k3&!.k3&!.k3`!!#.&
G4p(Z]Dh:"H]eA\!.k3&!.k3&!8dbVG5gt2G,YIn!.k3&!.k3&!6>-?G5gt2G/+*0!.k3&!.k32!2TYq
G5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!.k4E!!%3An,RWp!.k3&!.k3&!.k4.!!%3A
n,RX2!.k3&!.k3&!.k3l!!%3An,RXI!.k3&!.k3&!0.&U!!%3An,RXl!.k3&!.k3&!.k32!!%3An,RY.
!.k3&!.k3&!.k3&!;6BmG5gt2G*2iW!.k3&!.k3&!8dbVG5gt2G,YIn!.k3&!.k3&!6>-?G5gt2G/+*0
!.k3&!.k32!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!.k4E!!%3An,RWp!.k3&
!.k3&!.k4.!!%3An,RX2!.k3&!.k3&!.k3l!!%3An,RXI!.k3&!.k3&!0.&U!!%3An,RXl!.k3&!.k3&
!.k32!!%3An,RY.!.k3&!.k3&!.k3&!;6BmG5gt2G*2iW!.k3&!.k3&!8dbVG5gt2G,YIn!.k3&!.k3&
!6>-?G5gt2G/+*0!.k3&!.k32!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j!.k3&!.k3&!.k4E
!!%3An,RWp!.k3&!.k3&!.k4.!!%3An,RX2!.k3&!.k3&!.k3l!!%3An,RXI!.k3&!.k3&!0.&U!!%3A
n,RXl!.k3&!.k3&!.k32!!%3An,RY.!.k3&!.k3&!.k3&!;6BmG5gt2G*2iW!.k3&!.k3&!8dbVG5gt2
G,YIn!.k3&!.k3&!6>-?G5gt2G/+*0!.k3&!.k32!2TYqG5gt2G2iRS!.k3&!.k3&!0.$ZG5gt2G5;2j
!.k3&!.k3&!.k4E!!%3An,RWp!.k3&!.k3&!.k4.!!%3An,RX2!.k3&!.k3&!.k3l!!%3An,RXI!.k3&
!.k3&!0.&U!!%3An,RXl!.k3&!.k3&!3#quc2Q>uf>XR_!W2p!c.G>Z!!=4nfGjei!6tAm!6Y-<"-V<P
!LWofG5gt2G5;2j!.k3&!.k36!!qZTbeDEhnF2nE!!20M!(m%f"!@%%*rZ-@jRCFl]`>;6!!F)'nF/]=
!;6BmG5gt2G*2iW!.k3&!.k4I!"%`U6i[3"MX^+%r;Zo[n4EKW"!@%%*rZ-@jR>b6!!$m8n,T#k!8dbV
G5gt2G,YIn!.k3&!.k42!!;6N7/d/g!S-[]r;Zo[n4EKW"!@%%*rZ-@jR>b7!!WJLn=/q5'@Qs&!!%3A
n,RXI!.k3&!.k3&!6bEEjR>S9!!9k'I/O$HjR>b<!!=>4n/hQ/!p&iBp&G:[nAc.*n7_LqV#UL=rpTo2
irFZ2JcLB&JcMbM!p&i=rW!$*jmZ:K!!;6N8c&Ji+7Sb@rW!#\n4EKWqu?qjn7M`fnAgst!-\A2!-\2=
JcLB&JcLB&OoPgLn3d6V#*JE&#5nN&jR<.`q_&%AnF.Lu!!;6N>l>TA)#O@>'^Foq!'9W=1o:9H!!%3A
n,RWp!.k3&!.k3&!;Z[$jR@tCLt2"D,l@WBjS&'C*rZ->jSSEHcMRYDC@IVi!!:@5OM(YO!!%3An,RX2
!.k3&!.k3&!94%ZjS\KJUC-ku!p&j=qfDpmnF.Lu!!;6NV>Z#HEVoe<b4%Ll!!@$+jUBZ>a8c3`rU@UG
Jp)`hJp)`hfQI6Wp&G?Yn8^gEnDPDb!!;6N8c&Ji+7Sb@rW!#\n4EBT"$,ku(&emL-LL;/p].,j!-[8h
K(+B]K(+B][I=0>p&GBZn3d6X](!*/qu?fZn4EKW"!@%%*rZ-@jR>b<!<)ruQMBqL]USs%G4tEWn:L.]
n:L/$n,RY*!!qZT6i[33kjWTi!!20M!(m%f"!@%%*rZ-@jR>b:!!3bslhcVCSFH"sVuZMk!-XClK(+B]
K(+Qb!-\;@q>^TXn3m6U").2j1&V(RjR>b<!!=>4n/hQ/!p&iBq#CJ-n=TRX!s-g=KtdWF!!#-XG(Omh
G(OmhG40SS4SAaVjR>S:!!EA3nBMIA!!;6N8c&Ji+7Sb@rW!#\n4EEU!lj^pq>^V>nD4E%!.k3&!.k3&
!.k3p!!;6N7/[)f+m/9VrW!#\n4EKW"!@%%*rZ-@jRBhZUBEh=nBV.3!!=/,n5K/`JcLB&JcLB&JcMbM
!p&i=qu@"5nF03R!9EW@qZ$^?nF.Lu!!)*Un,m$\n8S.&!iYUmOoU(6JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&NW=Y2JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLf2JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&NW=Y2JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLf2J,~>

%%EndBinary
grestore
np
grestore
gsave
220.449 189.034 mo
220.449 189.238 li
220.04 189.238 li
220.04 189.034 li
23.9334 189.034 li
23.9334 189.443 li
240.737 189.443 li
240.737 189.034 li
cp
clp
23.5146 189.879 mo
241.237 189.879 li
241.237 188.444 li
23.5146 188.444 li
cp
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 .523621 229.352 ]ct
[217.723 0 0 1.43506 22.9909 39.4729 ]ct
snap_to_device
<<
/T 1
/W 785 
/H 4 
/M[785 0 0 -4 0 4 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&V#Z#~>

%%EndBinary
grestore
np
grestore
gsave
220.04 26.7682 mo
220.45 26.7682 li
220.45 25.1322 li
220.04 25.1322 li
cp
220.04 25.1321 mo
220.04 29.6312 mo
220.45 29.6312 li
220.45 27.9952 li
220.04 27.9952 li
cp
220.04 27.9952 mo
220.04 32.4941 mo
220.45 32.4941 li
220.45 30.8582 li
220.04 30.8582 li
cp
220.04 30.8582 mo
220.04 35.3572 mo
220.45 35.3572 li
220.45 33.7212 li
220.04 33.7212 li
cp
220.04 33.7211 mo
220.04 38.2192 mo
220.45 38.2192 li
220.45 36.5832 li
220.04 36.5832 li
cp
220.04 36.5831 mo
220.04 41.0822 mo
220.45 41.0822 li
220.45 39.4462 li
220.04 39.4462 li
cp
220.04 39.4451 mo
220.04 43.9451 mo
220.45 43.9451 li
220.45 42.3091 li
220.04 42.3091 li
cp
220.04 42.3082 mo
220.04 46.8072 mo
220.45 46.8072 li
220.45 45.1712 li
220.04 45.1712 li
cp
220.04 45.1711 mo
220.04 49.6702 mo
220.45 49.6702 li
220.45 48.0342 li
220.04 48.0342 li
cp
220.04 48.0342 mo
220.04 52.5331 mo
220.45 52.5331 li
220.45 50.8972 li
220.04 50.8972 li
cp
220.04 50.8972 mo
220.04 55.3962 mo
220.45 55.3962 li
220.45 53.7602 li
220.04 53.7602 li
cp
220.04 53.7601 mo
220.04 58.2592 mo
220.45 58.2592 li
220.45 56.6232 li
220.04 56.6232 li
cp
220.04 56.6232 mo
220.04 61.1212 mo
220.45 61.1212 li
220.45 59.4852 li
220.04 59.4852 li
cp
220.04 59.4852 mo
220.04 63.9842 mo
220.45 63.9842 li
220.45 62.3492 li
220.04 62.3492 li
cp
220.04 62.3492 mo
220.04 66.8472 mo
220.45 66.8472 li
220.45 65.2112 li
220.04 65.2112 li
cp
220.04 65.2112 mo
220.04 69.7102 mo
220.45 69.7102 li
220.45 68.0742 li
220.04 68.0742 li
cp
220.04 68.0742 mo
220.04 72.5732 mo
220.45 72.5732 li
220.45 70.9372 li
220.04 70.9372 li
cp
220.04 70.9362 mo
220.04 75.4362 mo
220.45 75.4362 li
220.45 73.8002 li
220.04 73.8002 li
cp
220.04 73.7992 mo
220.04 78.2982 mo
220.45 78.2982 li
220.45 76.6622 li
220.04 76.6622 li
cp
220.04 76.6622 mo
220.04 81.1612 mo
220.45 81.1612 li
220.45 79.5252 li
220.04 79.5252 li
cp
220.04 79.5251 mo
220.04 84.0242 mo
220.45 84.0242 li
220.45 82.3872 li
220.04 82.3872 li
cp
220.04 82.3871 mo
220.04 86.8862 mo
220.45 86.8862 li
220.45 85.2502 li
220.04 85.2502 li
cp
220.04 85.2502 mo
220.04 89.7491 mo
220.45 89.7491 li
220.45 88.1132 li
220.04 88.1132 li
cp
220.04 88.1132 mo
220.04 92.6122 mo
220.45 92.6122 li
220.45 90.9771 li
220.04 90.9771 li
cp
220.04 90.9772 mo
220.04 95.4752 mo
220.45 95.4752 li
220.45 93.8392 li
220.04 93.8392 li
cp
220.04 93.8392 mo
220.04 96.7021 mo
220.04 98.3382 li
220.449 98.3372 li
220.449 96.7021 li
cp
220.04 99.5652 mo
220.04 101.201 li
220.449 101.2 li
220.449 99.5652 li
cp
220.04 102.427 mo
220.04 104.064 li
220.449 104.063 li
220.449 102.427 li
cp
220.04 105.29 mo
220.04 106.927 li
220.449 106.926 li
220.449 105.29 li
cp
220.04 108.153 mo
220.04 109.789 li
220.449 109.789 li
220.449 108.152 li
cp
220.04 111.016 mo
220.04 112.651 li
220.449 112.651 li
220.449 111.015 li
cp
220.04 115.514 mo
220.45 115.514 li
220.45 113.878 li
220.04 113.878 li
cp
220.04 113.878 mo
220.04 118.377 mo
220.45 118.377 li
220.45 116.741 li
220.04 116.741 li
cp
220.04 116.741 mo
220.04 121.239 mo
220.45 121.239 li
220.45 119.604 li
220.04 119.604 li
cp
220.04 119.604 mo
220.04 124.102 mo
220.45 124.102 li
220.45 122.467 li
220.04 122.467 li
cp
220.04 122.467 mo
220.04 126.965 mo
220.45 126.965 li
220.45 125.33 li
220.04 125.33 li
cp
220.04 125.33 mo
220.04 129.828 mo
220.45 129.828 li
220.45 128.193 li
220.04 128.193 li
cp
220.04 128.193 mo
220.04 132.691 mo
220.45 132.691 li
220.45 131.055 li
220.04 131.055 li
cp
220.04 131.055 mo
220.04 135.554 mo
220.45 135.554 li
220.45 133.918 li
220.04 133.918 li
cp
220.04 133.918 mo
220.04 138.417 mo
220.45 138.417 li
220.45 136.781 li
220.04 136.781 li
cp
220.04 136.78 mo
220.04 141.28 mo
220.45 141.28 li
220.45 139.644 li
220.04 139.644 li
cp
220.04 139.643 mo
220.04 144.142 mo
220.45 144.142 li
220.45 142.506 li
220.04 142.506 li
cp
220.04 142.505 mo
220.04 147.004 mo
220.45 147.004 li
220.45 145.368 li
220.04 145.368 li
cp
220.04 145.368 mo
220.04 149.867 mo
220.45 149.867 li
220.45 148.231 li
220.04 148.231 li
cp
220.04 148.231 mo
220.04 152.73 mo
220.45 152.73 li
220.45 151.095 li
220.04 151.095 li
cp
220.04 151.095 mo
220.04 155.594 mo
220.45 155.594 li
220.45 153.958 li
220.04 153.958 li
cp
220.04 153.958 mo
220.04 158.456 mo
220.45 158.456 li
220.45 156.821 li
220.04 156.821 li
cp
220.04 156.821 mo
220.04 161.318 mo
220.45 161.318 li
220.45 159.683 li
220.04 159.683 li
cp
220.04 159.683 mo
220.04 164.181 mo
220.45 164.181 li
220.45 162.546 li
220.04 162.546 li
cp
220.04 162.546 mo
220.04 167.045 mo
220.45 167.045 li
220.45 165.409 li
220.04 165.409 li
cp
220.04 165.409 mo
220.04 169.907 mo
220.45 169.907 li
220.45 168.272 li
220.04 168.272 li
cp
220.04 168.271 mo
220.04 172.771 mo
220.45 172.771 li
220.45 171.135 li
220.04 171.135 li
cp
220.04 171.134 mo
220.04 175.633 mo
220.45 175.633 li
220.45 173.996 li
220.04 173.996 li
cp
220.04 173.996 mo
220.04 178.495 mo
220.45 178.495 li
220.45 176.859 li
220.04 176.859 li
cp
220.04 176.859 mo
220.04 181.358 mo
220.45 181.358 li
220.45 179.722 li
220.04 179.722 li
cp
220.04 179.722 mo
220.04 184.221 mo
220.45 184.221 li
220.45 182.585 li
220.04 182.585 li
cp
220.04 182.585 mo
220.04 187.084 mo
220.45 187.084 li
220.45 185.449 li
220.04 185.449 li
cp
220.04 185.449 mo
220.04 188.312 mo
220.04 189.238 li
220.449 189.238 li
220.449 189.034 li
220.449 188.312 li
cp
clp
219.301 189.879 mo
221.078 189.879 li
221.078 24.7759 li
219.301 24.7759 li
cp
/2 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 .523621 229.352 ]ct
[1.77675 0 0 165.103 218.778 39.4729 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 638 
/M[4 0 0 -638 0 638 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
_#XH9!!3'$!!<-%!!<-%r;ls"ec::%JcMqRrW3'#rW<-%rW<-%rWE*#!!2<aJcLB&RfNEh!!3'$!!<-%
!!<-%r;ls"quD<KJcLH(rrN3&!WE0$!r`9%!r`<#!WW7c!.k3&!:U!f!WW9#!rrE%!rrE%"8r9$!N,pL
!.k4,!<*$"!WE0$!r`9%!r`<#!WW84!.k3&!6,$<!WW9#!rrE%!rrE%"8r9$!RUo?!.Y~>

%%EndBinary
grestore
np
grestore
.287 lw
0 lc
0 lj
8 ml
[1.149 .862 ] 0 dsh
true sadj
59.3538 25.1313 mo
59.3538 189.238 li
50.0688 25.1313 mo
50.0688 189.238 li
30.0408 25.1313 mo
30.0408 189.238 li
39.8558 25.1313 mo
39.8558 189.238 li
175.812 25.1313 mo
175.812 189.238 li
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: FAAAAA+ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FAAAAA+ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 84 /T putdup 114 /r putdup 116 /t putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings15 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/space <1C60D8A8C9B854D00D> |-/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B546505C954A88> |-/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-/five <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BCD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49372EF96DD9EB13A793559C13CFDFE477> |-/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF193628C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-/seven <1C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031CB3B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0F55546101EE3> |-/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F603BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A55977C35> |-/nine <1C60D8A8C9B7EF322B1E3B1A79A1DA03E10E600D068C6F2A2C380B0F6DEBD4D4DD1CC12D66AEECD714986D0BB404BEEE797B931765A09DB6972620435C3E53C33E82E82293552FE3F4B4A9CF87D2D3960A335325D9064F969F569869D5BECFFFACFCA41CE671D232207B2A9F695CAD03F11715AE00BA6E4E4DDB0F807E169B9324CB5646DCC83A5DE270DE3BAEFD03D20E077B3A9C59CEC5C162A3BD3072425BBF0BAF6222E938CACE57A2C4D75634AE3A010D0148B506BD06198AAAA27D1742624D1FE8845D19FF21CDB94B022766F89FD7433D600DF30C7FA27B03E17188994F16> |-/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VWSLXC+ArialMT /FAAAAA+ArialMT findfont ct_VMDictPut/VWSLXC+ArialMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine 26{/.notdef}rp /T 29{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]VWSLXC+ArialMT nfVWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf26.8773 198.615 mo(T)sh%ADOBeginSubsetFont: GAAAAA+TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /GAAAAA+TimesNewRomanPSMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdef/FontBBox {-568 -307 2000 1007} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FBCD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C58344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE23402242D396440157FC51> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VWSLXD+TimesNewRomanPSMT /GAAAAA+TimesNewRomanPSMT findfont ct_VMDictPut/VWSLXD+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero 207{/.notdef}rp]VWSLXD+TimesNewRomanPSMT nfVWSLXD+TimesNewRomanPSMT*1 [8.1794 0 0 -8.1794 0 0 ]msf32.8158 198.615 mo( )shVWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf33.7845 198.615 mo( t4 t3 t2  )[2.76 2.76 5.54 2.76 2.75999 5.54 2.75999 2.76 5.54 2.76 0 ]xshVWSLXD+TimesNewRomanPSMT*1 [8.1794 0 0 -8.1794 0 0 ]msf72.4754 198.615 mo(                                                  )[2.02849 2.02441 2.02849 2.0244 2.0285 2.0244 2.0285 2.02849 2.0244 2.02441 2.02849 2.0285 2.0244 2.02849 2.0244 2.02849 2.02441 2.0285 2.0244 2.02849 2.02441 2.0285 2.02849 2.0244 2.0285 2.0244 2.02441 2.02849 2.02849 2.0244 2.0285 2.0244 2.02849 2.02441 2.0244 2.02849 2.0285 2.0244 2.02849 2.02441 2.02849 2.02849 2.02441 2.0244 2.02849 2.02441 2.02849 2.02849 2.02441 0 ]xshVWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf173.718 198.615 mo(t1   )[2.75999 5.54001 2.75999 2.75999 0 ]xshVWSLXD+TimesNewRomanPSMT*1 [8.1794 0 0 -8.1794 0 0 ]msf190.293 198.615 mo(              )[2.02849 2.0244 2.02441 2.02849 2.0244 2.02849 2.02849 2.02441 2.02849 2.0244 2.02849 2.0244 2.02849 0 ]xshVWSLXD+TimesNewRomanPSMT*1 [10 0 0 -10 0 0 ]msf218.64 198.615 mo(0 )[4.98 0 ]xshVWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf197.64 26.515 mo(r1)[3.30992 0 ]xsh197.64 53.2349 mo(r2)[3.30992 0 ]xsh197.83 77.7149 mo(r3)[3.30992 0 ]xsh197.64 104.445 mo(r4)[3.30992 0 ]xsh197.23 130.535 mo(r5)[3.30992 0 ]xsh197.64 154.615 mo(r6)[3.30992 0 ]xsh197.64 181.225 mo(r7)[3.30992 0 ]xsh96.3705 39.4149 mo(r8)[3.30993 0 ]xsh43.2905 59.6849 mo(r9)[3.30993 0 ]xsh72.9205 116.865 mo(r10)[3.30993 5.53999 0 ]xsh26.6805 86.4049 mo(r11)[3.30993 5.54 0 ]xsh33.9105 168.345 mo(r12)[3.30993 5.54 0 ]xsh262.621 203.847 mo
466.916 203.847 li
466.916 1.35217 li
262.621 1.35217 li
cp
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [8.6875 0 0 -9.648 0 0 ]msf269.023 10.881 mo(r1)[2.89288 0 ]xsh278.401 14.4332 mo
290.064 14.4332 li
290.064 2.77014 li
278.401 2.77014 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
278.4 14.4332 mo
290.063 14.4332 li
290.063 2.77014 li
278.4 2.77014 li
cp
clp
.244 lw
1 lc
1 lj
10 ml
[] 0 dsh
278.401 14.4332 mo
290.07 14.4332 li
290.07 2.76917 li
278.401 2.76917 li
cp
282.877 14.4332 mo
287.438 2.76917 li
278.401 6.00018 mo
279.663 2.76917 li
0 0 0 0 cmyk
@
grestore
.244 lw
1 lc
1 lj
10 ml
[] 0 dsh
278.401 14.4332 mo
290.07 14.4332 li
290.07 2.76917 li
278.401 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 14.4332 mo
301.733 14.4332 li
301.733 2.77014 li
290.07 2.77014 li
cp
.594018 .448493 0 0 cmyk
f
290.07 14.4332 mo
301.733 14.4332 li
301.733 2.76917 li
290.07 2.76917 li
cp
296.917 14.4332 mo
301.472 2.76917 li
290.07 12.0652 mo
293.702 2.76917 li
0 0 0 0 cmyk
@
290.07 14.4332 mo
301.733 14.4332 li
301.733 2.76917 li
290.07 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 14.4332 mo
313.396 14.4332 li
313.396 2.77014 li
301.733 2.77014 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
301.733 14.4332 mo
313.396 14.4332 li
313.396 2.77014 li
301.733 2.77014 li
cp
clp
301.733 14.4332 mo
313.396 14.4332 li
313.396 2.76917 li
301.733 2.76917 li
cp
313.191 14.4332 mo
313.396 13.9102 li
305.415 14.4332 mo
309.976 2.76917 li
301.733 3.97015 mo
302.2 2.76917 li
0 0 0 0 cmyk
@
grestore
301.733 14.4332 mo
313.396 14.4332 li
313.396 2.76917 li
301.733 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 14.4332 mo
325.059 14.4332 li
325.059 2.77014 li
313.396 2.77014 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
313.396 14.4332 mo
325.059 14.4332 li
325.059 2.77014 li
313.396 2.77014 li
cp
clp
313.396 14.4332 mo
325.063 14.4332 li
325.063 2.76917 li
313.396 2.76917 li
cp
318.131 14.4332 mo
322.691 2.76917 li
313.396 6.65314 mo
314.914 2.76917 li
0 0 0 0 cmyk
@
grestore
313.396 14.4332 mo
325.063 14.4332 li
325.063 2.76917 li
313.396 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 14.4332 mo
336.726 14.4332 li
336.726 2.77014 li
325.063 2.77014 li
cp
.10486 .0541695 0 0 cmyk
f
325.063 14.4332 mo
336.726 14.4332 li
336.726 2.76917 li
325.063 2.76917 li
cp
336.286 14.4332 mo
336.726 13.2982 li
328.509 14.4332 mo
333.07 2.76917 li
325.063 3.36316 mo
325.295 2.76917 li
0 0 0 0 cmyk
@
325.063 14.4332 mo
336.726 14.4332 li
336.726 2.76917 li
325.063 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 14.4332 mo
348.389 14.4332 li
348.389 2.77014 li
336.726 2.77014 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 14.4332 mo
348.389 14.4332 li
348.389 2.77014 li
336.726 2.77014 li
cp
clp
336.726 14.4332 mo
348.393 14.4332 li
348.393 2.76917 li
336.726 2.76917 li
cp
347.435 14.4332 mo
348.393 11.9772 li
339.659 14.4332 mo
344.214 2.76917 li
0 0 0 0 cmyk
@
grestore
336.726 14.4332 mo
348.393 14.4332 li
348.393 2.76917 li
336.726 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 14.4332 mo
360.057 14.4332 li
360.057 2.77014 li
348.393 2.77014 li
cp
0 .300114 .177707 0 cmyk
f
gsave
348.393 14.4332 mo
360.057 14.4332 li
360.057 2.77014 li
348.393 2.77014 li
cp
clp
348.393 14.4332 mo
360.056 14.4332 li
360.056 2.76917 li
348.393 2.76917 li
cp
359.283 14.4332 mo
354.728 2.76917 li
351.512 14.4332 mo
348.393 6.45416 li
0 0 0 0 cmyk
@
grestore
348.393 14.4332 mo
360.056 14.4332 li
360.056 2.76917 li
348.393 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
360.056 14.4332 mo
371.719 14.4332 li
371.719 2.77014 li
360.056 2.77014 li
cp
0 .0894789 .039765 0 cmyk
f
360.056 14.4332 mo
371.725 14.4332 li
371.725 2.76917 li
360.056 2.76917 li
cp
371.725 2.84918 mo
371.692 2.76917 li
368.476 14.4332 mo
363.917 2.76917 li
360.701 14.4332 mo
360.056 12.7881 li
0 0 0 0 cmyk
@
360.056 14.4332 mo
371.725 14.4332 li
371.725 2.76917 li
360.056 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 14.4332 mo
383.387 14.4332 li
383.387 2.77014 li
371.725 2.77014 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
371.725 14.4332 mo
383.387 14.4332 li
383.387 2.77014 li
371.725 2.77014 li
cp
clp
371.725 14.4332 mo
383.387 14.4332 li
383.387 2.76917 li
371.725 2.76917 li
cp
382.531 14.4332 mo
383.387 12.2322 li
374.754 14.4332 mo
379.31 2.76917 li
0 0 0 0 cmyk
@
grestore
371.725 14.4332 mo
383.387 14.4332 li
383.387 2.76917 li
371.725 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 14.4332 mo
395.05 14.4332 li
395.05 2.77014 li
383.387 2.77014 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 14.4332 mo
395.05 14.4332 li
395.05 2.77014 li
383.387 2.77014 li
cp
clp
383.387 14.4332 mo
395.054 14.4332 li
395.054 2.76917 li
383.387 2.76917 li
cp
392.839 14.4332 mo
388.281 2.76917 li
385.065 14.4332 mo
383.387 10.1382 li
0 0 0 0 cmyk
@
grestore
383.387 14.4332 mo
395.054 14.4332 li
395.054 2.76917 li
383.387 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 14.4332 mo
406.717 14.4332 li
406.717 2.77014 li
395.054 2.77014 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 14.4332 mo
406.717 14.4332 li
406.717 2.76917 li
395.054 2.76917 li
cp
404.453 14.4332 mo
399.892 2.76917 li
396.676 14.4332 mo
395.054 10.2772 li
0 0 0 0 cmyk
@
395.054 14.4332 mo
406.717 14.4332 li
406.717 2.76917 li
395.054 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 14.4332 mo
418.38 14.4332 li
418.38 2.77014 li
406.717 2.77014 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
406.717 14.4332 mo
418.38 14.4332 li
418.38 2.77014 li
406.717 2.77014 li
cp
clp
406.717 14.4332 mo
418.386 14.4332 li
418.386 2.76917 li
406.717 2.76917 li
cp
416.574 14.4332 mo
412.014 2.76917 li
408.799 14.4332 mo
406.717 9.10419 li
0 0 0 0 cmyk
@
grestore
406.717 14.4332 mo
418.386 14.4332 li
418.386 2.76917 li
406.717 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 14.4332 mo
430.049 14.4332 li
430.049 2.77014 li
418.386 2.77014 li
cp
0 .887968 .730526 0 cmyk
f
gsave
418.386 14.4332 mo
430.049 14.4332 li
430.049 2.77014 li
418.386 2.77014 li
cp
clp
418.386 14.4332 mo
430.049 14.4332 li
430.049 2.76917 li
418.386 2.76917 li
cp
430.049 9.22919 mo
427.524 2.76917 li
424.307 14.4332 mo
419.753 2.76917 li
0 0 0 0 cmyk
@
grestore
418.386 14.4332 mo
430.049 14.4332 li
430.049 2.76917 li
418.386 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 14.4332 mo
441.712 14.4332 li
441.712 2.77014 li
430.049 2.77014 li
cp
0 .300114 .177707 0 cmyk
f
430.049 14.4332 mo
441.712 14.4332 li
441.712 2.76917 li
430.049 2.76917 li
cp
441.402 14.4332 mo
436.846 2.76917 li
433.625 14.4332 mo
430.049 5.27216 li
0 0 0 0 cmyk
@
430.049 14.4332 mo
441.712 14.4332 li
441.712 2.76917 li
430.049 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
441.712 14.4332 mo
453.374 14.4332 li
453.374 2.77014 li
441.712 2.77014 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
441.713 14.4332 mo
453.375 14.4332 li
453.375 2.77014 li
441.713 2.77014 li
cp
clp
441.712 14.4332 mo
453.379 14.4332 li
453.379 2.76917 li
441.712 2.76917 li
cp
453.379 8.18219 mo
451.262 2.76917 li
448.046 14.4332 mo
443.492 2.76917 li
0 0 0 0 cmyk
@
grestore
441.712 14.4332 mo
453.379 14.4332 li
453.379 2.76917 li
441.712 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 14.4332 mo
465.042 14.4332 li
465.042 2.77014 li
453.379 2.77014 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 14.4332 mo
465.042 14.4332 li
465.042 2.77014 li
453.379 2.77014 li
cp
clp
453.379 14.4332 mo
465.042 14.4332 li
465.042 2.76917 li
453.379 2.76917 li
cp
463.606 14.4332 mo
459.047 2.76917 li
455.83 14.4332 mo
453.379 8.15417 li
0 0 0 0 cmyk
@
grestore
453.379 14.4332 mo
465.042 14.4332 li
465.042 2.76917 li
453.379 2.76917 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 26.1002 mo
278.401 26.1002 li
278.401 14.4371 li
266.739 14.4371 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
266.739 26.1002 mo
278.4 26.1002 li
278.4 14.4371 li
266.739 14.4371 li
cp
clp
266.739 26.1002 mo
278.401 26.1002 li
278.401 14.4332 li
266.739 14.4332 li
cp
276.979 26.1002 mo
278.401 22.4581 li
269.208 26.1002 mo
273.763 14.4332 li
0 0 0 0 cmyk
@
grestore
266.739 26.1002 mo
278.401 26.1002 li
278.401 14.4332 li
266.739 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [9.4883 0 0 -10 0 0 ]msf280.941 22.5997 mo(r2)[3.15955 0 ]xsh290.07 26.1002 mo
301.733 26.1002 li
301.733 14.4371 li
290.07 14.4371 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
290.07 26.1002 mo
301.733 26.1002 li
301.733 14.4371 li
290.07 14.4371 li
cp
clp
290.07 26.1002 mo
301.733 26.1002 li
301.733 14.4332 li
290.07 14.4332 li
cp
298.536 26.1002 mo
301.733 17.9172 li
290.765 26.1002 mo
295.319 14.4332 li
0 0 0 0 cmyk
@
grestore
290.07 26.1002 mo
301.733 26.1002 li
301.733 14.4332 li
290.07 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 26.1002 mo
313.396 26.1002 li
313.396 14.4371 li
301.733 14.4371 li
cp
.89691 .810117 0 0 cmyk
f
gsave
301.733 26.1002 mo
313.396 26.1002 li
313.396 14.4371 li
301.733 14.4371 li
cp
clp
301.733 26.1002 mo
313.396 26.1002 li
313.396 14.4332 li
301.733 14.4332 li
cp
307.038 26.1002 mo
311.597 14.4332 li
301.733 19.7802 mo
303.823 14.4332 li
0 0 0 0 cmyk
@
grestore
301.733 26.1002 mo
313.396 26.1002 li
313.396 14.4332 li
301.733 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 26.1002 mo
325.059 26.1002 li
325.059 14.4371 li
313.396 14.4371 li
cp
.594018 .448493 0 0 cmyk
f
gsave
313.396 26.1002 mo
325.059 26.1002 li
325.059 14.4371 li
313.396 14.4371 li
cp
clp
313.396 26.1002 mo
325.063 26.1002 li
325.063 14.4332 li
313.396 14.4332 li
cp
319.752 26.1002 mo
324.307 14.4332 li
313.396 22.4631 mo
316.532 14.4332 li
0 0 0 0 cmyk
@
grestore
313.396 26.1002 mo
325.063 26.1002 li
325.063 14.4332 li
313.396 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 26.1002 mo
336.726 26.1002 li
336.726 14.4371 li
325.063 14.4371 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
325.063 26.1002 mo
336.726 26.1002 li
336.726 14.4371 li
325.063 14.4371 li
cp
clp
325.063 26.1002 mo
336.726 26.1002 li
336.726 14.4332 li
325.063 14.4332 li
cp
330.132 26.1002 mo
334.687 14.4332 li
325.063 19.1732 mo
326.913 14.4332 li
0 0 0 0 cmyk
@
grestore
325.063 26.1002 mo
336.726 26.1002 li
336.726 14.4332 li
325.063 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 26.1002 mo
348.389 26.1002 li
348.389 14.4371 li
336.726 14.4371 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 26.1002 mo
348.389 26.1002 li
348.389 14.4371 li
336.726 14.4371 li
cp
clp
336.726 26.1002 mo
348.393 26.1002 li
348.393 14.4332 li
336.726 14.4332 li
cp
341.276 26.1002 mo
345.836 14.4332 li
336.726 17.8481 mo
338.06 14.4332 li
0 0 0 0 cmyk
@
grestore
336.726 26.1002 mo
348.393 26.1002 li
348.393 14.4332 li
336.726 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 26.1002 mo
360.057 26.1002 li
360.057 14.4371 li
348.393 14.4371 li
cp
.594018 .448493 0 0 cmyk
f
gsave
348.393 26.1002 mo
360.057 26.1002 li
360.057 14.4371 li
348.393 14.4371 li
cp
clp
348.393 26.1002 mo
360.056 26.1002 li
360.056 14.4332 li
348.393 14.4332 li
cp
354.238 26.1002 mo
358.796 14.4332 li
348.393 21.1572 mo
351.021 14.4332 li
0 0 0 0 cmyk
@
grestore
348.393 26.1002 mo
360.056 26.1002 li
360.056 14.4332 li
348.393 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
360.056 26.1002 mo
371.719 26.1002 li
371.719 14.4371 li
360.056 14.4371 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
360.057 26.1002 mo
371.72 26.1002 li
371.72 14.4371 li
360.057 14.4371 li
cp
clp
360.056 26.1002 mo
371.725 26.1002 li
371.725 14.4332 li
360.056 14.4332 li
cp
371.201 26.1002 mo
371.725 24.7621 li
363.426 26.1002 mo
367.985 14.4332 li
360.056 14.8221 mo
360.209 14.4332 li
0 0 0 0 cmyk
@
grestore
360.056 26.1002 mo
371.725 26.1002 li
371.725 14.4332 li
360.056 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 26.1002 mo
383.387 26.1002 li
383.387 14.4371 li
371.725 14.4371 li
cp
0 .300114 .177707 0 cmyk
f
gsave
371.725 26.1002 mo
383.387 26.1002 li
383.387 14.4371 li
371.725 14.4371 li
cp
clp
371.725 26.1002 mo
383.387 26.1002 li
383.387 14.4332 li
371.725 14.4332 li
cp
383.387 15.3832 mo
383.016 14.4332 li
379.801 26.1002 mo
375.241 14.4332 li
372.025 26.1002 mo
371.725 25.3221 li
0 0 0 0 cmyk
@
grestore
371.725 26.1002 mo
383.387 26.1002 li
383.387 14.4332 li
371.725 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 26.1002 mo
395.05 26.1002 li
395.05 14.4371 li
383.387 14.4371 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
383.387 26.1002 mo
395.05 26.1002 li
395.05 14.4371 li
383.387 14.4371 li
cp
clp
383.387 26.1002 mo
395.054 26.1002 li
395.054 14.4332 li
383.387 14.4332 li
cp
387.793 26.1002 mo
392.348 14.4332 li
383.387 17.4731 mo
384.578 14.4332 li
0 0 0 0 cmyk
@
grestore
383.387 26.1002 mo
395.054 26.1002 li
395.054 14.4332 li
383.387 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 26.1002 mo
406.717 26.1002 li
406.717 14.4371 li
395.054 14.4371 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
395.054 26.1002 mo
406.717 26.1002 li
406.717 14.4371 li
395.054 14.4371 li
cp
clp
395.054 26.1002 mo
406.717 26.1002 li
406.717 14.4332 li
395.054 14.4332 li
cp
399.406 26.1002 mo
403.961 14.4332 li
395.054 17.3381 mo
396.185 14.4332 li
0 0 0 0 cmyk
@
grestore
395.054 26.1002 mo
406.717 26.1002 li
406.717 14.4332 li
395.054 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 26.1002 mo
418.38 26.1002 li
418.38 14.4371 li
406.717 14.4371 li
cp
0 .300114 .177707 0 cmyk
f
gsave
406.717 26.1002 mo
418.38 26.1002 li
418.38 14.4371 li
406.717 14.4371 li
cp
clp
406.717 26.1002 mo
418.386 26.1002 li
418.386 14.4332 li
406.717 14.4332 li
cp
418.386 14.9802 mo
418.172 14.4332 li
414.953 26.1002 mo
410.396 14.4332 li
407.182 26.1002 mo
406.717 24.9192 li
0 0 0 0 cmyk
@
grestore
406.717 26.1002 mo
418.386 26.1002 li
418.386 14.4332 li
406.717 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 26.1002 mo
430.049 26.1002 li
430.049 14.4371 li
418.386 14.4371 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
418.386 26.1002 mo
430.049 26.1002 li
430.049 14.4371 li
418.386 14.4371 li
cp
clp
418.386 26.1002 mo
430.049 26.1002 li
430.049 14.4332 li
418.386 14.4332 li
cp
430.049 25.0392 mo
425.906 14.4332 li
422.69 26.1002 mo
418.386 15.0822 li
0 0 0 0 cmyk
@
grestore
418.386 26.1002 mo
430.049 26.1002 li
430.049 14.4332 li
418.386 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 26.1002 mo
441.712 26.1002 li
441.712 14.4371 li
430.049 14.4371 li
cp
0 .514366 .347723 0 cmyk
f
gsave
430.049 26.1002 mo
441.712 26.1002 li
441.712 14.4371 li
430.049 14.4371 li
cp
clp
430.049 26.1002 mo
441.712 26.1002 li
441.712 14.4332 li
430.049 14.4332 li
cp
439.785 26.1002 mo
435.224 14.4332 li
432.008 26.1002 mo
430.049 21.0822 li
0 0 0 0 cmyk
@
grestore
430.049 26.1002 mo
441.712 26.1002 li
441.712 14.4332 li
430.049 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
441.712 26.1002 mo
453.374 26.1002 li
453.374 14.4371 li
441.712 14.4371 li
cp
0 .720119 .54638 0 cmyk
f
gsave
441.713 26.1002 mo
453.375 26.1002 li
453.375 14.4371 li
441.713 14.4371 li
cp
clp
441.712 26.1002 mo
453.379 26.1002 li
453.379 14.4332 li
441.712 14.4332 li
cp
453.379 23.9971 mo
449.645 14.4332 li
446.429 26.1002 mo
441.869 14.4332 li
0 0 0 0 cmyk
@
grestore
441.712 26.1002 mo
453.379 26.1002 li
453.379 14.4332 li
441.712 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 26.1002 mo
465.042 26.1002 li
465.042 14.4371 li
453.379 14.4371 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 26.1002 mo
465.042 26.1002 li
465.042 14.4371 li
453.379 14.4371 li
cp
clp
453.379 26.1002 mo
465.042 26.1002 li
465.042 14.4332 li
453.379 14.4332 li
cp
461.984 26.1002 mo
457.429 14.4332 li
454.213 26.1002 mo
453.379 23.9692 li
0 0 0 0 cmyk
@
grestore
453.379 26.1002 mo
465.042 26.1002 li
465.042 14.4332 li
453.379 14.4332 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 37.7642 mo
278.401 37.7642 li
278.401 26.1011 li
266.739 26.1011 li
cp
.594018 .448493 0 0 cmyk
f
gsave
266.739 37.7632 mo
278.4 37.7632 li
278.4 26.1012 li
266.739 26.1012 li
cp
clp
266.739 37.7642 mo
278.401 37.7642 li
278.401 26.1011 li
266.739 26.1011 li
cp
276.052 37.7642 mo
278.401 31.7542 li
268.282 37.7642 mo
272.836 26.1002 li
0 0 0 0 cmyk
@
grestore
266.739 37.7642 mo
278.401 37.7642 li
278.401 26.1011 li
266.739 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
278.401 37.7642 mo
290.064 37.7642 li
290.064 26.1011 li
278.401 26.1011 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
278.4 37.7632 mo
290.063 37.7632 li
290.063 26.1012 li
278.4 26.1012 li
cp
clp
278.401 37.7642 mo
290.07 37.7642 li
290.07 26.1011 li
278.401 26.1011 li
cp
283.572 37.7642 mo
288.132 26.1002 li
278.401 31.1002 mo
280.358 26.1002 li
0 0 0 0 cmyk
@
grestore
278.401 37.7642 mo
290.07 37.7642 li
290.07 26.1011 li
278.401 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf292.609 34.467 mo(r3)[3.32993 0 ]xsh301.733 37.7642 mo
313.396 37.7642 li
313.396 26.1011 li
301.733 26.1011 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
301.733 37.7632 mo
313.396 37.7632 li
313.396 26.1012 li
301.733 26.1012 li
cp
clp
301.733 37.7642 mo
313.396 37.7642 li
313.396 26.1011 li
301.733 26.1011 li
cp
306.111 37.7642 mo
310.67 26.1002 li
301.733 29.0762 mo
302.896 26.1002 li
0 0 0 0 cmyk
@
grestore
301.733 37.7642 mo
313.396 37.7642 li
313.396 26.1011 li
301.733 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 37.7642 mo
325.059 37.7642 li
325.059 26.1011 li
313.396 26.1011 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
313.396 37.7632 mo
325.059 37.7632 li
325.059 26.1012 li
313.396 26.1012 li
cp
clp
313.396 37.7642 mo
325.063 37.7642 li
325.063 26.1011 li
313.396 26.1011 li
cp
318.826 37.7642 mo
323.38 26.1002 li
313.396 31.7592 mo
315.61 26.1002 li
0 0 0 0 cmyk
@
grestore
313.396 37.7642 mo
325.063 37.7642 li
325.063 26.1011 li
313.396 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 37.7642 mo
336.726 37.7642 li
336.726 26.1011 li
325.063 26.1011 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
325.063 37.7632 mo
336.726 37.7632 li
336.726 26.1012 li
325.063 26.1012 li
cp
clp
325.063 37.7642 mo
336.726 37.7642 li
336.726 26.1011 li
325.063 26.1011 li
cp
334.484 37.7642 mo
329.927 26.1002 li
326.707 37.7642 mo
325.063 33.5472 li
0 0 0 0 cmyk
@
grestore
325.063 37.7642 mo
336.726 37.7642 li
336.726 26.1011 li
325.063 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 37.7642 mo
348.389 37.7642 li
348.389 26.1011 li
336.726 26.1011 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 37.7632 mo
348.389 37.7632 li
348.389 26.1012 li
336.726 26.1012 li
cp
clp
336.726 37.7642 mo
348.393 37.7642 li
348.393 26.1011 li
336.726 26.1011 li
cp
348.125 37.7642 mo
348.393 37.0822 li
340.349 37.7642 mo
344.91 26.1002 li
336.726 27.1432 mo
337.133 26.1002 li
0 0 0 0 cmyk
@
grestore
336.726 37.7642 mo
348.393 37.7642 li
348.393 26.1011 li
336.726 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 37.7642 mo
360.057 37.7642 li
360.057 26.1011 li
348.393 26.1011 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
348.393 37.7632 mo
360.057 37.7632 li
360.057 26.1012 li
348.393 26.1012 li
cp
clp
348.393 37.7642 mo
360.056 37.7642 li
360.056 26.1011 li
348.393 26.1011 li
cp
358.592 37.7642 mo
354.033 26.1002 li
350.818 37.7642 mo
348.393 31.5591 li
0 0 0 0 cmyk
@
grestore
348.393 37.7642 mo
360.056 37.7642 li
360.056 26.1011 li
348.393 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
360.056 37.7642 mo
371.719 37.7642 li
371.719 26.1011 li
360.056 26.1011 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
360.057 37.7632 mo
371.72 37.7632 li
371.72 26.1012 li
360.057 26.1012 li
cp
clp
360.056 37.7642 mo
371.725 37.7642 li
371.725 26.1011 li
360.056 26.1011 li
cp
371.725 27.9542 mo
370.997 26.1002 li
367.781 37.7642 mo
363.221 26.1002 li
0 0 0 0 cmyk
@
grestore
360.056 37.7642 mo
371.725 37.7642 li
371.725 26.1011 li
360.056 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 37.7642 mo
383.387 37.7642 li
383.387 26.1011 li
371.725 26.1011 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
371.725 37.7632 mo
383.387 37.7632 li
383.387 26.1012 li
371.725 26.1012 li
cp
clp
371.725 37.7642 mo
383.387 37.7642 li
383.387 26.1011 li
371.725 26.1011 li
cp
383.221 37.7642 mo
383.387 37.3372 li
375.445 37.7642 mo
380.004 26.1002 li
371.725 27.3981 mo
372.23 26.1002 li
0 0 0 0 cmyk
@
grestore
371.725 37.7642 mo
383.387 37.7642 li
383.387 26.1011 li
371.725 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 37.7642 mo
395.05 37.7642 li
395.05 26.1011 li
383.387 26.1011 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
383.387 37.7632 mo
395.05 37.7632 li
395.05 26.1012 li
383.387 26.1012 li
cp
clp
383.387 37.7642 mo
395.054 37.7642 li
395.054 26.1011 li
383.387 26.1011 li
cp
394.642 37.7642 mo
395.054 36.7072 li
386.867 37.7642 mo
391.421 26.1002 li
383.387 26.7682 mo
383.651 26.1002 li
0 0 0 0 cmyk
@
grestore
383.387 37.7642 mo
395.054 37.7642 li
395.054 26.1011 li
383.387 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 37.7642 mo
406.717 37.7642 li
406.717 26.1011 li
395.054 26.1011 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
395.054 37.7632 mo
406.717 37.7632 li
406.717 26.1012 li
395.054 26.1012 li
cp
clp
395.054 37.7642 mo
406.717 37.7642 li
406.717 26.1011 li
395.054 26.1011 li
cp
406.249 37.7642 mo
406.717 36.5682 li
398.479 37.7642 mo
403.035 26.1002 li
395.054 26.6292 mo
395.264 26.1002 li
0 0 0 0 cmyk
@
grestore
395.054 37.7642 mo
406.717 37.7642 li
406.717 26.1011 li
395.054 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 37.7632 mo
418.38 37.7632 li
418.38 26.1012 li
406.717 26.1012 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
406.717 37.7632 mo
418.38 37.7632 li
418.38 26.1012 li
406.717 26.1012 li
cp
clp
406.717 37.7642 mo
418.386 37.7642 li
418.386 26.1011 li
406.717 26.1011 li
cp
415.879 37.7642 mo
411.324 26.1002 li
408.109 37.7642 mo
406.717 34.2101 li
0 0 0 0 cmyk
@
grestore
406.717 37.7642 mo
418.386 37.7642 li
418.386 26.1011 li
406.717 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 37.7632 mo
430.049 37.7632 li
430.049 26.1012 li
418.386 26.1012 li
cp
0 1 .959045 0 cmyk
f
gsave
418.386 37.7632 mo
430.049 37.7632 li
430.049 26.1012 li
418.386 26.1012 li
cp
clp
418.386 37.7642 mo
430.049 37.7642 li
430.049 26.1011 li
418.386 26.1011 li
cp
430.049 34.3351 mo
426.832 26.1002 li
423.617 37.7642 mo
419.058 26.1002 li
0 0 0 0 cmyk
@
grestore
418.386 37.7642 mo
430.049 37.7642 li
430.049 26.1011 li
418.386 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 37.7632 mo
441.712 37.7632 li
441.712 26.1012 li
430.049 26.1012 li
cp
0 .300114 .177707 0 cmyk
f
gsave
430.049 37.7632 mo
441.712 37.7632 li
441.712 26.1012 li
430.049 26.1012 li
cp
clp
430.049 37.7642 mo
441.712 37.7642 li
441.712 26.1011 li
430.049 26.1011 li
cp
440.711 37.7642 mo
436.151 26.1002 li
432.935 37.7642 mo
430.049 30.3782 li
0 0 0 0 cmyk
@
grestore
430.049 37.7642 mo
441.712 37.7642 li
441.712 26.1011 li
430.049 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 37.7632 mo
453.375 37.7632 li
453.375 26.1012 li
441.713 26.1012 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
441.713 37.7632 mo
453.375 37.7632 li
453.375 26.1012 li
441.713 26.1012 li
cp
clp
441.712 37.7642 mo
453.379 37.7642 li
453.379 26.1011 li
441.712 26.1011 li
cp
453.379 33.2872 mo
450.572 26.1002 li
447.356 37.7642 mo
442.795 26.1002 li
0 0 0 0 cmyk
@
grestore
441.712 37.7642 mo
453.379 37.7642 li
453.379 26.1011 li
441.712 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 37.7632 mo
465.042 37.7632 li
465.042 26.1012 li
453.379 26.1012 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 37.7632 mo
465.042 37.7632 li
465.042 26.1012 li
453.379 26.1012 li
cp
clp
453.379 37.7642 mo
465.042 37.7642 li
465.042 26.1011 li
453.379 26.1011 li
cp
462.911 37.7642 mo
458.356 26.1002 li
455.14 37.7642 mo
453.379 33.2601 li
0 0 0 0 cmyk
@
grestore
453.379 37.7642 mo
465.042 37.7642 li
465.042 26.1011 li
453.379 26.1011 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 49.4261 mo
278.4 49.4261 li
278.4 37.7631 li
266.739 37.7631 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
266.739 49.4261 mo
278.4 49.4261 li
278.4 37.7631 li
266.739 37.7631 li
cp
clp
266.739 49.4272 mo
278.401 49.4272 li
278.401 37.7642 li
266.739 37.7642 li
cp
277.289 49.4272 mo
278.401 46.5812 li
269.514 49.4272 mo
274.074 37.7642 li
0 0 0 0 cmyk
@
grestore
266.739 49.4272 mo
278.401 49.4272 li
278.401 37.7642 li
266.739 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 49.4261 mo
290.063 49.4261 li
290.063 37.7631 li
278.4 37.7631 li
cp
.89691 .810117 0 0 cmyk
f
gsave
278.4 49.4261 mo
290.063 49.4261 li
290.063 37.7631 li
278.4 37.7631 li
cp
clp
278.401 49.4272 mo
290.07 49.4272 li
290.07 37.7642 li
278.401 37.7642 li
cp
284.809 49.4272 mo
289.365 37.7642 li
278.401 45.9332 mo
281.594 37.7642 li
0 0 0 0 cmyk
@
grestore
278.401 49.4272 mo
290.07 49.4272 li
290.07 37.7642 li
278.401 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 49.4261 mo
301.733 49.4261 li
301.733 37.7631 li
290.07 37.7631 li
cp
.10486 .0541695 0 0 cmyk
f
290.07 49.4272 mo
301.733 49.4272 li
301.733 37.7642 li
290.07 37.7642 li
cp
298.845 49.4272 mo
301.733 42.0411 li
291.071 49.4272 mo
295.629 37.7642 li
0 0 0 0 cmyk
@
290.07 49.4272 mo
301.733 49.4272 li
301.733 37.7642 li
290.07 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf304.263 46.2009 mo(r4)[3.32993 0 ]xsh313.396 49.4261 mo
325.059 49.4261 li
325.059 37.7631 li
313.396 37.7631 li
cp
.594018 .448493 0 0 cmyk
f
gsave
313.396 49.4261 mo
325.059 49.4261 li
325.059 37.7631 li
313.396 37.7631 li
cp
clp
313.396 49.4272 mo
325.063 49.4272 li
325.063 37.7642 li
313.396 37.7642 li
cp
320.059 49.4272 mo
324.618 37.7642 li
313.396 46.5862 mo
316.842 37.7642 li
0 0 0 0 cmyk
@
grestore
313.396 49.4272 mo
325.063 49.4272 li
325.063 37.7642 li
313.396 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 49.4261 mo
336.726 49.4261 li
336.726 37.7631 li
325.063 37.7631 li
cp
.10486 .0541695 0 0 cmyk
f
325.063 49.4272 mo
336.726 49.4272 li
336.726 37.7642 li
325.063 37.7642 li
cp
330.437 49.4272 mo
334.997 37.7642 li
325.063 43.2961 mo
327.223 37.7642 li
0 0 0 0 cmyk
@
325.063 49.4272 mo
336.726 49.4272 li
336.726 37.7642 li
325.063 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 49.4261 mo
348.389 49.4261 li
348.389 37.7631 li
336.726 37.7631 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 49.4261 mo
348.389 49.4261 li
348.389 37.7631 li
336.726 37.7631 li
cp
clp
336.726 49.4272 mo
348.393 49.4272 li
348.393 37.7642 li
336.726 37.7642 li
cp
341.586 49.4272 mo
346.146 37.7642 li
336.726 41.9711 mo
338.371 37.7642 li
0 0 0 0 cmyk
@
grestore
336.726 49.4272 mo
348.393 49.4272 li
348.393 37.7642 li
336.726 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 49.4261 mo
360.057 49.4261 li
360.057 37.7631 li
348.393 37.7631 li
cp
.335637 .220035 0 0 cmyk
f
gsave
348.393 49.4261 mo
360.057 49.4261 li
360.057 37.7631 li
348.393 37.7631 li
cp
clp
348.393 49.4272 mo
360.056 49.4272 li
360.056 37.7642 li
348.393 37.7642 li
cp
354.547 49.4272 mo
359.102 37.7642 li
348.393 45.2802 mo
351.331 37.7642 li
0 0 0 0 cmyk
@
grestore
348.393 49.4272 mo
360.056 49.4272 li
360.056 37.7642 li
348.393 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 49.4261 mo
371.72 49.4261 li
371.72 37.7631 li
360.057 37.7631 li
cp
.10486 .0541695 0 0 cmyk
f
360.056 49.4272 mo
371.725 49.4272 li
371.725 37.7642 li
360.056 37.7642 li
cp
371.511 49.4272 mo
371.725 48.8851 li
363.736 49.4272 mo
368.295 37.7642 li
360.056 38.9451 mo
360.52 37.7642 li
0 0 0 0 cmyk
@
360.056 49.4272 mo
371.725 49.4272 li
371.725 37.7642 li
360.056 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 49.4261 mo
383.387 49.4261 li
383.387 37.7631 li
371.725 37.7631 li
cp
0 .300114 .177707 0 cmyk
f
gsave
371.725 49.4261 mo
383.387 49.4261 li
383.387 37.7631 li
371.725 37.7631 li
cp
clp
371.725 49.4272 mo
383.387 49.4272 li
383.387 37.7642 li
371.725 37.7642 li
cp
383.387 39.5062 mo
382.705 37.7642 li
379.491 49.4272 mo
374.935 37.7642 li
0 0 0 0 cmyk
@
grestore
371.725 49.4272 mo
383.387 49.4272 li
383.387 37.7642 li
371.725 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 49.4261 mo
395.05 49.4261 li
395.05 37.7631 li
383.387 37.7631 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 49.4261 mo
395.05 49.4261 li
395.05 37.7631 li
383.387 37.7631 li
cp
clp
383.387 49.4272 mo
395.054 49.4272 li
395.054 37.7642 li
383.387 37.7642 li
cp
395.054 40.1362 mo
394.127 37.7642 li
390.912 49.4272 mo
386.353 37.7642 li
0 0 0 0 cmyk
@
grestore
383.387 49.4272 mo
395.054 49.4272 li
395.054 37.7642 li
383.387 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 49.4261 mo
406.717 49.4261 li
406.717 37.7631 li
395.054 37.7631 li
cp
.10486 .0541695 0 0 cmyk
f
395.054 49.4272 mo
406.717 49.4272 li
406.717 37.7642 li
395.054 37.7642 li
cp
399.711 49.4272 mo
404.272 37.7642 li
395.054 41.4572 mo
396.496 37.7642 li
0 0 0 0 cmyk
@
395.054 49.4272 mo
406.717 49.4272 li
406.717 37.7642 li
395.054 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 49.4261 mo
418.38 49.4261 li
418.38 37.7631 li
406.717 37.7631 li
cp
0 .300114 .177707 0 cmyk
f
gsave
406.717 49.4261 mo
418.38 49.4261 li
418.38 37.7631 li
406.717 37.7631 li
cp
clp
406.717 49.4272 mo
418.386 49.4272 li
418.386 37.7642 li
406.717 37.7642 li
cp
418.386 39.0981 mo
417.863 37.7642 li
414.646 49.4272 mo
410.086 37.7642 li
406.872 49.4272 mo
406.717 49.0372 li
0 0 0 0 cmyk
@
grestore
406.717 49.4272 mo
418.386 49.4272 li
418.386 37.7642 li
406.717 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 49.4261 mo
430.049 49.4261 li
430.049 37.7631 li
418.386 37.7631 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
418.386 49.4261 mo
430.049 49.4261 li
430.049 37.7631 li
418.386 37.7631 li
cp
clp
418.386 49.4272 mo
430.049 49.4272 li
430.049 37.7642 li
418.386 37.7642 li
cp
430.049 49.1622 mo
425.596 37.7642 li
422.379 49.4272 mo
418.386 39.2051 li
0 0 0 0 cmyk
@
grestore
418.386 49.4272 mo
430.049 49.4272 li
430.049 37.7642 li
418.386 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 49.4272 mo
441.712 49.4272 li
441.712 37.7642 li
430.049 37.7642 li
cp
0 .514366 .347723 0 cmyk
f
430.049 49.4272 mo
441.712 49.4272 li
441.712 37.7642 li
430.049 37.7642 li
cp
439.474 49.4272 mo
434.913 37.7642 li
431.698 49.4272 mo
430.049 45.2051 li
0 0 0 0 cmyk
@
430.049 49.4272 mo
441.712 49.4272 li
441.712 37.7642 li
430.049 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
441.712 49.4272 mo
453.374 49.4272 li
453.374 37.7642 li
441.712 37.7642 li
cp
0 .720119 .54638 0 cmyk
f
gsave
441.713 49.4261 mo
453.375 49.4261 li
453.375 37.7631 li
441.713 37.7631 li
cp
clp
441.712 49.4272 mo
453.379 49.4272 li
453.379 37.7642 li
441.712 37.7642 li
cp
453.379 48.1161 mo
449.334 37.7642 li
446.119 49.4272 mo
441.712 38.1581 li
0 0 0 0 cmyk
@
grestore
441.712 49.4272 mo
453.379 49.4272 li
453.379 37.7642 li
441.712 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 49.4272 mo
465.042 49.4272 li
465.042 37.7642 li
453.379 37.7642 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 49.4261 mo
465.042 49.4261 li
465.042 37.7631 li
453.379 37.7631 li
cp
clp
453.379 49.4272 mo
465.042 49.4272 li
465.042 37.7642 li
453.379 37.7642 li
cp
465.042 38.1531 mo
464.894 37.7642 li
461.678 49.4272 mo
457.12 37.7642 li
453.903 49.4272 mo
453.379 48.0881 li
0 0 0 0 cmyk
@
grestore
453.379 49.4272 mo
465.042 49.4272 li
465.042 37.7642 li
453.379 37.7642 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 61.0952 mo
278.401 61.0952 li
278.401 49.4321 li
266.739 49.4321 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
266.739 61.0952 mo
278.4 61.0952 li
278.4 49.4321 li
266.739 49.4321 li
cp
clp
266.739 61.0952 mo
278.401 61.0952 li
278.401 49.4271 li
266.739 49.4271 li
cp
272.146 61.0952 mo
276.702 49.4272 li
266.739 55.0381 mo
268.925 49.4272 li
0 0 0 0 cmyk
@
grestore
266.739 61.0952 mo
278.401 61.0952 li
278.401 49.4271 li
266.739 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
278.401 61.0952 mo
290.064 61.0952 li
290.064 49.4321 li
278.401 49.4321 li
cp
.594018 .448493 0 0 cmyk
f
gsave
278.4 61.0952 mo
290.063 61.0952 li
290.063 49.4321 li
278.4 49.4321 li
cp
clp
278.401 61.0952 mo
290.07 61.0952 li
290.07 49.4271 li
278.401 49.4271 li
cp
287.438 61.0952 mo
290.07 54.3661 li
279.663 61.0952 mo
284.221 49.4272 li
0 0 0 0 cmyk
@
grestore
278.401 61.0952 mo
290.07 61.0952 li
290.07 49.4271 li
278.401 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 61.0952 mo
301.733 61.0952 li
301.733 49.4321 li
290.07 49.4321 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
290.07 61.0952 mo
301.733 61.0952 li
301.733 49.4321 li
290.07 49.4321 li
cp
clp
290.07 61.0952 mo
301.733 61.0952 li
301.733 49.4271 li
290.07 49.4271 li
cp
301.472 61.0952 mo
301.733 60.4322 li
293.702 61.0952 mo
298.257 49.4272 li
290.07 50.4932 mo
290.481 49.4272 li
0 0 0 0 cmyk
@
grestore
290.07 61.0952 mo
301.733 61.0952 li
301.733 49.4271 li
290.07 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 61.0952 mo
313.396 61.0952 li
313.396 49.4321 li
301.733 49.4321 li
cp
.594018 .448493 0 0 cmyk
f
gsave
301.733 61.0952 mo
313.396 61.0952 li
313.396 49.4321 li
301.733 49.4321 li
cp
clp
301.733 61.0952 mo
313.396 61.0952 li
313.396 49.4271 li
301.733 49.4271 li
cp
309.976 61.0952 mo
313.396 52.3372 li
302.2 61.0952 mo
306.76 49.4272 li
0 0 0 0 cmyk
@
grestore
301.733 61.0952 mo
313.396 61.0952 li
313.396 49.4271 li
301.733 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf315.932 57.7366 mo(r5)[3.32993 0 ]xsh325.063 61.0952 mo
336.726 61.0952 li
336.726 49.4321 li
325.063 49.4321 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
325.063 61.0952 mo
336.726 61.0952 li
336.726 49.4321 li
325.063 49.4321 li
cp
clp
325.063 61.0952 mo
336.726 61.0952 li
336.726 49.4271 li
325.063 49.4271 li
cp
333.07 61.0952 mo
336.726 51.7302 li
325.295 61.0952 mo
329.849 49.4272 li
0 0 0 0 cmyk
@
grestore
325.063 61.0952 mo
336.726 61.0952 li
336.726 49.4271 li
325.063 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 61.0952 mo
348.389 61.0952 li
348.389 49.4321 li
336.726 49.4321 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 61.0952 mo
348.389 61.0952 li
348.389 49.4321 li
336.726 49.4321 li
cp
clp
336.726 61.0952 mo
348.393 61.0952 li
348.393 49.4271 li
336.726 49.4271 li
cp
344.214 61.0952 mo
348.393 50.4052 li
336.726 60.3622 mo
340.998 49.4272 li
0 0 0 0 cmyk
@
grestore
336.726 61.0952 mo
348.393 61.0952 li
348.393 49.4271 li
336.726 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 61.0952 mo
360.057 61.0952 li
360.057 49.4321 li
348.393 49.4321 li
cp
.810636 .664393 0 0 cmyk
f
gsave
348.393 61.0952 mo
360.057 61.0952 li
360.057 49.4321 li
348.393 49.4321 li
cp
clp
348.393 61.0952 mo
360.056 61.0952 li
360.056 49.4271 li
348.393 49.4271 li
cp
357.174 61.0952 mo
360.056 53.7131 li
349.4 61.0952 mo
353.958 49.4272 li
0 0 0 0 cmyk
@
grestore
348.393 61.0952 mo
360.056 61.0952 li
360.056 49.4271 li
348.393 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 61.0952 mo
371.72 61.0952 li
371.72 49.4321 li
360.057 49.4321 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
360.057 61.0952 mo
371.72 61.0952 li
371.72 49.4321 li
360.057 49.4321 li
cp
clp
360.056 61.0952 mo
371.725 61.0952 li
371.725 49.4271 li
360.056 49.4271 li
cp
371.692 61.0952 mo
367.131 49.4272 li
363.917 61.0952 mo
360.056 51.2151 li
0 0 0 0 cmyk
@
grestore
360.056 61.0952 mo
371.725 61.0952 li
371.725 49.4271 li
360.056 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 61.0952 mo
383.387 61.0952 li
383.387 49.4321 li
371.725 49.4321 li
cp
.594018 .448493 0 0 cmyk
f
gsave
371.725 61.0952 mo
383.387 61.0952 li
383.387 49.4321 li
371.725 49.4321 li
cp
clp
371.725 61.0952 mo
383.387 61.0952 li
383.387 49.4271 li
371.725 49.4271 li
cp
379.31 61.0952 mo
383.387 50.6602 li
371.725 60.6172 mo
376.094 49.4272 li
0 0 0 0 cmyk
@
grestore
371.725 61.0952 mo
383.387 61.0952 li
383.387 49.4271 li
371.725 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 61.0952 mo
395.05 61.0952 li
395.05 49.4321 li
383.387 49.4321 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 61.0952 mo
395.05 61.0952 li
395.05 49.4321 li
383.387 49.4321 li
cp
clp
383.387 61.0952 mo
395.054 61.0952 li
395.054 49.4271 li
383.387 49.4271 li
cp
395.054 58.5272 mo
391.501 49.4272 li
388.281 61.0952 mo
383.725 49.4272 li
0 0 0 0 cmyk
@
grestore
383.387 61.0952 mo
395.054 61.0952 li
395.054 49.4271 li
383.387 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 61.0952 mo
406.717 61.0952 li
406.717 49.4321 li
395.054 49.4321 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
395.054 61.0952 mo
406.717 61.0952 li
406.717 49.4321 li
395.054 49.4321 li
cp
clp
395.054 61.0952 mo
406.717 61.0952 li
406.717 49.4271 li
395.054 49.4271 li
cp
402.344 61.0952 mo
406.717 49.8951 li
395.054 59.8522 mo
399.123 49.4272 li
0 0 0 0 cmyk
@
grestore
395.054 61.0952 mo
406.717 61.0952 li
406.717 49.4271 li
395.054 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 61.0952 mo
418.38 61.0952 li
418.38 49.4321 li
406.717 49.4321 li
cp
0 .514366 .347723 0 cmyk
f
gsave
406.717 61.0952 mo
418.38 61.0952 li
418.38 49.4321 li
406.717 49.4321 li
cp
clp
406.717 61.0952 mo
418.386 61.0952 li
418.386 49.4271 li
406.717 49.4271 li
cp
418.386 57.4941 mo
415.234 49.4272 li
412.019 61.0952 mo
407.459 49.4272 li
0 0 0 0 cmyk
@
grestore
406.717 61.0952 mo
418.386 61.0952 li
418.386 49.4271 li
406.717 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 61.0952 mo
430.049 61.0952 li
430.049 49.4321 li
418.386 49.4321 li
cp
0 .300114 .177707 0 cmyk
f
gsave
418.386 61.0952 mo
430.049 61.0952 li
430.049 49.4321 li
418.386 49.4321 li
cp
clp
418.386 61.0952 mo
430.049 61.0952 li
430.049 49.4271 li
418.386 49.4271 li
cp
427.524 61.0952 mo
422.967 49.4272 li
419.753 61.0952 mo
418.386 57.5961 li
0 0 0 0 cmyk
@
grestore
418.386 61.0952 mo
430.049 61.0952 li
430.049 49.4271 li
418.386 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 61.0952 mo
441.712 61.0952 li
441.712 49.4321 li
430.049 49.4321 li
cp
0 1 .959045 0 cmyk
f
gsave
430.049 61.0952 mo
441.712 61.0952 li
441.712 49.4321 li
430.049 49.4321 li
cp
clp
430.049 61.0952 mo
441.712 61.0952 li
441.712 49.4271 li
430.049 49.4271 li
cp
441.712 53.6572 mo
440.062 49.4272 li
436.846 61.0952 mo
432.288 49.4272 li
0 0 0 0 cmyk
@
grestore
430.049 61.0952 mo
441.712 61.0952 li
441.712 49.4271 li
430.049 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 61.0952 mo
453.375 61.0952 li
453.375 49.4321 li
441.713 49.4321 li
cp
0 .887968 .730526 0 cmyk
f
gsave
441.713 61.0952 mo
453.375 61.0952 li
453.375 49.4321 li
441.713 49.4321 li
cp
clp
441.712 61.0952 mo
453.379 61.0952 li
453.379 49.4271 li
441.712 49.4271 li
cp
451.262 61.0952 mo
446.706 49.4272 li
443.492 61.0952 mo
441.712 56.5491 li
0 0 0 0 cmyk
@
grestore
441.712 61.0952 mo
453.379 61.0952 li
453.379 49.4271 li
441.712 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 61.0952 mo
465.042 61.0952 li
465.042 49.4321 li
453.379 49.4321 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 61.0952 mo
465.042 61.0952 li
465.042 49.4321 li
453.379 49.4321 li
cp
clp
453.379 61.0952 mo
465.042 61.0952 li
465.042 49.4271 li
453.379 49.4271 li
cp
465.042 56.5442 mo
462.267 49.4272 li
459.047 61.0952 mo
454.491 49.4272 li
0 0 0 0 cmyk
@
grestore
453.379 61.0952 mo
465.042 61.0952 li
465.042 49.4271 li
453.379 49.4271 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 72.7581 mo
278.4 72.7581 li
278.4 61.0941 li
266.739 61.0941 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
266.739 72.7581 mo
278.4 72.7581 li
278.4 61.0941 li
266.739 61.0941 li
cp
clp
266.739 72.7581 mo
278.401 72.7581 li
278.401 61.0952 li
266.739 61.0952 li
cp
277.382 72.7581 mo
278.401 70.1532 li
269.607 72.7581 mo
274.165 61.0952 li
0 0 0 0 cmyk
@
grestore
266.739 72.7581 mo
278.401 72.7581 li
278.401 61.0952 li
266.739 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 72.7581 mo
290.063 72.7581 li
290.063 61.0941 li
278.4 61.0941 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
278.4 72.7581 mo
290.063 72.7581 li
290.063 61.0941 li
278.4 61.0941 li
cp
clp
278.401 72.7581 mo
290.07 72.7581 li
290.07 61.0952 li
278.401 61.0952 li
cp
284.904 72.7581 mo
289.462 61.0952 li
278.401 69.5002 mo
281.687 61.0952 li
0 0 0 0 cmyk
@
grestore
278.401 72.7581 mo
290.07 72.7581 li
290.07 61.0952 li
278.401 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 72.7581 mo
301.733 72.7581 li
301.733 61.0941 li
290.07 61.0941 li
cp
0 .0894789 .039765 0 cmyk
f
290.07 72.7581 mo
301.733 72.7581 li
301.733 61.0952 li
290.07 61.0952 li
cp
301.561 72.7581 mo
297.006 61.0952 li
293.786 72.7581 mo
290.07 63.2402 li
0 0 0 0 cmyk
@
290.07 72.7581 mo
301.733 72.7581 li
301.733 61.0952 li
290.07 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 72.7581 mo
313.396 72.7581 li
313.396 61.0941 li
301.733 61.0941 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
301.733 72.7581 mo
313.396 72.7581 li
313.396 61.0941 li
301.733 61.0941 li
cp
clp
301.733 72.7581 mo
313.396 72.7581 li
313.396 61.0952 li
301.733 61.0952 li
cp
307.441 72.7581 mo
312 61.0952 li
301.733 67.4712 mo
304.226 61.0952 li
0 0 0 0 cmyk
@
grestore
301.733 72.7581 mo
313.396 72.7581 li
313.396 61.0952 li
301.733 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 72.7581 mo
325.059 72.7581 li
325.059 61.0941 li
313.396 61.0941 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
313.396 72.7581 mo
325.059 72.7581 li
325.059 61.0941 li
313.396 61.0941 li
cp
clp
313.396 72.7581 mo
325.063 72.7581 li
325.063 61.0952 li
313.396 61.0952 li
cp
320.151 72.7581 mo
324.711 61.0952 li
313.396 70.1532 mo
316.935 61.0952 li
0 0 0 0 cmyk
@
grestore
313.396 72.7581 mo
325.063 72.7581 li
325.063 61.0952 li
313.396 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf327.6 69.4597 mo(r6)[3.32993 0 ]xsh336.726 72.7581 mo
348.389 72.7581 li
348.389 61.0941 li
336.726 61.0941 li
cp
.991394 .963012 .0224002 .00402838 cmyk
f
gsave
336.726 72.7581 mo
348.389 72.7581 li
348.389 61.0941 li
336.726 61.0941 li
cp
clp
336.726 72.7581 mo
348.393 72.7581 li
348.393 61.0952 li
336.726 61.0952 li
cp
341.679 72.7581 mo
346.239 61.0952 li
336.726 65.5381 mo
338.464 61.0952 li
0 0 0 0 cmyk
@
grestore
336.726 72.7581 mo
348.393 72.7581 li
348.393 61.0952 li
336.726 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 72.7581 mo
360.057 72.7581 li
360.057 61.0941 li
348.393 61.0941 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
348.393 72.7581 mo
360.057 72.7581 li
360.057 61.0941 li
348.393 61.0941 li
cp
clp
348.393 72.7581 mo
360.056 72.7581 li
360.056 61.0952 li
348.393 61.0952 li
cp
354.64 72.7581 mo
359.199 61.0952 li
348.393 68.8512 mo
351.424 61.0952 li
0 0 0 0 cmyk
@
grestore
348.393 72.7581 mo
360.056 72.7581 li
360.056 61.0952 li
348.393 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 72.7581 mo
371.72 72.7581 li
371.72 61.0941 li
360.057 61.0941 li
cp
.10486 .0541695 0 0 cmyk
f
360.056 72.7581 mo
371.725 72.7581 li
371.725 61.0952 li
360.056 61.0952 li
cp
371.604 72.7581 mo
371.725 72.4561 li
363.829 72.7581 mo
368.387 61.0952 li
360.056 62.5172 mo
360.613 61.0952 li
0 0 0 0 cmyk
@
360.056 72.7581 mo
371.725 72.7581 li
371.725 61.0952 li
360.056 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 72.7581 mo
383.387 72.7581 li
383.387 61.0941 li
371.725 61.0941 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
371.725 72.7581 mo
383.387 72.7581 li
383.387 61.0941 li
371.725 61.0941 li
cp
clp
371.725 72.7581 mo
383.387 72.7581 li
383.387 61.0952 li
371.725 61.0952 li
cp
376.775 72.7581 mo
381.334 61.0952 li
371.725 65.7932 mo
373.56 61.0952 li
0 0 0 0 cmyk
@
grestore
371.725 72.7581 mo
383.387 72.7581 li
383.387 61.0952 li
371.725 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 72.7581 mo
395.05 72.7581 li
395.05 61.0941 li
383.387 61.0941 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 72.7581 mo
395.05 72.7581 li
395.05 61.0941 li
383.387 61.0941 li
cp
clp
383.387 72.7581 mo
395.054 72.7581 li
395.054 61.0952 li
383.387 61.0952 li
cp
395.054 63.7032 mo
394.036 61.0952 li
390.819 72.7581 mo
386.26 61.0952 li
0 0 0 0 cmyk
@
grestore
383.387 72.7581 mo
395.054 72.7581 li
395.054 61.0952 li
383.387 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 72.7581 mo
406.717 72.7581 li
406.717 61.0941 li
395.054 61.0941 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 72.7581 mo
406.717 72.7581 li
406.717 61.0952 li
395.054 61.0952 li
cp
406.717 63.8422 mo
405.647 61.0952 li
402.426 72.7581 mo
397.872 61.0952 li
0 0 0 0 cmyk
@
395.054 72.7581 mo
406.717 72.7581 li
406.717 61.0952 li
395.054 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 72.7581 mo
418.38 72.7581 li
418.38 61.0941 li
406.717 61.0941 li
cp
0 1 .959045 0 cmyk
f
gsave
406.717 72.7581 mo
418.38 72.7581 li
418.38 61.0941 li
406.717 61.0941 li
cp
clp
406.717 72.7581 mo
418.386 72.7581 li
418.386 61.0952 li
406.717 61.0952 li
cp
418.386 62.6702 mo
417.77 61.0952 li
414.553 72.7581 mo
409.994 61.0952 li
406.779 72.7581 mo
406.717 72.6092 li
0 0 0 0 cmyk
@
grestore
406.717 72.7581 mo
418.386 72.7581 li
418.386 61.0952 li
406.717 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 72.7581 mo
430.049 72.7581 li
430.049 61.0941 li
418.386 61.0941 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
418.386 72.7581 mo
430.049 72.7581 li
430.049 61.0941 li
418.386 61.0941 li
cp
clp
418.386 72.7581 mo
430.049 72.7581 li
430.049 61.0952 li
418.386 61.0952 li
cp
430.049 72.7302 mo
425.503 61.0952 li
422.288 72.7581 mo
418.386 62.7722 li
0 0 0 0 cmyk
@
grestore
418.386 72.7581 mo
430.049 72.7581 li
430.049 61.0952 li
418.386 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 72.7581 mo
441.712 72.7581 li
441.712 61.0941 li
430.049 61.0941 li
cp
0 .0894789 .039765 0 cmyk
f
430.049 72.7581 mo
441.712 72.7581 li
441.712 61.0952 li
430.049 61.0952 li
cp
439.381 72.7581 mo
434.822 61.0952 li
431.605 72.7581 mo
430.049 68.7722 li
0 0 0 0 cmyk
@
430.049 72.7581 mo
441.712 72.7581 li
441.712 61.0952 li
430.049 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 72.7581 mo
453.375 72.7581 li
453.375 61.0941 li
441.713 61.0941 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
441.713 72.7581 mo
453.375 72.7581 li
453.375 61.0941 li
441.713 61.0941 li
cp
clp
441.712 72.7581 mo
453.379 72.7581 li
453.379 61.0952 li
441.712 61.0952 li
cp
453.379 71.6872 mo
449.242 61.0952 li
446.026 72.7581 mo
441.712 61.7292 li
0 0 0 0 cmyk
@
grestore
441.712 72.7581 mo
453.379 72.7581 li
453.379 61.0952 li
441.712 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 72.7581 mo
465.042 72.7581 li
465.042 61.0941 li
453.379 61.0941 li
cp
0 1 1 0 cmyk
f
gsave
453.379 72.7581 mo
465.042 72.7581 li
465.042 61.0941 li
453.379 61.0941 li
cp
clp
453.379 72.7581 mo
465.042 72.7581 li
465.042 61.0952 li
453.379 61.0952 li
cp
465.042 61.7202 mo
464.801 61.0952 li
461.585 72.7581 mo
457.027 61.0952 li
453.811 72.7581 mo
453.379 71.6591 li
0 0 0 0 cmyk
@
grestore
453.379 72.7581 mo
465.042 72.7581 li
465.042 61.0952 li
453.379 61.0952 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 84.4252 mo
278.4 84.4252 li
278.4 72.7632 li
266.739 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
266.739 84.4252 mo
278.4 84.4252 li
278.4 72.7632 li
266.739 72.7632 li
cp
clp
266.739 84.4252 mo
278.401 84.4252 li
278.401 72.7582 li
266.739 72.7582 li
cp
277.585 84.4252 mo
278.401 82.3352 li
269.811 84.4252 mo
274.371 72.7581 li
0 0 0 0 cmyk
@
grestore
266.739 84.4252 mo
278.401 84.4252 li
278.401 72.7582 li
266.739 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 84.4252 mo
290.063 84.4252 li
290.063 72.7632 li
278.4 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
278.4 84.4252 mo
290.063 84.4252 li
290.063 72.7632 li
278.4 72.7632 li
cp
clp
278.401 84.4252 mo
290.07 84.4252 li
290.07 72.7582 li
278.401 72.7582 li
cp
285.107 84.4252 mo
289.662 72.7581 li
278.401 81.6822 mo
281.886 72.7581 li
0 0 0 0 cmyk
@
grestore
278.401 84.4252 mo
290.07 84.4252 li
290.07 72.7582 li
278.401 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 84.4252 mo
301.733 84.4252 li
301.733 72.7632 li
290.07 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
290.07 84.4252 mo
301.733 84.4252 li
301.733 72.7582 li
290.07 72.7582 li
cp
299.142 84.4252 mo
301.733 77.7942 li
291.367 84.4252 mo
295.927 72.7581 li
0 0 0 0 cmyk
@
290.07 84.4252 mo
301.733 84.4252 li
301.733 72.7582 li
290.07 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 84.4252 mo
313.396 84.4252 li
313.396 72.7632 li
301.733 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
301.733 84.4252 mo
313.396 84.4252 li
313.396 72.7632 li
301.733 72.7632 li
cp
clp
301.733 84.4252 mo
313.396 84.4252 li
313.396 72.7582 li
301.733 72.7582 li
cp
307.645 84.4252 mo
312.2 72.7581 li
301.733 79.6522 mo
304.425 72.7581 li
0 0 0 0 cmyk
@
grestore
301.733 84.4252 mo
313.396 84.4252 li
313.396 72.7582 li
301.733 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 84.4252 mo
325.059 84.4252 li
325.059 72.7632 li
313.396 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
313.396 84.4252 mo
325.059 84.4252 li
325.059 72.7632 li
313.396 72.7632 li
cp
clp
313.396 84.4252 mo
325.063 84.4252 li
325.063 72.7582 li
313.396 72.7582 li
cp
320.355 84.4252 mo
324.914 72.7581 li
313.396 82.3352 mo
317.138 72.7581 li
0 0 0 0 cmyk
@
grestore
313.396 84.4252 mo
325.063 84.4252 li
325.063 72.7582 li
313.396 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 84.4252 mo
336.726 84.4252 li
336.726 72.7632 li
325.063 72.7632 li
cp
.991394 .963012 .0224002 .00402838 cmyk
f
325.063 84.4252 mo
336.726 84.4252 li
336.726 72.7582 li
325.063 72.7582 li
cp
330.735 84.4252 mo
335.293 72.7581 li
325.063 79.0452 mo
327.519 72.7581 li
0 0 0 0 cmyk
@
325.063 84.4252 mo
336.726 84.4252 li
336.726 72.7582 li
325.063 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf339.269 81.1374 mo(r7)[3.32993 0 ]xsh348.393 84.4252 mo
360.057 84.4252 li
360.057 72.7632 li
348.393 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
348.393 84.4252 mo
360.057 84.4252 li
360.057 72.7632 li
348.393 72.7632 li
cp
clp
348.393 84.4252 mo
360.056 84.4252 li
360.056 72.7582 li
348.393 72.7582 li
cp
354.844 84.4252 mo
359.398 72.7581 li
348.393 81.0332 mo
351.623 72.7581 li
0 0 0 0 cmyk
@
grestore
348.393 84.4252 mo
360.056 84.4252 li
360.056 72.7582 li
348.393 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 84.4252 mo
371.72 84.4252 li
371.72 72.7632 li
360.057 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
360.056 84.4252 mo
371.725 84.4252 li
371.725 72.7582 li
360.056 72.7582 li
cp
364.033 84.4252 mo
368.586 72.7581 li
360.056 74.6992 mo
360.816 72.7581 li
0 0 0 0 cmyk
@
360.056 84.4252 mo
371.725 84.4252 li
371.725 72.7582 li
360.056 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 84.4252 mo
383.387 84.4252 li
383.387 72.7632 li
371.725 72.7632 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
371.725 84.4252 mo
383.387 84.4252 li
383.387 72.7632 li
371.725 72.7632 li
cp
clp
371.725 84.4252 mo
383.387 84.4252 li
383.387 72.7582 li
371.725 72.7582 li
cp
376.979 84.4252 mo
381.534 72.7581 li
371.725 77.9752 mo
373.763 72.7581 li
0 0 0 0 cmyk
@
grestore
371.725 84.4252 mo
383.387 84.4252 li
383.387 72.7582 li
371.725 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 84.4252 mo
395.05 84.4252 li
395.05 72.7632 li
383.387 72.7632 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 84.4252 mo
395.05 84.4252 li
395.05 72.7632 li
383.387 72.7632 li
cp
clp
383.387 84.4252 mo
395.054 84.4252 li
395.054 72.7582 li
383.387 72.7582 li
cp
395.054 75.8852 mo
393.831 72.7581 li
390.616 84.4252 mo
386.057 72.7581 li
0 0 0 0 cmyk
@
grestore
383.387 84.4252 mo
395.054 84.4252 li
395.054 72.7582 li
383.387 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 84.4252 mo
406.717 84.4252 li
406.717 72.7632 li
395.054 72.7632 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 84.4252 mo
406.717 84.4252 li
406.717 72.7582 li
395.054 72.7582 li
cp
406.717 76.0242 mo
405.444 72.7581 li
402.227 84.4252 mo
397.668 72.7581 li
0 0 0 0 cmyk
@
395.054 84.4252 mo
406.717 84.4252 li
406.717 72.7582 li
395.054 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 84.4252 mo
418.38 84.4252 li
418.38 72.7632 li
406.717 72.7632 li
cp
0 1 .959045 0 cmyk
f
gsave
406.717 84.4252 mo
418.38 84.4252 li
418.38 72.7632 li
406.717 72.7632 li
cp
clp
406.717 84.4252 mo
418.386 84.4252 li
418.386 72.7582 li
406.717 72.7582 li
cp
418.386 74.8522 mo
417.565 72.7581 li
414.35 84.4252 mo
409.789 72.7581 li
0 0 0 0 cmyk
@
grestore
406.717 84.4252 mo
418.386 84.4252 li
418.386 72.7582 li
406.717 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 84.4252 mo
430.049 84.4252 li
430.049 72.7632 li
418.386 72.7632 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
418.386 84.4252 mo
430.049 84.4252 li
430.049 72.7632 li
418.386 72.7632 li
cp
clp
418.386 84.4252 mo
430.049 84.4252 li
430.049 72.7582 li
418.386 72.7582 li
cp
429.858 84.4252 mo
425.299 72.7581 li
422.083 84.4252 mo
418.386 74.9542 li
0 0 0 0 cmyk
@
grestore
418.386 84.4252 mo
430.049 84.4252 li
430.049 72.7582 li
418.386 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 84.4252 mo
441.712 84.4252 li
441.712 72.7632 li
430.049 72.7632 li
cp
0 .0894789 .039765 0 cmyk
f
430.049 84.4252 mo
441.712 84.4252 li
441.712 72.7582 li
430.049 72.7582 li
cp
439.176 84.4252 mo
434.622 72.7581 li
431.402 84.4252 mo
430.049 80.9592 li
0 0 0 0 cmyk
@
430.049 84.4252 mo
441.712 84.4252 li
441.712 72.7582 li
430.049 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 84.4252 mo
453.375 84.4252 li
453.375 72.7632 li
441.713 72.7632 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
441.713 84.4252 mo
453.375 84.4252 li
453.375 72.7632 li
441.713 72.7632 li
cp
clp
441.712 84.4252 mo
453.379 84.4252 li
453.379 72.7582 li
441.712 72.7582 li
cp
453.379 83.8692 mo
449.037 72.7581 li
445.823 84.4252 mo
441.712 73.9112 li
0 0 0 0 cmyk
@
grestore
441.712 84.4252 mo
453.379 84.4252 li
453.379 72.7582 li
441.712 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 84.4252 mo
465.042 84.4252 li
465.042 72.7632 li
453.379 72.7632 li
cp
0 1 1 0 cmyk
f
gsave
453.379 84.4252 mo
465.042 84.4252 li
465.042 72.7632 li
453.379 72.7632 li
cp
clp
453.379 84.4252 mo
465.042 84.4252 li
465.042 72.7582 li
453.379 72.7582 li
cp
465.042 73.9022 mo
464.598 72.7581 li
461.381 84.4252 mo
456.822 72.7581 li
453.607 84.4252 mo
453.379 83.8412 li
0 0 0 0 cmyk
@
grestore
453.379 84.4252 mo
465.042 84.4252 li
465.042 72.7582 li
453.379 72.7582 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 96.0882 mo
278.4 96.0882 li
278.4 84.4252 li
266.739 84.4252 li
cp
0 .300114 .177707 0 cmyk
f
gsave
266.739 96.0882 mo
278.4 96.0882 li
278.4 84.4252 li
266.739 84.4252 li
cp
clp
266.739 96.0882 mo
278.401 96.0882 li
278.401 84.4252 li
266.739 84.4252 li
cp
278.401 91.2092 mo
275.75 84.4252 li
272.536 96.0882 mo
267.976 84.4252 li
0 0 0 0 cmyk
@
grestore
266.739 96.0882 mo
278.401 96.0882 li
278.401 84.4252 li
266.739 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 96.0882 mo
290.063 96.0882 li
290.063 84.4252 li
278.4 84.4252 li
cp
.594018 .448493 0 0 cmyk
f
gsave
278.4 96.0882 mo
290.063 96.0882 li
290.063 84.4252 li
278.4 84.4252 li
cp
clp
278.401 96.0882 mo
290.07 96.0882 li
290.07 84.4252 li
278.401 84.4252 li
cp
284.597 96.0882 mo
289.156 84.4252 li
278.401 92.0522 mo
281.381 84.4252 li
0 0 0 0 cmyk
@
grestore
278.401 96.0882 mo
290.07 96.0882 li
290.07 84.4252 li
278.401 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 96.0882 mo
301.733 96.0882 li
301.733 84.4252 li
290.07 84.4252 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
290.07 96.0882 mo
301.733 96.0882 li
301.733 84.4252 li
290.07 84.4252 li
cp
clp
290.07 96.0882 mo
301.733 96.0882 li
301.733 84.4252 li
290.07 84.4252 li
cp
301.733 95.7502 mo
297.306 84.4252 li
294.092 96.0882 mo
290.07 85.7921 li
0 0 0 0 cmyk
@
grestore
290.07 96.0882 mo
301.733 96.0882 li
301.733 84.4252 li
290.07 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 96.0882 mo
313.396 96.0882 li
313.396 84.4252 li
301.733 84.4252 li
cp
.335637 .220035 0 0 cmyk
f
gsave
301.733 96.0882 mo
313.396 96.0882 li
313.396 84.4252 li
301.733 84.4252 li
cp
clp
301.733 96.0882 mo
313.396 96.0882 li
313.396 84.4252 li
301.733 84.4252 li
cp
307.136 96.0882 mo
311.695 84.4252 li
301.733 90.0272 mo
303.919 84.4252 li
0 0 0 0 cmyk
@
grestore
301.733 96.0882 mo
313.396 96.0882 li
313.396 84.4252 li
301.733 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 96.0882 mo
325.059 96.0882 li
325.059 84.4252 li
313.396 84.4252 li
cp
.810636 .664393 0 0 cmyk
f
gsave
313.396 96.0882 mo
325.059 96.0882 li
325.059 84.4252 li
313.396 84.4252 li
cp
clp
313.396 96.0882 mo
325.063 96.0882 li
325.063 84.4252 li
313.396 84.4252 li
cp
319.849 96.0882 mo
324.41 84.4252 li
313.396 92.7052 mo
316.634 84.4252 li
0 0 0 0 cmyk
@
grestore
313.396 96.0882 mo
325.063 96.0882 li
325.063 84.4252 li
313.396 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 96.0882 mo
336.726 96.0882 li
336.726 84.4252 li
325.063 84.4252 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
325.063 96.0882 mo
336.726 96.0882 li
336.726 84.4252 li
325.063 84.4252 li
cp
clp
325.063 96.0882 mo
336.726 96.0882 li
336.726 84.4252 li
325.063 84.4252 li
cp
330.23 96.0882 mo
334.789 84.4252 li
325.063 89.4162 mo
327.013 84.4252 li
0 0 0 0 cmyk
@
grestore
325.063 96.0882 mo
336.726 96.0882 li
336.726 84.4252 li
325.063 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 96.0882 mo
348.389 96.0882 li
348.389 84.4252 li
336.726 84.4252 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 96.0882 mo
348.389 96.0882 li
348.389 84.4252 li
336.726 84.4252 li
cp
clp
336.726 96.0882 mo
348.393 96.0882 li
348.393 84.4252 li
336.726 84.4252 li
cp
341.378 96.0882 mo
345.933 84.4252 li
336.726 88.0952 mo
338.163 84.4252 li
0 0 0 0 cmyk
@
grestore
336.726 96.0882 mo
348.393 96.0882 li
348.393 84.4252 li
336.726 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf350.936 92.8054 mo(r8)[3.32993 0 ]xsh360.057 96.0882 mo
371.72 96.0882 li
371.72 84.4252 li
360.057 84.4252 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
360.057 96.0882 mo
371.72 96.0882 li
371.72 84.4252 li
360.057 84.4252 li
cp
clp
360.056 96.0882 mo
371.725 96.0882 li
371.725 84.4252 li
360.056 84.4252 li
cp
371.725 88.9062 mo
369.972 84.4252 li
366.757 96.0882 mo
362.197 84.4252 li
0 0 0 0 cmyk
@
grestore
360.056 96.0882 mo
371.725 96.0882 li
371.725 84.4252 li
360.056 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 96.0882 mo
383.387 96.0882 li
383.387 84.4252 li
371.725 84.4252 li
cp
.594018 .448493 0 0 cmyk
f
gsave
371.725 96.0882 mo
383.387 96.0882 li
383.387 84.4252 li
371.725 84.4252 li
cp
clp
371.725 96.0882 mo
383.387 96.0882 li
383.387 84.4252 li
371.725 84.4252 li
cp
376.474 96.0882 mo
381.029 84.4252 li
371.725 88.3502 mo
373.258 84.4252 li
0 0 0 0 cmyk
@
grestore
371.725 96.0882 mo
383.387 96.0882 li
383.387 84.4252 li
371.725 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 96.0882 mo
395.05 96.0882 li
395.05 84.4252 li
383.387 84.4252 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 96.0882 mo
395.05 96.0882 li
395.05 84.4252 li
383.387 84.4252 li
cp
clp
383.387 96.0882 mo
395.054 96.0882 li
395.054 84.4252 li
383.387 84.4252 li
cp
395.054 86.2552 mo
394.337 84.4252 li
391.121 96.0882 mo
386.561 84.4252 li
0 0 0 0 cmyk
@
grestore
383.387 96.0882 mo
395.054 96.0882 li
395.054 84.4252 li
383.387 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 96.0882 mo
406.717 96.0882 li
406.717 84.4252 li
395.054 84.4252 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
395.054 96.0882 mo
406.717 96.0882 li
406.717 84.4252 li
395.054 84.4252 li
cp
clp
395.054 96.0882 mo
406.717 96.0882 li
406.717 84.4252 li
395.054 84.4252 li
cp
399.503 96.0882 mo
404.062 84.4252 li
395.054 87.5802 mo
396.288 84.4252 li
0 0 0 0 cmyk
@
grestore
395.054 96.0882 mo
406.717 96.0882 li
406.717 84.4252 li
395.054 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 96.0882 mo
418.38 96.0882 li
418.38 84.4252 li
406.717 84.4252 li
cp
0 .514366 .347723 0 cmyk
f
gsave
406.717 96.0882 mo
418.38 96.0882 li
418.38 84.4252 li
406.717 84.4252 li
cp
clp
406.717 96.0882 mo
418.386 96.0882 li
418.386 84.4252 li
406.717 84.4252 li
cp
418.386 85.2222 mo
418.07 84.4252 li
414.854 96.0882 mo
410.295 84.4252 li
407.08 96.0882 mo
406.717 95.1612 li
0 0 0 0 cmyk
@
grestore
406.717 96.0882 mo
418.386 96.0882 li
418.386 84.4252 li
406.717 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 96.0882 mo
430.049 96.0882 li
430.049 84.4252 li
418.386 84.4252 li
cp
.335637 .220035 0 0 cmyk
f
gsave
418.386 96.0882 mo
430.049 96.0882 li
430.049 84.4252 li
418.386 84.4252 li
cp
clp
418.386 96.0882 mo
430.049 96.0882 li
430.049 84.4252 li
418.386 84.4252 li
cp
427.133 96.0882 mo
430.049 88.6282 li
419.359 96.0882 mo
423.918 84.4252 li
0 0 0 0 cmyk
@
grestore
418.386 96.0882 mo
430.049 96.0882 li
430.049 84.4252 li
418.386 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 96.0882 mo
441.712 96.0882 li
441.712 84.4252 li
430.049 84.4252 li
cp
0 1 .959045 0 cmyk
f
gsave
430.049 96.0882 mo
441.712 96.0882 li
441.712 84.4252 li
430.049 84.4252 li
cp
clp
430.049 96.0882 mo
441.712 96.0882 li
441.712 84.4252 li
430.049 84.4252 li
cp
439.682 96.0882 mo
435.127 84.4252 li
431.907 96.0882 mo
430.049 91.3292 li
0 0 0 0 cmyk
@
grestore
430.049 96.0882 mo
441.712 96.0882 li
441.712 84.4252 li
430.049 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 96.0882 mo
453.375 96.0882 li
453.375 84.4252 li
441.713 84.4252 li
cp
0 .887968 .730526 0 cmyk
f
gsave
441.713 96.0882 mo
453.375 96.0882 li
453.375 84.4252 li
441.713 84.4252 li
cp
clp
441.712 96.0882 mo
453.379 96.0882 li
453.379 84.4252 li
441.712 84.4252 li
cp
453.379 94.2392 mo
449.542 84.4252 li
446.327 96.0882 mo
441.772 84.4252 li
0 0 0 0 cmyk
@
grestore
441.712 96.0882 mo
453.379 96.0882 li
453.379 84.4252 li
441.712 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 96.0882 mo
465.042 96.0882 li
465.042 84.4252 li
453.379 84.4252 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 96.0882 mo
465.042 96.0882 li
465.042 84.4252 li
453.379 84.4252 li
cp
clp
453.379 96.0882 mo
465.042 96.0882 li
465.042 84.4252 li
453.379 84.4252 li
cp
461.887 96.0882 mo
457.328 84.4252 li
454.111 96.0882 mo
453.379 94.2122 li
0 0 0 0 cmyk
@
grestore
453.379 96.0882 mo
465.042 96.0882 li
465.042 84.4252 li
453.379 84.4252 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 107.755 mo
278.4 107.755 li
278.4 96.0922 li
266.739 96.0922 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
266.739 107.755 mo
278.4 107.755 li
278.4 96.0922 li
266.739 96.0922 li
cp
clp
266.739 107.756 mo
278.401 107.756 li
278.401 96.0892 li
266.739 96.0892 li
cp
278.401 97.5762 mo
277.822 96.0882 li
274.607 107.756 mo
270.047 96.0882 li
266.83 107.756 mo
266.739 107.515 li
0 0 0 0 cmyk
@
grestore
266.739 107.756 mo
278.401 107.756 li
278.401 96.0892 li
266.739 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 107.755 mo
290.063 107.755 li
290.063 96.0922 li
278.4 96.0922 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
278.4 107.755 mo
290.063 107.755 li
290.063 96.0922 li
278.4 96.0922 li
cp
clp
278.401 107.756 mo
290.07 107.756 li
290.07 96.0892 li
278.401 96.0892 li
cp
282.53 107.756 mo
287.085 96.0882 li
278.401 98.4192 mo
279.31 96.0882 li
0 0 0 0 cmyk
@
grestore
278.401 107.756 mo
290.07 107.756 li
290.07 96.0892 li
278.401 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 107.755 mo
301.733 107.755 li
301.733 96.0922 li
290.07 96.0922 li
cp
0 .0894789 .039765 0 cmyk
f
290.07 107.756 mo
301.733 107.756 li
301.733 96.0892 li
290.07 96.0892 li
cp
301.733 102.117 mo
299.378 96.0882 li
296.162 107.756 mo
291.603 96.0882 li
0 0 0 0 cmyk
@
290.07 107.756 mo
301.733 107.756 li
301.733 96.0892 li
290.07 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 107.755 mo
313.396 107.755 li
313.396 96.0922 li
301.733 96.0922 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
301.733 107.755 mo
313.396 107.755 li
313.396 96.0922 li
301.733 96.0922 li
cp
clp
301.733 107.756 mo
313.396 107.756 li
313.396 96.0892 li
301.733 96.0892 li
cp
312.839 107.756 mo
313.396 106.328 li
305.069 107.756 mo
309.622 96.0882 li
301.733 96.3942 mo
301.848 96.0882 li
0 0 0 0 cmyk
@
grestore
301.733 107.756 mo
313.396 107.756 li
313.396 96.0892 li
301.733 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 107.755 mo
325.059 107.755 li
325.059 96.0922 li
313.396 96.0922 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
313.396 107.755 mo
325.059 107.755 li
325.059 96.0922 li
313.396 96.0922 li
cp
clp
313.396 107.756 mo
325.063 107.756 li
325.063 96.0892 li
313.396 96.0892 li
cp
325.063 107.529 mo
320.591 96.0882 li
317.374 107.756 mo
313.396 97.5712 li
0 0 0 0 cmyk
@
grestore
313.396 107.756 mo
325.063 107.756 li
325.063 96.0892 li
313.396 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 107.755 mo
336.726 107.755 li
336.726 96.0922 li
325.063 96.0922 li
cp
.10486 .0541695 0 0 cmyk
f
325.063 107.756 mo
336.726 107.756 li
336.726 96.0892 li
325.063 96.0892 li
cp
335.933 107.756 mo
336.726 105.722 li
328.158 107.756 mo
332.718 96.0882 li
0 0 0 0 cmyk
@
325.063 107.756 mo
336.726 107.756 li
336.726 96.0892 li
325.063 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 107.755 mo
348.389 107.755 li
348.389 96.0922 li
336.726 96.0922 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 107.755 mo
348.389 107.755 li
348.389 96.0922 li
336.726 96.0922 li
cp
clp
336.726 107.756 mo
348.393 107.756 li
348.393 96.0892 li
336.726 96.0892 li
cp
347.081 107.756 mo
348.393 104.396 li
339.307 107.756 mo
343.866 96.0882 li
0 0 0 0 cmyk
@
grestore
336.726 107.756 mo
348.393 107.756 li
348.393 96.0892 li
336.726 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 107.755 mo
360.057 107.755 li
360.057 96.0922 li
348.393 96.0922 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
348.393 107.755 mo
360.057 107.755 li
360.057 96.0922 li
348.393 96.0922 li
cp
clp
348.393 107.756 mo
360.056 107.756 li
360.056 96.0892 li
348.393 96.0892 li
cp
359.634 107.756 mo
355.08 96.0882 li
351.86 107.756 mo
348.393 98.8782 li
0 0 0 0 cmyk
@
grestore
348.393 107.756 mo
360.056 107.756 li
360.056 96.0892 li
348.393 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf362.603 104.452 mo(r9)[3.32993 0 ]xsh371.725 107.755 mo
383.387 107.755 li
383.387 96.0922 li
371.725 96.0922 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
371.725 107.755 mo
383.387 107.755 li
383.387 96.0922 li
371.725 96.0922 li
cp
clp
371.725 107.756 mo
383.387 107.756 li
383.387 96.0892 li
371.725 96.0892 li
cp
382.177 107.756 mo
383.387 104.651 li
374.403 107.756 mo
378.962 96.0882 li
0 0 0 0 cmyk
@
grestore
371.725 107.756 mo
383.387 107.756 li
383.387 96.0892 li
371.725 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 107.755 mo
395.05 107.755 li
395.05 96.0922 li
383.387 96.0922 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
383.387 107.755 mo
395.05 107.755 li
395.05 96.0922 li
383.387 96.0922 li
cp
clp
383.387 107.756 mo
395.054 107.756 li
395.054 96.0892 li
383.387 96.0892 li
cp
393.595 107.756 mo
395.054 104.026 li
385.821 107.756 mo
390.379 96.0882 li
0 0 0 0 cmyk
@
grestore
383.387 107.756 mo
395.054 107.756 li
395.054 96.0892 li
383.387 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 107.755 mo
406.717 107.755 li
406.717 96.0922 li
395.054 96.0922 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 107.756 mo
406.717 107.756 li
406.717 96.0892 li
395.054 96.0892 li
cp
404.804 107.756 mo
400.244 96.0882 li
397.03 107.756 mo
395.054 102.701 li
0 0 0 0 cmyk
@
395.054 107.756 mo
406.717 107.756 li
406.717 96.0892 li
395.054 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 107.755 mo
418.38 107.755 li
418.38 96.0922 li
406.717 96.0922 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
406.717 107.755 mo
418.38 107.755 li
418.38 96.0922 li
406.717 96.0922 li
cp
clp
406.717 107.756 mo
418.386 107.756 li
418.386 96.0892 li
406.717 96.0892 li
cp
416.925 107.756 mo
412.367 96.0882 li
409.151 107.756 mo
406.717 101.528 li
0 0 0 0 cmyk
@
grestore
406.717 107.756 mo
418.386 107.756 li
418.386 96.0892 li
406.717 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 107.756 mo
430.049 107.756 li
430.049 96.0932 li
418.386 96.0932 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
418.386 107.755 mo
430.049 107.755 li
430.049 96.0922 li
418.386 96.0922 li
cp
clp
418.386 107.756 mo
430.049 107.756 li
430.049 96.0892 li
418.386 96.0892 li
cp
425.063 107.756 mo
429.622 96.0882 li
418.386 104.952 mo
421.847 96.0882 li
0 0 0 0 cmyk
@
grestore
418.386 107.756 mo
430.049 107.756 li
430.049 96.0892 li
418.386 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 107.755 mo
441.712 107.755 li
441.712 96.0922 li
430.049 96.0922 li
cp
.10486 .0541695 0 0 cmyk
f
430.049 107.756 mo
441.712 107.756 li
441.712 96.0892 li
430.049 96.0892 li
cp
434.381 107.756 mo
438.94 96.0882 li
430.049 98.9521 mo
431.165 96.0882 li
0 0 0 0 cmyk
@
430.049 107.756 mo
441.712 107.756 li
441.712 96.0892 li
430.049 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 107.755 mo
453.375 107.755 li
453.375 96.0922 li
441.713 96.0922 li
cp
0 .300114 .177707 0 cmyk
f
gsave
441.713 107.755 mo
453.375 107.755 li
453.375 96.0922 li
441.713 96.0922 li
cp
clp
441.712 107.756 mo
453.379 107.756 li
453.379 96.0892 li
441.712 96.0892 li
cp
453.379 100.606 mo
451.614 96.0882 li
448.398 107.756 mo
443.839 96.0882 li
0 0 0 0 cmyk
@
grestore
441.712 107.756 mo
453.379 107.756 li
453.379 96.0892 li
441.712 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 107.755 mo
465.042 107.755 li
465.042 96.0922 li
453.379 96.0922 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 107.755 mo
465.042 107.755 li
465.042 96.0922 li
453.379 96.0922 li
cp
clp
453.379 107.756 mo
465.042 107.756 li
465.042 96.0892 li
453.379 96.0892 li
cp
463.958 107.756 mo
459.399 96.0882 li
456.182 107.756 mo
453.379 100.578 li
0 0 0 0 cmyk
@
grestore
453.379 107.756 mo
465.042 107.756 li
465.042 96.0892 li
453.379 96.0892 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 119.419 mo
278.4 119.419 li
278.4 107.756 li
266.739 107.756 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
266.739 119.419 mo
278.4 119.419 li
278.4 107.756 li
266.739 107.756 li
cp
clp
266.739 119.419 mo
278.401 119.419 li
278.401 107.756 li
266.739 107.756 li
cp
274.509 119.419 mo
278.401 109.456 li
266.739 119.414 mo
271.294 107.756 li
0 0 0 0 cmyk
@
grestore
266.739 119.419 mo
278.401 119.419 li
278.401 107.756 li
266.739 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 119.419 mo
290.063 119.419 li
290.063 107.756 li
278.4 107.756 li
cp
0 .300114 .177707 0 cmyk
f
gsave
278.4 119.419 mo
290.063 119.419 li
290.063 107.756 li
278.4 107.756 li
cp
clp
278.401 119.419 mo
290.07 119.419 li
290.07 107.756 li
278.401 107.756 li
cp
290.07 118.571 mo
285.843 107.756 li
282.622 119.419 mo
278.401 108.613 li
0 0 0 0 cmyk
@
grestore
278.401 119.419 mo
290.07 119.419 li
290.07 107.756 li
278.401 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 119.419 mo
301.733 119.419 li
301.733 107.756 li
290.07 107.756 li
cp
.10486 .0541695 0 0 cmyk
f
290.07 119.419 mo
301.733 119.419 li
301.733 107.756 li
290.07 107.756 li
cp
296.065 119.419 mo
300.62 107.756 li
290.07 114.873 mo
292.849 107.756 li
0 0 0 0 cmyk
@
290.07 119.419 mo
301.733 119.419 li
301.733 107.756 li
290.07 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 119.419 mo
313.396 119.419 li
313.396 107.756 li
301.733 107.756 li
cp
0 .300114 .177707 0 cmyk
f
gsave
301.733 119.419 mo
313.396 119.419 li
313.396 107.756 li
301.733 107.756 li
cp
clp
301.733 119.419 mo
313.396 119.419 li
313.396 107.756 li
301.733 107.756 li
cp
312.936 119.419 mo
308.381 107.756 li
305.161 119.419 mo
301.733 110.638 li
0 0 0 0 cmyk
@
grestore
301.733 119.419 mo
313.396 119.419 li
313.396 107.756 li
301.733 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 119.419 mo
325.059 119.419 li
325.059 107.756 li
313.396 107.756 li
cp
.594018 .448493 0 0 cmyk
f
gsave
313.396 119.419 mo
325.059 119.419 li
325.059 107.756 li
313.396 107.756 li
cp
clp
313.396 119.419 mo
325.063 119.419 li
325.063 107.756 li
313.396 107.756 li
cp
325.053 119.419 mo
325.063 119.396 li
317.278 119.419 mo
321.838 107.756 li
313.396 109.456 mo
314.062 107.756 li
0 0 0 0 cmyk
@
grestore
313.396 119.419 mo
325.063 119.419 li
325.063 107.756 li
313.396 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 119.419 mo
336.726 119.419 li
336.726 107.756 li
325.063 107.756 li
cp
.10486 .0541695 0 0 cmyk
f
325.063 119.419 mo
336.726 119.419 li
336.726 107.756 li
325.063 107.756 li
cp
335.433 119.419 mo
336.726 116.106 li
327.659 119.419 mo
332.217 107.756 li
0 0 0 0 cmyk
@
325.063 119.419 mo
336.726 119.419 li
336.726 107.756 li
325.063 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 119.419 mo
348.389 119.419 li
348.389 107.756 li
336.726 107.756 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
336.726 119.419 mo
348.389 119.419 li
348.389 107.756 li
336.726 107.756 li
cp
clp
336.726 119.419 mo
348.393 119.419 li
348.393 107.756 li
336.726 107.756 li
cp
346.582 119.419 mo
348.393 114.781 li
338.806 119.419 mo
343.366 107.756 li
0 0 0 0 cmyk
@
grestore
336.726 119.419 mo
348.393 119.419 li
348.393 107.756 li
336.726 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 119.419 mo
360.057 119.419 li
360.057 107.756 li
348.393 107.756 li
cp
.594018 .448493 0 0 cmyk
f
gsave
348.393 119.419 mo
360.057 119.419 li
360.057 107.756 li
348.393 107.756 li
cp
clp
348.393 119.419 mo
360.056 119.419 li
360.056 107.756 li
348.393 107.756 li
cp
359.538 119.419 mo
360.056 118.094 li
351.767 119.419 mo
356.322 107.756 li
348.393 108.154 mo
348.546 107.756 li
0 0 0 0 cmyk
@
grestore
348.393 119.419 mo
360.056 119.419 li
360.056 107.756 li
348.393 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 119.419 mo
371.72 119.419 li
371.72 107.756 li
360.057 107.756 li
cp
.10486 .0541695 0 0 cmyk
f
360.056 119.419 mo
371.725 119.419 li
371.725 107.756 li
360.056 107.756 li
cp
368.731 119.419 mo
371.725 111.759 li
360.955 119.419 mo
365.514 107.756 li
0 0 0 0 cmyk
@
360.056 119.419 mo
371.725 119.419 li
371.725 107.756 li
360.056 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf369.203 116.129 mo(r10)[3.32993 5.56 0 ]xsh383.387 119.419 mo
395.05 119.419 li
395.05 107.756 li
383.387 107.756 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 119.419 mo
395.05 119.419 li
395.05 107.756 li
383.387 107.756 li
cp
clp
383.387 119.419 mo
395.054 119.419 li
395.054 107.756 li
383.387 107.756 li
cp
393.692 119.419 mo
389.133 107.756 li
385.917 119.419 mo
383.387 112.946 li
0 0 0 0 cmyk
@
grestore
383.387 119.419 mo
395.054 119.419 li
395.054 107.756 li
383.387 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 119.419 mo
406.717 119.419 li
406.717 107.756 li
395.054 107.756 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 119.419 mo
406.717 119.419 li
406.717 107.756 li
395.054 107.756 li
cp
405.305 119.419 mo
400.746 107.756 li
397.529 119.419 mo
395.054 113.085 li
0 0 0 0 cmyk
@
395.054 119.419 mo
406.717 119.419 li
406.717 107.756 li
395.054 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 119.419 mo
418.38 119.419 li
418.38 107.756 li
406.717 107.756 li
cp
0 .300114 .177707 0 cmyk
f
gsave
406.717 119.419 mo
418.38 119.419 li
418.38 107.756 li
406.717 107.756 li
cp
clp
406.717 119.419 mo
418.386 119.419 li
418.386 107.756 li
406.717 107.756 li
cp
417.426 119.419 mo
412.867 107.756 li
409.651 119.419 mo
406.717 111.912 li
0 0 0 0 cmyk
@
grestore
406.717 119.419 mo
418.386 119.419 li
418.386 107.756 li
406.717 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 119.419 mo
430.049 119.419 li
430.049 107.756 li
418.386 107.756 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
418.386 119.419 mo
430.049 119.419 li
430.049 107.756 li
418.386 107.756 li
cp
clp
418.386 119.419 mo
430.049 119.419 li
430.049 107.756 li
418.386 107.756 li
cp
430.049 112.033 mo
428.376 107.756 li
425.161 119.419 mo
420.6 107.756 li
0 0 0 0 cmyk
@
grestore
418.386 119.419 mo
430.049 119.419 li
430.049 107.756 li
418.386 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 119.419 mo
441.712 119.419 li
441.712 107.756 li
430.049 107.756 li
cp
0 .514366 .347723 0 cmyk
f
430.049 119.419 mo
441.712 119.419 li
441.712 107.756 li
430.049 107.756 li
cp
441.712 118.038 mo
437.694 107.756 li
434.478 119.419 mo
430.049 108.08 li
0 0 0 0 cmyk
@
430.049 119.419 mo
441.712 119.419 li
441.712 107.756 li
430.049 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 119.419 mo
453.375 119.419 li
453.375 107.756 li
441.713 107.756 li
cp
0 .720119 .54638 0 cmyk
f
gsave
441.713 119.419 mo
453.375 119.419 li
453.375 107.756 li
441.713 107.756 li
cp
clp
441.712 119.419 mo
453.379 119.419 li
453.379 107.756 li
441.712 107.756 li
cp
453.379 110.99 mo
452.115 107.756 li
448.899 119.419 mo
444.338 107.756 li
0 0 0 0 cmyk
@
grestore
441.712 119.419 mo
453.379 119.419 li
453.379 107.756 li
441.712 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 119.419 mo
465.042 119.419 li
465.042 107.756 li
453.379 107.756 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 119.419 mo
465.042 119.419 li
465.042 107.756 li
453.379 107.756 li
cp
clp
453.379 119.419 mo
465.042 119.419 li
465.042 107.756 li
453.379 107.756 li
cp
464.458 119.419 mo
459.898 107.756 li
456.684 119.419 mo
453.379 110.962 li
0 0 0 0 cmyk
@
grestore
453.379 119.419 mo
465.042 119.419 li
465.042 107.756 li
453.379 107.756 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 131.087 mo
278.4 131.087 li
278.4 119.423 li
266.739 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
266.739 131.087 mo
278.4 131.087 li
278.4 119.423 li
266.739 119.423 li
cp
clp
266.739 131.087 mo
278.401 131.087 li
278.401 119.419 li
266.739 119.419 li
cp
278.401 119.868 mo
278.226 119.419 li
275.01 131.087 mo
270.45 119.419 li
267.234 131.087 mo
266.739 129.807 li
0 0 0 0 cmyk
@
grestore
266.739 131.087 mo
278.401 131.087 li
278.401 119.419 li
266.739 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 131.087 mo
290.063 131.087 li
290.063 119.423 li
278.4 119.423 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
278.4 131.087 mo
290.063 131.087 li
290.063 119.423 li
278.4 119.423 li
cp
clp
278.401 131.087 mo
290.07 131.087 li
290.07 119.419 li
278.401 119.419 li
cp
289.898 131.087 mo
290.07 130.651 li
282.122 131.087 mo
286.681 119.419 li
278.401 120.716 mo
278.907 119.419 li
0 0 0 0 cmyk
@
grestore
278.401 131.087 mo
290.07 131.087 li
290.07 119.419 li
278.401 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 131.087 mo
301.733 131.087 li
301.733 119.423 li
290.07 119.423 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
290.07 131.087 mo
301.733 131.087 li
301.733 119.423 li
290.07 119.423 li
cp
clp
290.07 131.087 mo
301.733 131.087 li
301.733 119.419 li
290.07 119.419 li
cp
296.162 131.087 mo
300.717 119.419 li
290.07 126.782 mo
292.942 119.419 li
0 0 0 0 cmyk
@
grestore
290.07 131.087 mo
301.733 131.087 li
301.733 119.419 li
290.07 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 131.087 mo
313.396 131.087 li
313.396 119.423 li
301.733 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
301.733 131.087 mo
313.396 131.087 li
313.396 119.423 li
301.733 119.423 li
cp
clp
301.733 131.087 mo
313.396 131.087 li
313.396 119.419 li
301.733 119.419 li
cp
312.839 131.087 mo
308.285 119.419 li
305.069 131.087 mo
301.733 122.551 li
0 0 0 0 cmyk
@
grestore
301.733 131.087 mo
313.396 131.087 li
313.396 119.419 li
301.733 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 131.087 mo
325.059 131.087 li
325.059 119.423 li
313.396 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
313.396 131.087 mo
325.059 131.087 li
325.059 119.423 li
313.396 119.423 li
cp
clp
313.396 131.087 mo
325.063 131.087 li
325.063 119.419 li
313.396 119.419 li
cp
325.063 129.826 mo
320.994 119.419 li
317.78 131.087 mo
313.396 119.868 li
0 0 0 0 cmyk
@
grestore
313.396 131.087 mo
325.063 131.087 li
325.063 119.419 li
313.396 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 131.087 mo
336.726 131.087 li
336.726 119.423 li
325.063 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
325.063 131.087 mo
336.726 131.087 li
336.726 119.423 li
325.063 119.423 li
cp
clp
325.063 131.087 mo
336.726 131.087 li
336.726 119.419 li
325.063 119.419 li
cp
335.933 131.087 mo
331.374 119.419 li
328.158 131.087 mo
325.063 123.158 li
0 0 0 0 cmyk
@
grestore
325.063 131.087 mo
336.726 131.087 li
336.726 119.419 li
325.063 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 131.087 mo
348.389 131.087 li
348.389 119.423 li
336.726 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
336.726 131.087 mo
348.389 131.087 li
348.389 119.423 li
336.726 119.423 li
cp
clp
336.726 131.087 mo
348.393 131.087 li
348.393 119.419 li
336.726 119.419 li
cp
347.081 131.087 mo
342.523 119.419 li
339.307 131.087 mo
336.726 124.483 li
0 0 0 0 cmyk
@
grestore
336.726 131.087 mo
348.393 131.087 li
348.393 119.419 li
336.726 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 131.087 mo
360.057 131.087 li
360.057 119.423 li
348.393 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
348.393 131.087 mo
360.057 131.087 li
360.057 119.423 li
348.393 119.423 li
cp
clp
348.393 131.087 mo
360.056 131.087 li
360.056 119.419 li
348.393 119.419 li
cp
360.038 131.087 mo
355.483 119.419 li
352.267 131.087 mo
348.393 121.17 li
0 0 0 0 cmyk
@
grestore
348.393 131.087 mo
360.056 131.087 li
360.056 119.419 li
348.393 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 131.087 mo
371.72 131.087 li
371.72 119.423 li
360.057 119.423 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
360.057 131.087 mo
371.72 131.087 li
371.72 119.423 li
360.057 119.423 li
cp
clp
360.056 131.087 mo
371.725 131.087 li
371.725 119.419 li
360.056 119.419 li
cp
368.823 131.087 mo
371.725 123.668 li
361.052 131.087 mo
365.608 119.419 li
0 0 0 0 cmyk
@
grestore
360.056 131.087 mo
371.725 131.087 li
371.725 119.419 li
360.056 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 131.087 mo
383.387 131.087 li
383.387 119.423 li
371.725 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
371.725 131.087 mo
383.387 131.087 li
383.387 119.423 li
371.725 119.423 li
cp
clp
371.725 131.087 mo
383.387 131.087 li
383.387 119.419 li
371.725 119.419 li
cp
382.177 131.087 mo
377.619 119.419 li
374.403 131.087 mo
371.725 124.228 li
0 0 0 0 cmyk
@
grestore
371.725 131.087 mo
383.387 131.087 li
383.387 119.419 li
371.725 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf381.87 127.853 mo(r11)[3.32993 5.56 0 ]xsh395.054 131.087 mo
406.717 131.087 li
406.717 119.423 li
395.054 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
395.054 131.087 mo
406.717 131.087 li
406.717 119.423 li
395.054 119.423 li
cp
clp
395.054 131.087 mo
406.717 131.087 li
406.717 119.419 li
395.054 119.419 li
cp
405.207 131.087 mo
400.648 119.419 li
397.432 131.087 mo
395.054 124.993 li
0 0 0 0 cmyk
@
grestore
395.054 131.087 mo
406.717 131.087 li
406.717 119.419 li
395.054 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 131.087 mo
418.38 131.087 li
418.38 119.423 li
406.717 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
406.717 131.087 mo
418.38 131.087 li
418.38 119.423 li
406.717 119.423 li
cp
clp
406.717 131.087 mo
418.386 131.087 li
418.386 119.419 li
406.717 119.419 li
cp
417.329 131.087 mo
412.774 119.419 li
409.553 131.087 mo
406.717 123.821 li
0 0 0 0 cmyk
@
grestore
406.717 131.087 mo
418.386 131.087 li
418.386 119.419 li
406.717 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 131.087 mo
430.049 131.087 li
430.049 119.423 li
418.386 119.423 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
418.386 131.087 mo
430.049 131.087 li
430.049 119.423 li
418.386 119.423 li
cp
clp
418.386 131.087 mo
430.049 131.087 li
430.049 119.419 li
418.386 119.419 li
cp
424.659 131.087 mo
429.219 119.419 li
418.386 127.25 mo
421.444 119.419 li
0 0 0 0 cmyk
@
grestore
418.386 131.087 mo
430.049 131.087 li
430.049 119.419 li
418.386 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 131.087 mo
441.712 131.087 li
441.712 119.423 li
430.049 119.423 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
430.049 131.087 mo
441.712 131.087 li
441.712 119.423 li
430.049 119.423 li
cp
clp
430.049 131.087 mo
441.712 131.087 li
441.712 119.419 li
430.049 119.419 li
cp
433.979 131.087 mo
438.538 119.419 li
430.049 121.244 mo
430.762 119.419 li
0 0 0 0 cmyk
@
grestore
430.049 131.087 mo
441.712 131.087 li
441.712 119.419 li
430.049 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 131.087 mo
453.375 131.087 li
453.375 119.423 li
441.713 119.423 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
441.713 131.087 mo
453.375 131.087 li
453.375 119.423 li
441.713 119.423 li
cp
clp
441.712 131.087 mo
453.379 131.087 li
453.379 119.419 li
441.712 119.419 li
cp
448.398 131.087 mo
452.957 119.419 li
441.712 128.292 mo
445.183 119.419 li
0 0 0 0 cmyk
@
grestore
441.712 131.087 mo
453.379 131.087 li
453.379 119.419 li
441.712 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 131.087 mo
465.042 131.087 li
465.042 119.423 li
453.379 119.423 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
453.379 131.087 mo
465.042 131.087 li
465.042 119.423 li
453.379 119.423 li
cp
clp
453.379 131.087 mo
465.042 131.087 li
465.042 119.419 li
453.379 119.419 li
cp
464.362 131.087 mo
459.806 119.419 li
456.585 131.087 mo
453.379 122.871 li
0 0 0 0 cmyk
@
grestore
453.379 131.087 mo
465.042 131.087 li
465.042 119.419 li
453.379 119.419 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 142.749 mo
278.4 142.749 li
278.4 131.087 li
266.739 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
266.739 142.749 mo
278.4 142.749 li
278.4 131.087 li
266.739 131.087 li
cp
clp
266.739 142.749 mo
278.401 142.749 li
278.401 131.087 li
266.739 131.087 li
cp
278.401 131.587 mo
278.206 131.087 li
274.986 142.749 mo
270.431 131.087 li
267.215 142.749 mo
266.739 141.526 li
0 0 0 0 cmyk
@
grestore
266.739 142.749 mo
278.401 142.749 li
278.401 131.087 li
266.739 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 142.749 mo
290.063 142.749 li
290.063 131.087 li
278.4 131.087 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
278.4 142.749 mo
290.063 142.749 li
290.063 131.087 li
278.4 131.087 li
cp
clp
278.401 142.749 mo
290.07 142.749 li
290.07 131.087 li
278.401 131.087 li
cp
289.92 142.749 mo
290.07 142.37 li
282.146 142.749 mo
286.7 131.087 li
278.401 132.435 mo
278.929 131.087 li
0 0 0 0 cmyk
@
grestore
278.401 142.749 mo
290.07 142.749 li
290.07 131.087 li
278.401 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 142.749 mo
301.733 142.749 li
301.733 131.087 li
290.07 131.087 li
cp
.10486 .0541695 0 0 cmyk
f
290.07 142.749 mo
301.733 142.749 li
301.733 131.087 li
290.07 131.087 li
cp
296.182 142.749 mo
300.741 131.087 li
290.07 138.5 mo
292.965 131.087 li
0 0 0 0 cmyk
@
290.07 142.749 mo
301.733 142.749 li
301.733 131.087 li
290.07 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 142.749 mo
313.396 142.749 li
313.396 131.087 li
301.733 131.087 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
301.733 142.749 mo
313.396 142.749 li
313.396 131.087 li
301.733 131.087 li
cp
clp
301.733 142.749 mo
313.396 142.749 li
313.396 131.087 li
301.733 131.087 li
cp
312.459 142.749 mo
313.396 140.345 li
304.684 142.749 mo
309.239 131.087 li
0 0 0 0 cmyk
@
grestore
301.733 142.749 mo
313.396 142.749 li
313.396 131.087 li
301.733 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 142.749 mo
325.059 142.749 li
325.059 131.087 li
313.396 131.087 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
313.396 142.749 mo
325.059 142.749 li
325.059 131.087 li
313.396 131.087 li
cp
clp
313.396 142.749 mo
325.063 142.749 li
325.063 131.087 li
313.396 131.087 li
cp
317.393 142.749 mo
321.954 131.087 li
313.396 133.088 mo
314.179 131.087 li
0 0 0 0 cmyk
@
grestore
313.396 142.749 mo
325.063 142.749 li
325.063 131.087 li
313.396 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 142.749 mo
336.726 142.749 li
336.726 131.087 li
325.063 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
325.063 142.749 mo
336.726 142.749 li
336.726 131.087 li
325.063 131.087 li
cp
335.91 142.749 mo
331.356 131.087 li
328.139 142.749 mo
325.063 134.877 li
0 0 0 0 cmyk
@
325.063 142.749 mo
336.726 142.749 li
336.726 131.087 li
325.063 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 142.749 mo
348.389 142.749 li
348.389 131.087 li
336.726 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
336.726 142.749 mo
348.389 142.749 li
348.389 131.087 li
336.726 131.087 li
cp
clp
336.726 142.749 mo
348.393 142.749 li
348.393 131.087 li
336.726 131.087 li
cp
347.059 142.749 mo
342.504 131.087 li
339.288 142.749 mo
336.726 136.202 li
0 0 0 0 cmyk
@
grestore
336.726 142.749 mo
348.393 142.749 li
348.393 131.087 li
336.726 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 142.749 mo
360.057 142.749 li
360.057 131.087 li
348.393 131.087 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
348.393 142.749 mo
360.057 142.749 li
360.057 131.087 li
348.393 131.087 li
cp
clp
348.393 142.749 mo
360.056 142.749 li
360.056 131.087 li
348.393 131.087 li
cp
359.659 142.749 mo
360.056 141.721 li
351.882 142.749 mo
356.437 131.087 li
348.393 131.782 mo
348.666 131.087 li
0 0 0 0 cmyk
@
grestore
348.393 142.749 mo
360.056 142.749 li
360.056 131.087 li
348.393 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 142.749 mo
371.72 142.749 li
371.72 131.087 li
360.057 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
360.056 142.749 mo
371.725 142.749 li
371.725 131.087 li
360.056 131.087 li
cp
369.207 142.749 mo
364.653 131.087 li
361.437 142.749 mo
360.056 139.223 li
0 0 0 0 cmyk
@
360.056 142.749 mo
371.725 142.749 li
371.725 131.087 li
360.056 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 142.749 mo
383.387 142.749 li
383.387 131.087 li
371.725 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
371.725 142.749 mo
383.387 142.749 li
383.387 131.087 li
371.725 131.087 li
cp
clp
371.725 142.749 mo
383.387 142.749 li
383.387 131.087 li
371.725 131.087 li
cp
382.155 142.749 mo
377.6 131.087 li
374.384 142.749 mo
371.725 135.947 li
0 0 0 0 cmyk
@
grestore
371.725 142.749 mo
383.387 142.749 li
383.387 131.087 li
371.725 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 142.749 mo
395.05 142.749 li
395.05 131.087 li
383.387 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 142.749 mo
395.05 142.749 li
395.05 131.087 li
383.387 131.087 li
cp
clp
383.387 142.749 mo
395.054 142.749 li
395.054 131.087 li
383.387 131.087 li
cp
393.577 142.749 mo
389.017 131.087 li
385.802 142.749 mo
383.387 136.577 li
0 0 0 0 cmyk
@
grestore
383.387 142.749 mo
395.054 142.749 li
395.054 131.087 li
383.387 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: HAAAAA+Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /HAAAAA+Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdup 50 /two putdup 114 /r putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/VWSLXE+Helvetica /HAAAAA+Helvetica findfont ct_VMDictPut/VWSLXE+Helvetica*1 [49{/.notdef}rp /one /two 63{/.notdef}rp /r 141{/.notdef}rp]VWSLXE+Helvetica nfVWSLXE+Helvetica*1 [11 0 0 -11 0 0 ]msf391.537 141.531 mo(r12)[3.6629 6.11603 0 ]xsh406.717 142.749 mo
418.38 142.749 li
418.38 131.087 li
406.717 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
406.717 142.749 mo
418.38 142.749 li
418.38 131.087 li
406.717 131.087 li
cp
clp
406.717 142.749 mo
418.386 142.749 li
418.386 131.087 li
406.717 131.087 li
cp
417.31 142.749 mo
412.751 131.087 li
409.535 142.749 mo
406.717 135.539 li
0 0 0 0 cmyk
@
grestore
406.717 142.749 mo
418.386 142.749 li
418.386 131.087 li
406.717 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 142.749 mo
430.049 142.749 li
430.049 131.087 li
418.386 131.087 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
418.386 142.749 mo
430.049 142.749 li
430.049 131.087 li
418.386 131.087 li
cp
clp
418.386 142.749 mo
430.049 142.749 li
430.049 131.087 li
418.386 131.087 li
cp
424.677 142.749 mo
429.238 131.087 li
418.386 138.969 mo
421.462 131.087 li
0 0 0 0 cmyk
@
grestore
418.386 142.749 mo
430.049 142.749 li
430.049 131.087 li
418.386 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 142.749 mo
441.712 142.749 li
441.712 131.087 li
430.049 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
430.049 142.749 mo
441.712 142.749 li
441.712 131.087 li
430.049 131.087 li
cp
441.712 141.665 mo
437.579 131.087 li
434.363 142.749 mo
430.049 131.707 li
0 0 0 0 cmyk
@
430.049 142.749 mo
441.712 142.749 li
441.712 131.087 li
430.049 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 142.749 mo
453.375 142.749 li
453.375 131.087 li
441.713 131.087 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
441.713 142.749 mo
453.375 142.749 li
453.375 131.087 li
441.713 131.087 li
cp
clp
441.712 142.749 mo
453.379 142.749 li
453.379 131.087 li
441.712 131.087 li
cp
453.379 134.618 mo
451.998 131.087 li
448.782 142.749 mo
444.223 131.087 li
0 0 0 0 cmyk
@
grestore
441.712 142.749 mo
453.379 142.749 li
453.379 131.087 li
441.712 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 142.749 mo
465.042 142.749 li
465.042 131.087 li
453.379 131.087 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
453.379 142.749 mo
465.042 142.749 li
465.042 131.087 li
453.379 131.087 li
cp
clp
453.379 142.749 mo
465.042 142.749 li
465.042 131.087 li
453.379 131.087 li
cp
463.977 142.749 mo
465.042 140.02 li
456.205 142.749 mo
460.761 131.087 li
0 0 0 0 cmyk
@
grestore
453.379 142.749 mo
465.042 142.749 li
465.042 131.087 li
453.379 131.087 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 154.418 mo
278.4 154.418 li
278.4 142.755 li
266.739 142.755 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
266.739 154.418 mo
278.4 154.418 li
278.4 142.755 li
266.739 142.755 li
cp
clp
266.739 154.417 mo
278.401 154.417 li
278.401 142.749 li
266.739 142.749 li
cp
278.401 146.22 mo
277.044 142.749 li
273.829 154.417 mo
269.273 142.749 li
0 0 0 0 cmyk
@
grestore
266.739 154.417 mo
278.401 154.417 li
278.401 142.749 li
266.739 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 154.418 mo
290.063 154.418 li
290.063 142.755 li
278.4 142.755 li
cp
0 .300114 .177707 0 cmyk
f
gsave
278.4 154.418 mo
290.063 154.418 li
290.063 142.755 li
278.4 142.755 li
cp
clp
278.401 154.417 mo
290.07 154.417 li
290.07 142.749 li
278.401 142.749 li
cp
289.124 154.417 mo
284.565 142.749 li
281.348 154.417 mo
278.401 146.873 li
0 0 0 0 cmyk
@
grestore
278.401 154.417 mo
290.07 154.417 li
290.07 142.749 li
278.401 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 154.418 mo
301.733 154.418 li
301.733 142.755 li
290.07 142.755 li
cp
0 .0894789 .039765 0 cmyk
f
290.07 154.417 mo
301.733 154.417 li
301.733 142.749 li
290.07 142.749 li
cp
301.733 150.762 mo
298.599 142.749 li
295.384 154.417 mo
290.829 142.749 li
0 0 0 0 cmyk
@
290.07 154.417 mo
301.733 154.417 li
301.733 142.749 li
290.07 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 154.418 mo
313.396 154.418 li
313.396 142.755 li
301.733 142.755 li
cp
0 .300114 .177707 0 cmyk
f
gsave
301.733 154.418 mo
313.396 154.418 li
313.396 142.755 li
301.733 142.755 li
cp
clp
301.733 154.417 mo
313.396 154.417 li
313.396 142.749 li
301.733 142.749 li
cp
311.662 154.417 mo
307.103 142.749 li
303.887 154.417 mo
301.733 148.904 li
0 0 0 0 cmyk
@
grestore
301.733 154.417 mo
313.396 154.417 li
313.396 142.749 li
301.733 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 154.418 mo
325.059 154.418 li
325.059 142.755 li
313.396 142.755 li
cp
0 .514366 .347723 0 cmyk
f
gsave
313.396 154.418 mo
325.059 154.418 li
325.059 142.755 li
313.396 142.755 li
cp
clp
313.396 154.417 mo
325.063 154.417 li
325.063 142.749 li
313.396 142.749 li
cp
324.372 154.417 mo
319.818 142.749 li
316.598 154.417 mo
313.396 146.22 li
0 0 0 0 cmyk
@
grestore
313.396 154.417 mo
325.063 154.417 li
325.063 142.749 li
313.396 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 154.418 mo
336.726 154.418 li
336.726 142.755 li
325.063 142.755 li
cp
0 1 .959045 0 cmyk
f
325.063 154.417 mo
336.726 154.417 li
336.726 142.749 li
325.063 142.749 li
cp
334.751 154.417 mo
330.197 142.749 li
326.976 154.417 mo
325.063 149.51 li
0 0 0 0 cmyk
@
325.063 154.417 mo
336.726 154.417 li
336.726 142.749 li
325.063 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 154.418 mo
348.389 154.418 li
348.389 142.755 li
336.726 142.755 li
cp
0 1 .959045 0 cmyk
f
gsave
336.726 154.418 mo
348.389 154.418 li
348.389 142.755 li
336.726 142.755 li
cp
clp
336.726 154.417 mo
348.393 154.417 li
348.393 142.749 li
336.726 142.749 li
cp
345.9 154.417 mo
341.341 142.749 li
338.125 154.417 mo
336.726 150.835 li
0 0 0 0 cmyk
@
grestore
336.726 154.417 mo
348.393 154.417 li
348.393 142.749 li
336.726 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 154.418 mo
360.057 154.418 li
360.057 142.755 li
348.393 142.755 li
cp
0 .514366 .347723 0 cmyk
f
gsave
348.393 154.418 mo
360.057 154.418 li
360.057 142.755 li
348.393 142.755 li
cp
clp
348.393 154.417 mo
360.056 154.417 li
360.056 142.749 li
348.393 142.749 li
cp
358.862 154.417 mo
354.301 142.749 li
351.085 154.417 mo
348.393 147.522 li
0 0 0 0 cmyk
@
grestore
348.393 154.417 mo
360.056 154.417 li
360.056 142.749 li
348.393 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 154.418 mo
371.72 154.418 li
371.72 142.755 li
360.057 142.755 li
cp
0 .0894789 .039765 0 cmyk
f
360.056 154.417 mo
371.725 154.417 li
371.725 142.749 li
360.056 142.749 li
cp
371.725 143.918 mo
371.266 142.749 li
368.05 154.417 mo
363.49 142.749 li
360.274 154.417 mo
360.056 153.857 li
0 0 0 0 cmyk
@
360.056 154.417 mo
371.725 154.417 li
371.725 142.749 li
360.056 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 154.418 mo
383.387 154.418 li
383.387 142.755 li
371.725 142.755 li
cp
0 .300114 .177707 0 cmyk
f
gsave
371.725 154.418 mo
383.387 154.418 li
383.387 142.755 li
371.725 142.755 li
cp
clp
371.725 154.417 mo
383.387 154.417 li
383.387 142.749 li
371.725 142.749 li
cp
380.996 154.417 mo
376.437 142.749 li
373.221 154.417 mo
371.725 150.58 li
0 0 0 0 cmyk
@
grestore
371.725 154.417 mo
383.387 154.417 li
383.387 142.749 li
371.725 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 154.418 mo
395.05 154.418 li
395.05 142.755 li
383.387 142.755 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 154.418 mo
395.05 154.418 li
395.05 142.755 li
383.387 142.755 li
cp
clp
383.387 154.417 mo
395.054 154.417 li
395.054 142.749 li
383.387 142.749 li
cp
392.413 154.417 mo
387.859 142.749 li
384.643 154.417 mo
383.387 151.205 li
0 0 0 0 cmyk
@
grestore
383.387 154.417 mo
395.054 154.417 li
395.054 142.749 li
383.387 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 154.418 mo
406.717 154.418 li
406.717 142.755 li
395.054 142.755 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 154.417 mo
406.717 154.417 li
406.717 142.749 li
395.054 142.749 li
cp
404.025 154.417 mo
399.471 142.749 li
396.25 154.417 mo
395.054 151.345 li
0 0 0 0 cmyk
@
395.054 154.417 mo
406.717 154.417 li
406.717 142.749 li
395.054 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf410.285 151.255 mo(T)sh418.386 154.418 mo
430.049 154.418 li
430.049 142.755 li
418.386 142.755 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
418.386 154.418 mo
430.049 154.418 li
430.049 142.755 li
418.386 142.755 li
cp
clp
418.386 154.417 mo
430.049 154.417 li
430.049 142.749 li
418.386 142.749 li
cp
425.84 154.417 mo
430.049 143.644 li
418.386 153.602 mo
422.625 142.749 li
0 0 0 0 cmyk
@
grestore
418.386 154.417 mo
430.049 154.417 li
430.049 142.749 li
418.386 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 154.418 mo
441.712 154.418 li
441.712 142.755 li
430.049 142.755 li
cp
.810636 .664393 0 0 cmyk
f
430.049 154.417 mo
441.712 154.417 li
441.712 142.749 li
430.049 142.749 li
cp
435.161 154.417 mo
439.719 142.749 li
430.049 147.597 mo
431.944 142.749 li
0 0 0 0 cmyk
@
430.049 154.417 mo
441.712 154.417 li
441.712 142.749 li
430.049 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 154.418 mo
453.375 154.418 li
453.375 142.755 li
441.713 142.755 li
cp
.810636 .664393 0 0 cmyk
f
gsave
441.713 154.418 mo
453.375 154.418 li
453.375 142.755 li
441.713 142.755 li
cp
clp
441.712 154.417 mo
453.379 154.417 li
453.379 142.749 li
441.712 142.749 li
cp
449.58 154.417 mo
453.379 144.686 li
441.804 154.417 mo
446.364 142.749 li
0 0 0 0 cmyk
@
grestore
441.712 154.417 mo
453.379 154.417 li
453.379 142.749 li
441.712 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 154.418 mo
465.042 154.418 li
465.042 142.755 li
453.379 142.755 li
cp
.991394 .963012 .0224002 .00402838 cmyk
f
gsave
453.379 154.418 mo
465.042 154.418 li
465.042 142.755 li
453.379 142.755 li
cp
clp
453.379 154.417 mo
465.042 154.417 li
465.042 142.749 li
453.379 142.749 li
cp
457.364 154.417 mo
461.918 142.749 li
453.379 144.714 mo
454.148 142.749 li
0 0 0 0 cmyk
@
grestore
453.379 154.417 mo
465.042 154.417 li
465.042 142.749 li
453.379 142.749 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 166.081 mo
278.4 166.081 li
278.4 154.418 li
266.739 154.418 li
cp
0 .887968 .730526 0 cmyk
f
gsave
266.739 166.081 mo
278.4 166.081 li
278.4 154.418 li
266.739 154.418 li
cp
clp
266.739 166.08 mo
278.401 166.08 li
278.401 154.417 li
266.739 154.417 li
cp
278.401 158.392 mo
276.849 154.417 li
273.633 166.08 mo
269.075 154.417 li
0 0 0 0 cmyk
@
grestore
266.739 166.08 mo
278.401 166.08 li
278.401 154.417 li
266.739 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 166.081 mo
290.063 166.081 li
290.063 154.418 li
278.4 154.418 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
278.4 166.081 mo
290.063 166.081 li
290.063 154.418 li
278.4 154.418 li
cp
clp
278.401 166.08 mo
290.07 166.08 li
290.07 154.417 li
278.401 154.417 li
cp
288.925 166.08 mo
284.365 154.417 li
281.149 166.08 mo
278.401 159.046 li
0 0 0 0 cmyk
@
grestore
278.401 166.08 mo
290.07 166.08 li
290.07 154.417 li
278.401 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 166.081 mo
301.733 166.081 li
301.733 154.418 li
290.07 154.418 li
cp
0 1 .959045 0 cmyk
f
gsave
290.07 166.081 mo
301.733 166.081 li
301.733 154.418 li
290.07 154.418 li
cp
clp
290.07 166.08 mo
301.733 166.08 li
301.733 154.417 li
290.07 154.417 li
cp
301.733 162.934 mo
298.406 154.417 li
295.19 166.08 mo
290.629 154.417 li
0 0 0 0 cmyk
@
grestore
290.07 166.08 mo
301.733 166.08 li
301.733 154.417 li
290.07 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 166.081 mo
313.396 166.081 li
313.396 154.418 li
301.733 154.418 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
301.733 166.081 mo
313.396 166.081 li
313.396 154.418 li
301.733 154.418 li
cp
clp
301.733 166.08 mo
313.396 166.08 li
313.396 154.417 li
301.733 154.417 li
cp
311.462 166.08 mo
306.904 154.417 li
303.688 166.08 mo
301.733 161.072 li
0 0 0 0 cmyk
@
grestore
301.733 166.08 mo
313.396 166.08 li
313.396 154.417 li
301.733 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 166.081 mo
325.059 166.081 li
325.059 154.418 li
313.396 154.418 li
cp
0 .300114 .177707 0 cmyk
f
gsave
313.396 166.081 mo
325.059 166.081 li
325.059 154.418 li
313.396 154.418 li
cp
clp
313.396 166.08 mo
325.063 166.08 li
325.063 154.417 li
313.396 154.417 li
cp
324.177 166.08 mo
319.619 154.417 li
316.403 166.08 mo
313.396 158.392 li
0 0 0 0 cmyk
@
grestore
313.396 166.08 mo
325.063 166.08 li
325.063 154.417 li
313.396 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 166.081 mo
336.726 166.081 li
336.726 154.418 li
325.063 154.418 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
325.063 166.081 mo
336.726 166.081 li
336.726 154.418 li
325.063 154.418 li
cp
clp
325.063 166.08 mo
336.726 166.08 li
336.726 154.417 li
325.063 154.417 li
cp
334.557 166.08 mo
329.997 154.417 li
326.782 166.08 mo
325.063 161.682 li
0 0 0 0 cmyk
@
grestore
325.063 166.08 mo
336.726 166.08 li
336.726 154.417 li
325.063 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 166.081 mo
348.389 166.081 li
348.389 154.418 li
336.726 154.418 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
336.726 166.081 mo
348.389 166.081 li
348.389 154.418 li
336.726 154.418 li
cp
clp
336.726 166.08 mo
348.393 166.08 li
348.393 154.417 li
336.726 154.417 li
cp
345.701 166.08 mo
341.146 154.417 li
337.93 166.08 mo
336.726 163.004 li
0 0 0 0 cmyk
@
grestore
336.726 166.08 mo
348.393 166.08 li
348.393 154.417 li
336.726 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 166.081 mo
360.057 166.081 li
360.057 154.418 li
348.393 154.418 li
cp
.335637 .220035 0 0 cmyk
f
gsave
348.393 166.081 mo
360.057 166.081 li
360.057 154.418 li
348.393 154.418 li
cp
clp
348.393 166.08 mo
360.056 166.08 li
360.056 154.417 li
348.393 154.417 li
cp
353.241 166.08 mo
357.795 154.417 li
348.393 158.587 mo
350.025 154.417 li
0 0 0 0 cmyk
@
grestore
348.393 166.08 mo
360.056 166.08 li
360.056 154.417 li
348.393 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 166.081 mo
371.72 166.081 li
371.72 154.418 li
360.057 154.418 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
360.057 166.081 mo
371.72 166.081 li
371.72 154.418 li
360.057 154.418 li
cp
clp
360.056 166.08 mo
371.725 166.08 li
371.725 154.417 li
360.056 154.417 li
cp
370.204 166.08 mo
371.725 162.192 li
362.429 166.08 mo
366.988 154.417 li
0 0 0 0 cmyk
@
grestore
360.056 166.08 mo
371.725 166.08 li
371.725 154.417 li
360.056 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 166.081 mo
383.387 166.081 li
383.387 154.418 li
371.725 154.418 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
371.725 166.081 mo
383.387 166.081 li
383.387 154.418 li
371.725 154.418 li
cp
clp
371.725 166.08 mo
383.387 166.08 li
383.387 154.417 li
371.725 154.417 li
cp
380.796 166.08 mo
376.242 154.417 li
373.026 166.08 mo
371.725 162.749 li
0 0 0 0 cmyk
@
grestore
371.725 166.08 mo
383.387 166.08 li
383.387 154.417 li
371.725 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 166.081 mo
395.05 166.081 li
395.05 154.418 li
383.387 154.418 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
383.387 166.081 mo
395.05 166.081 li
395.05 154.418 li
383.387 154.418 li
cp
clp
383.387 166.08 mo
395.054 166.08 li
395.054 154.417 li
383.387 154.417 li
cp
394.568 166.08 mo
395.054 164.843 li
386.792 166.08 mo
391.353 154.417 li
383.387 154.904 mo
383.577 154.417 li
0 0 0 0 cmyk
@
grestore
383.387 166.08 mo
395.054 166.08 li
395.054 154.417 li
383.387 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 166.081 mo
406.717 166.081 li
406.717 154.418 li
395.054 154.418 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
395.054 166.081 mo
406.717 166.081 li
406.717 154.418 li
395.054 154.418 li
cp
clp
395.054 166.08 mo
406.717 166.08 li
406.717 154.417 li
395.054 154.417 li
cp
406.181 166.08 mo
406.717 164.703 li
398.405 166.08 mo
402.964 154.417 li
395.054 154.765 mo
395.19 154.417 li
0 0 0 0 cmyk
@
grestore
395.054 166.08 mo
406.717 166.08 li
406.717 154.417 li
395.054 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 166.081 mo
418.38 166.081 li
418.38 154.418 li
406.717 154.418 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
406.717 166.081 mo
418.38 166.081 li
418.38 154.418 li
406.717 154.418 li
cp
clp
406.717 166.08 mo
418.386 166.08 li
418.386 154.417 li
406.717 154.417 li
cp
418.302 166.08 mo
418.386 165.877 li
410.532 166.08 mo
415.086 154.417 li
406.717 155.936 mo
407.311 154.417 li
0 0 0 0 cmyk
@
grestore
406.717 166.08 mo
418.386 166.08 li
418.386 154.417 li
406.717 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf421.131 162.833 mo(t1)[2.78 0 ]xsh430.049 166.081 mo
441.712 166.081 li
441.712 154.418 li
430.049 154.418 li
cp
.335637 .220035 0 0 cmyk
f
gsave
430.049 166.081 mo
441.712 166.081 li
441.712 154.418 li
430.049 154.418 li
cp
clp
430.049 166.08 mo
441.712 166.08 li
441.712 154.417 li
430.049 154.417 li
cp
435.36 166.08 mo
439.913 154.417 li
430.049 159.769 mo
432.139 154.417 li
0 0 0 0 cmyk
@
grestore
430.049 166.08 mo
441.712 166.08 li
441.712 154.417 li
430.049 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 166.081 mo
453.375 166.081 li
453.375 154.418 li
441.713 154.418 li
cp
.335637 .220035 0 0 cmyk
f
gsave
441.713 166.081 mo
453.375 166.081 li
453.375 154.418 li
441.713 154.418 li
cp
clp
441.712 166.08 mo
453.379 166.08 li
453.379 154.417 li
441.712 154.417 li
cp
449.775 166.08 mo
453.379 156.859 li
442.004 166.08 mo
446.558 154.417 li
0 0 0 0 cmyk
@
grestore
441.712 166.08 mo
453.379 166.08 li
453.379 154.417 li
441.712 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 166.081 mo
465.042 166.081 li
465.042 154.418 li
453.379 154.418 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
453.379 166.081 mo
465.042 166.081 li
465.042 154.418 li
453.379 154.418 li
cp
clp
453.379 166.08 mo
465.042 166.08 li
465.042 154.417 li
453.379 154.417 li
cp
457.559 166.08 mo
462.118 154.417 li
453.379 156.888 mo
454.343 154.417 li
0 0 0 0 cmyk
@
grestore
453.379 166.08 mo
465.042 166.08 li
465.042 154.417 li
453.379 154.417 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 177.744 mo
278.4 177.744 li
278.4 166.081 li
266.739 166.081 li
cp
0 .300114 .177707 0 cmyk
f
gsave
266.739 177.744 mo
278.4 177.744 li
278.4 166.081 li
266.739 166.081 li
cp
clp
266.739 177.743 mo
278.401 177.743 li
278.401 166.08 li
266.739 166.08 li
cp
277.452 177.743 mo
272.892 166.08 li
269.677 177.743 mo
266.739 170.218 li
0 0 0 0 cmyk
@
grestore
266.739 177.743 mo
278.401 177.743 li
278.401 166.08 li
266.739 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 177.744 mo
290.063 177.744 li
290.063 166.081 li
278.4 166.081 li
cp
0 .514366 .347723 0 cmyk
f
gsave
278.4 177.744 mo
290.063 177.744 li
290.063 166.081 li
278.4 166.081 li
cp
clp
278.401 177.743 mo
290.07 177.743 li
290.07 166.08 li
278.401 166.08 li
cp
290.07 170.889 mo
288.188 166.08 li
284.972 177.743 mo
280.413 166.08 li
0 0 0 0 cmyk
@
grestore
278.401 177.743 mo
290.07 177.743 li
290.07 166.08 li
278.401 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 177.744 mo
301.733 177.744 li
301.733 166.081 li
290.07 166.081 li
cp
0 .300114 .177707 0 cmyk
f
290.07 177.743 mo
301.733 177.743 li
301.733 166.08 li
290.07 166.08 li
cp
299.008 177.743 mo
294.448 166.08 li
291.233 177.743 mo
290.07 174.759 li
0 0 0 0 cmyk
@
290.07 177.743 mo
301.733 177.743 li
301.733 166.08 li
290.07 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 177.744 mo
313.396 177.744 li
313.396 166.081 li
301.733 166.081 li
cp
0 .514366 .347723 0 cmyk
f
gsave
301.733 177.744 mo
313.396 177.744 li
313.396 166.081 li
301.733 166.081 li
cp
clp
301.733 177.743 mo
313.396 177.743 li
313.396 166.08 li
301.733 166.08 li
cp
313.396 172.92 mo
310.726 166.08 li
307.51 177.743 mo
302.952 166.08 li
0 0 0 0 cmyk
@
grestore
301.733 177.743 mo
313.396 177.743 li
313.396 166.08 li
301.733 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 177.744 mo
325.059 177.744 li
325.059 166.081 li
313.396 166.081 li
cp
0 1 .959045 0 cmyk
f
gsave
313.396 177.744 mo
325.059 177.744 li
325.059 166.081 li
313.396 166.081 li
cp
clp
313.396 177.743 mo
325.063 177.743 li
325.063 166.08 li
313.396 166.08 li
cp
325.063 170.236 mo
323.437 166.08 li
320.221 177.743 mo
315.665 166.08 li
0 0 0 0 cmyk
@
grestore
313.396 177.743 mo
325.063 177.743 li
325.063 166.08 li
313.396 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 177.744 mo
336.726 177.744 li
336.726 166.081 li
325.063 166.081 li
cp
0 .0894789 .039765 0 cmyk
f
325.063 177.743 mo
336.726 177.743 li
336.726 166.08 li
325.063 166.08 li
cp
336.726 173.526 mo
333.816 166.08 li
330.6 177.743 mo
326.045 166.08 li
0 0 0 0 cmyk
@
325.063 177.743 mo
336.726 177.743 li
336.726 166.08 li
325.063 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 177.744 mo
348.389 177.744 li
348.389 166.081 li
336.726 166.081 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
336.726 177.744 mo
348.389 177.744 li
348.389 166.081 li
336.726 166.081 li
cp
clp
336.726 177.743 mo
348.393 177.743 li
348.393 166.08 li
336.726 166.08 li
cp
348.393 174.852 mo
344.964 166.08 li
341.748 177.743 mo
337.189 166.08 li
0 0 0 0 cmyk
@
grestore
336.726 177.743 mo
348.393 177.743 li
348.393 166.08 li
336.726 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 177.744 mo
360.057 177.744 li
360.057 166.081 li
348.393 166.081 li
cp
0 1 .959045 0 cmyk
f
gsave
348.393 177.744 mo
360.057 177.744 li
360.057 166.081 li
348.393 166.081 li
cp
clp
348.393 177.743 mo
360.056 177.743 li
360.056 166.08 li
348.393 166.08 li
cp
360.056 171.539 mo
357.924 166.08 li
354.708 177.743 mo
350.15 166.08 li
0 0 0 0 cmyk
@
grestore
348.393 177.743 mo
360.056 177.743 li
360.056 166.08 li
348.393 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 177.744 mo
371.72 177.744 li
371.72 166.081 li
360.057 166.081 li
cp
.10486 .0541695 0 0 cmyk
f
360.056 177.743 mo
371.725 177.743 li
371.725 166.08 li
360.056 166.08 li
cp
366.381 177.743 mo
370.942 166.08 li
360.056 174.036 mo
363.165 166.08 li
0 0 0 0 cmyk
@
360.056 177.743 mo
371.725 177.743 li
371.725 166.08 li
360.056 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 177.744 mo
383.387 177.744 li
383.387 166.081 li
371.725 166.081 li
cp
0 .514366 .347723 0 cmyk
f
gsave
371.725 177.744 mo
383.387 177.744 li
383.387 166.081 li
371.725 166.081 li
cp
clp
371.725 177.743 mo
383.387 177.743 li
383.387 166.08 li
371.725 166.08 li
cp
383.387 174.597 mo
380.06 166.08 li
376.844 177.743 mo
372.286 166.08 li
0 0 0 0 cmyk
@
grestore
371.725 177.743 mo
383.387 177.743 li
383.387 166.08 li
371.725 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 177.744 mo
395.05 177.744 li
395.05 166.081 li
383.387 166.081 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
383.387 177.744 mo
395.05 177.744 li
395.05 166.081 li
383.387 166.081 li
cp
clp
383.387 177.743 mo
395.054 177.743 li
395.054 166.08 li
383.387 166.08 li
cp
390.75 177.743 mo
395.054 166.73 li
383.387 176.687 mo
387.535 166.08 li
0 0 0 0 cmyk
@
grestore
383.387 177.743 mo
395.054 177.743 li
395.054 166.08 li
383.387 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 177.744 mo
406.717 177.744 li
406.717 166.081 li
395.054 166.081 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 177.743 mo
406.717 177.743 li
406.717 166.08 li
395.054 166.08 li
cp
406.717 175.362 mo
403.09 166.08 li
399.873 177.743 mo
395.32 166.08 li
0 0 0 0 cmyk
@
395.054 177.743 mo
406.717 177.743 li
406.717 166.08 li
395.054 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 177.744 mo
418.38 177.744 li
418.38 166.081 li
406.717 166.081 li
cp
.810636 .664393 0 0 cmyk
f
gsave
406.717 177.744 mo
418.38 177.744 li
418.38 166.081 li
406.717 166.081 li
cp
clp
406.717 177.743 mo
418.386 177.743 li
418.386 166.08 li
406.717 166.08 li
cp
414.484 177.743 mo
418.386 167.762 li
406.717 177.721 mo
411.268 166.08 li
0 0 0 0 cmyk
@
grestore
406.717 177.743 mo
418.386 177.743 li
418.386 166.08 li
406.717 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 177.744 mo
430.049 177.744 li
430.049 166.081 li
418.386 166.081 li
cp
.335637 .220035 0 0 cmyk
f
gsave
418.386 177.744 mo
430.049 177.744 li
430.049 166.081 li
418.386 166.081 li
cp
clp
418.386 177.743 mo
430.049 177.743 li
430.049 166.08 li
418.386 166.08 li
cp
429.994 177.743 mo
430.049 177.599 li
422.217 177.743 mo
426.773 166.08 li
418.386 167.66 mo
419.001 166.08 li
0 0 0 0 cmyk
@
grestore
418.386 177.743 mo
430.049 177.743 li
430.049 166.08 li
418.386 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf432.798 174.501 mo(t2)[2.78 0 ]xsh441.712 177.743 mo
453.374 177.743 li
453.374 166.08 li
441.712 166.08 li
cp
1 1 .197116 .0718395 cmyk
f
gsave
441.713 177.744 mo
453.375 177.744 li
453.375 166.081 li
441.713 166.081 li
cp
clp
441.712 177.743 mo
453.379 177.743 li
453.379 166.08 li
441.712 166.08 li
cp
445.955 177.743 mo
450.516 166.08 li
441.712 168.703 mo
442.74 166.08 li
0 0 0 0 cmyk
@
grestore
441.712 177.743 mo
453.379 177.743 li
453.379 166.08 li
441.712 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
453.379 177.744 mo
465.042 177.744 li
465.042 166.081 li
453.379 166.081 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
453.379 177.744 mo
465.042 177.744 li
465.042 166.081 li
453.379 166.081 li
cp
clp
453.379 177.743 mo
465.042 177.743 li
465.042 166.08 li
453.379 166.08 li
cp
461.516 177.743 mo
465.042 168.711 li
453.741 177.743 mo
458.301 166.08 li
0 0 0 0 cmyk
@
grestore
453.379 177.743 mo
465.042 177.743 li
465.042 166.08 li
453.379 166.08 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 189.411 mo
278.4 189.411 li
278.4 177.748 li
266.739 177.748 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
266.739 189.411 mo
278.4 189.411 li
278.4 177.748 li
266.739 177.748 li
cp
clp
266.739 189.41 mo
278.401 189.41 li
278.401 177.743 li
266.739 177.743 li
cp
275.492 189.41 mo
270.933 177.743 li
267.716 189.41 mo
266.739 186.903 li
0 0 0 0 cmyk
@
grestore
266.739 189.41 mo
278.401 189.41 li
278.401 177.743 li
266.739 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 189.411 mo
290.063 189.411 li
290.063 177.748 li
278.4 177.748 li
cp
0 .720119 .54638 0 cmyk
f
gsave
278.4 189.411 mo
290.063 189.411 li
290.063 177.748 li
278.4 177.748 li
cp
clp
278.401 189.41 mo
290.07 189.41 li
290.07 177.743 li
278.401 177.743 li
cp
290.07 187.576 mo
286.227 177.743 li
283.007 189.41 mo
278.453 177.743 li
0 0 0 0 cmyk
@
grestore
278.401 189.41 mo
290.07 189.41 li
290.07 177.743 li
278.401 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 189.411 mo
301.733 189.411 li
301.733 177.748 li
290.07 177.748 li
cp
0 .0894789 .039765 0 cmyk
f
290.07 189.41 mo
301.733 189.41 li
301.733 177.743 li
290.07 177.743 li
cp
301.733 181.506 mo
300.263 177.743 li
297.047 189.41 mo
292.488 177.743 li
0 0 0 0 cmyk
@
290.07 189.41 mo
301.733 189.41 li
301.733 177.743 li
290.07 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 189.411 mo
313.396 189.411 li
313.396 177.748 li
301.733 177.748 li
cp
0 .720119 .54638 0 cmyk
f
gsave
301.733 189.411 mo
313.396 189.411 li
313.396 177.748 li
301.733 177.748 li
cp
clp
301.733 189.41 mo
313.396 189.41 li
313.396 177.743 li
301.733 177.743 li
cp
313.322 189.41 mo
308.766 177.743 li
305.545 189.41 mo
301.733 179.648 li
0 0 0 0 cmyk
@
grestore
301.733 189.41 mo
313.396 189.41 li
313.396 177.743 li
301.733 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 189.411 mo
325.059 189.411 li
325.059 177.748 li
313.396 177.748 li
cp
0 .887968 .730526 0 cmyk
f
gsave
313.396 189.411 mo
325.059 189.411 li
325.059 177.748 li
313.396 177.748 li
cp
clp
313.396 189.41 mo
325.063 189.41 li
325.063 177.743 li
313.396 177.743 li
cp
325.063 186.923 mo
321.477 177.743 li
318.26 189.41 mo
313.701 177.743 li
0 0 0 0 cmyk
@
grestore
313.396 189.41 mo
325.063 189.41 li
325.063 177.743 li
313.396 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 189.411 mo
336.726 189.411 li
336.726 177.748 li
325.063 177.748 li
cp
0 .0894789 .039765 0 cmyk
f
325.063 189.41 mo
336.726 189.41 li
336.726 177.743 li
325.063 177.743 li
cp
336.415 189.41 mo
331.855 177.743 li
328.641 189.41 mo
325.063 180.255 li
0 0 0 0 cmyk
@
325.063 189.41 mo
336.726 189.41 li
336.726 177.743 li
325.063 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 189.411 mo
348.389 189.411 li
348.389 177.748 li
336.726 177.748 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
336.726 189.411 mo
348.389 189.411 li
348.389 177.748 li
336.726 177.748 li
cp
clp
336.726 189.41 mo
348.393 189.41 li
348.393 177.743 li
336.726 177.743 li
cp
347.565 189.41 mo
343.004 177.743 li
339.788 189.41 mo
336.726 181.58 li
0 0 0 0 cmyk
@
grestore
336.726 189.41 mo
348.393 189.41 li
348.393 177.743 li
336.726 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 189.411 mo
360.057 189.411 li
360.057 177.748 li
348.393 177.748 li
cp
0 .887968 .730526 0 cmyk
f
gsave
348.393 189.411 mo
360.057 189.411 li
360.057 177.748 li
348.393 177.748 li
cp
clp
348.393 189.41 mo
360.056 189.41 li
360.056 177.743 li
348.393 177.743 li
cp
360.056 188.224 mo
355.96 177.743 li
352.744 189.41 mo
348.393 178.267 li
0 0 0 0 cmyk
@
grestore
348.393 189.41 mo
360.056 189.41 li
360.056 177.743 li
348.393 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 189.411 mo
371.72 189.411 li
371.72 177.748 li
360.057 177.748 li
cp
0 .300114 .177707 0 cmyk
f
360.056 189.41 mo
371.725 189.41 li
371.725 177.743 li
360.056 177.743 li
cp
369.708 189.41 mo
365.154 177.743 li
361.938 189.41 mo
360.056 184.601 li
0 0 0 0 cmyk
@
360.056 189.41 mo
371.725 189.41 li
371.725 177.743 li
360.056 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 189.411 mo
383.387 189.411 li
383.387 177.748 li
371.725 177.748 li
cp
0 .720119 .54638 0 cmyk
f
gsave
371.725 189.411 mo
383.387 189.411 li
383.387 177.748 li
371.725 177.748 li
cp
clp
371.725 189.41 mo
383.387 189.41 li
383.387 177.743 li
371.725 177.743 li
cp
382.656 189.41 mo
378.1 177.743 li
374.883 189.41 mo
371.725 181.326 li
0 0 0 0 cmyk
@
grestore
371.725 189.41 mo
383.387 189.41 li
383.387 177.743 li
371.725 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 189.411 mo
395.05 189.411 li
395.05 177.748 li
383.387 177.748 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
383.387 189.411 mo
395.05 189.411 li
395.05 177.748 li
383.387 177.748 li
cp
clp
383.387 189.41 mo
395.054 189.41 li
395.054 177.743 li
383.387 177.743 li
cp
392.709 189.41 mo
395.054 183.415 li
384.935 189.41 mo
389.496 177.743 li
0 0 0 0 cmyk
@
grestore
383.387 189.41 mo
395.054 189.41 li
395.054 177.743 li
383.387 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 189.411 mo
406.717 189.411 li
406.717 177.748 li
395.054 177.748 li
cp
0 .0894789 .039765 0 cmyk
f
395.054 189.41 mo
406.717 189.41 li
406.717 177.743 li
395.054 177.743 li
cp
405.69 189.41 mo
401.129 177.743 li
397.913 189.41 mo
395.054 182.09 li
0 0 0 0 cmyk
@
395.054 189.41 mo
406.717 189.41 li
406.717 177.743 li
395.054 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 189.411 mo
418.38 189.411 li
418.38 177.748 li
406.717 177.748 li
cp
.810636 .664393 0 0 cmyk
f
gsave
406.717 189.411 mo
418.38 189.411 li
418.38 177.748 li
406.717 177.748 li
cp
clp
406.717 189.41 mo
418.386 189.41 li
418.386 177.743 li
406.717 177.743 li
cp
416.444 189.41 mo
418.386 184.448 li
408.668 189.41 mo
413.228 177.743 li
0 0 0 0 cmyk
@
grestore
406.717 189.41 mo
418.386 189.41 li
418.386 177.743 li
406.717 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 189.411 mo
430.049 189.411 li
430.049 177.748 li
418.386 177.748 li
cp
.335637 .220035 0 0 cmyk
f
gsave
418.386 189.411 mo
430.049 189.411 li
430.049 177.748 li
418.386 177.748 li
cp
clp
418.386 189.41 mo
430.049 189.41 li
430.049 177.743 li
418.386 177.743 li
cp
424.178 189.41 mo
428.738 177.743 li
418.386 184.347 mo
420.961 177.743 li
0 0 0 0 cmyk
@
grestore
418.386 189.41 mo
430.049 189.41 li
430.049 177.743 li
418.386 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 189.411 mo
441.712 189.411 li
441.712 177.748 li
430.049 177.748 li
cp
1 1 .197116 .0718395 cmyk
f
430.049 189.41 mo
441.712 189.41 li
441.712 177.743 li
430.049 177.743 li
cp
441.272 189.41 mo
441.712 188.28 li
433.5 189.41 mo
438.056 177.743 li
430.049 178.341 mo
430.28 177.743 li
0 0 0 0 cmyk
@
430.049 189.41 mo
441.712 189.41 li
441.712 177.743 li
430.049 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf444.454 186.158 mo(t4)[2.78 0 ]xsh453.379 189.411 mo
465.042 189.411 li
465.042 177.748 li
453.379 177.748 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
453.379 189.411 mo
465.042 189.411 li
465.042 177.748 li
453.379 177.748 li
cp
clp
453.379 189.41 mo
465.042 189.41 li
465.042 177.743 li
453.379 177.743 li
cp
463.476 189.41 mo
465.042 185.399 li
455.702 189.41 mo
460.26 177.743 li
0 0 0 0 cmyk
@
grestore
453.379 189.41 mo
465.042 189.41 li
465.042 177.743 li
453.379 177.743 li
cp
.163394 .123903 .128511 0 cmyk
@
266.739 201.074 mo
278.4 201.074 li
278.4 189.411 li
266.739 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
266.739 201.074 mo
278.4 201.074 li
278.4 189.411 li
266.739 189.411 li
cp
clp
266.739 201.074 mo
278.401 201.074 li
278.401 189.411 li
266.739 189.411 li
cp
278.401 196.862 mo
275.492 189.41 li
272.275 201.074 mo
267.716 189.41 li
0 0 0 0 cmyk
@
grestore
266.739 201.074 mo
278.401 201.074 li
278.401 189.411 li
266.739 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
278.4 201.074 mo
290.063 201.074 li
290.063 189.411 li
278.4 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
278.4 201.074 mo
290.063 201.074 li
290.063 189.411 li
278.4 189.411 li
cp
clp
278.401 201.074 mo
290.07 201.074 li
290.07 189.411 li
278.401 189.411 li
cp
287.567 201.074 mo
283.013 189.41 li
279.796 201.074 mo
278.401 197.51 li
0 0 0 0 cmyk
@
grestore
278.401 201.074 mo
290.07 201.074 li
290.07 189.411 li
278.401 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
290.07 201.074 mo
301.733 201.074 li
301.733 189.411 li
290.07 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
290.07 201.074 mo
301.733 201.074 li
301.733 189.411 li
290.07 189.411 li
cp
clp
290.07 201.074 mo
301.733 201.074 li
301.733 189.411 li
290.07 189.411 li
cp
301.608 201.074 mo
297.047 189.41 li
293.831 201.074 mo
290.07 191.445 li
0 0 0 0 cmyk
@
grestore
290.07 201.074 mo
301.733 201.074 li
301.733 189.411 li
290.07 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
301.733 201.074 mo
313.396 201.074 li
313.396 189.411 li
301.733 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
301.733 201.074 mo
313.396 201.074 li
313.396 189.411 li
301.733 189.411 li
cp
clp
301.733 201.074 mo
313.396 201.074 li
313.396 189.411 li
301.733 189.411 li
cp
313.396 189.601 mo
313.322 189.41 li
310.106 201.074 mo
305.551 189.41 li
302.335 201.074 mo
301.733 199.54 li
0 0 0 0 cmyk
@
grestore
301.733 201.074 mo
313.396 201.074 li
313.396 189.411 li
301.733 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
313.396 201.074 mo
325.059 201.074 li
325.059 189.411 li
313.396 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
313.396 201.074 mo
325.059 201.074 li
325.059 189.411 li
313.396 189.411 li
cp
clp
313.396 201.074 mo
325.063 201.074 li
325.063 189.411 li
313.396 189.411 li
cp
322.821 201.074 mo
318.26 189.41 li
315.044 201.074 mo
313.396 196.858 li
0 0 0 0 cmyk
@
grestore
313.396 201.074 mo
325.063 201.074 li
325.063 189.411 li
313.396 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
325.063 201.074 mo
336.726 201.074 li
336.726 189.411 li
325.063 189.411 li
cp
0 1 1 0 cmyk
f
gsave
325.063 201.074 mo
336.726 201.074 li
336.726 189.411 li
325.063 189.411 li
cp
clp
325.063 201.074 mo
336.726 201.074 li
336.726 189.411 li
325.063 189.411 li
cp
336.726 190.208 mo
336.415 189.41 li
333.2 201.074 mo
328.641 189.41 li
325.424 201.074 mo
325.063 200.147 li
0 0 0 0 cmyk
@
grestore
325.063 201.074 mo
336.726 201.074 li
336.726 189.411 li
325.063 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
336.726 201.074 mo
348.389 201.074 li
348.389 189.411 li
336.726 189.411 li
cp
0 1 1 0 cmyk
f
gsave
336.726 201.074 mo
348.389 201.074 li
348.389 189.411 li
336.726 189.411 li
cp
clp
336.726 201.074 mo
348.393 201.074 li
348.393 189.411 li
336.726 189.411 li
cp
348.393 191.533 mo
347.565 189.41 li
344.348 201.074 mo
339.788 189.41 li
0 0 0 0 cmyk
@
grestore
336.726 201.074 mo
348.393 201.074 li
348.393 189.411 li
336.726 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
348.393 201.074 mo
360.057 201.074 li
360.057 189.411 li
348.393 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
348.393 201.074 mo
360.057 201.074 li
360.057 189.411 li
348.393 189.411 li
cp
clp
348.393 201.074 mo
360.056 201.074 li
360.056 189.411 li
348.393 189.411 li
cp
357.304 201.074 mo
352.749 189.41 li
349.534 201.074 mo
348.393 198.163 li
0 0 0 0 cmyk
@
grestore
348.393 201.074 mo
360.056 201.074 li
360.056 189.411 li
348.393 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
360.057 201.074 mo
371.72 201.074 li
371.72 189.411 li
360.057 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
360.057 201.074 mo
371.72 201.074 li
371.72 189.411 li
360.057 189.411 li
cp
clp
360.056 201.074 mo
371.725 201.074 li
371.725 189.411 li
360.056 189.411 li
cp
371.725 194.558 mo
369.713 189.41 li
366.497 201.074 mo
361.938 189.41 li
0 0 0 0 cmyk
@
grestore
360.056 201.074 mo
371.725 201.074 li
371.725 189.411 li
360.056 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
371.725 201.074 mo
383.387 201.074 li
383.387 189.411 li
371.725 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
371.725 201.074 mo
383.387 201.074 li
383.387 189.411 li
371.725 189.411 li
cp
clp
371.725 201.074 mo
383.387 201.074 li
383.387 189.411 li
371.725 189.411 li
cp
383.387 191.278 mo
382.66 189.41 li
379.444 201.074 mo
374.883 189.41 li
0 0 0 0 cmyk
@
grestore
371.725 201.074 mo
383.387 201.074 li
383.387 189.411 li
371.725 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
383.387 201.074 mo
395.05 201.074 li
395.05 189.411 li
383.387 189.411 li
cp
0 .0894789 .039765 0 cmyk
f
gsave
383.387 201.074 mo
395.05 201.074 li
395.05 189.411 li
383.387 189.411 li
cp
clp
383.387 201.074 mo
395.054 201.074 li
395.054 189.411 li
383.387 189.411 li
cp
395.054 191.909 mo
394.077 189.41 li
390.862 201.074 mo
386.302 189.41 li
0 0 0 0 cmyk
@
grestore
383.387 201.074 mo
395.054 201.074 li
395.054 189.411 li
383.387 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
395.054 201.074 mo
406.717 201.074 li
406.717 189.411 li
395.054 189.411 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
395.054 201.074 mo
406.717 201.074 li
406.717 189.411 li
395.054 189.411 li
cp
clp
395.054 201.074 mo
406.717 201.074 li
406.717 189.411 li
395.054 189.411 li
cp
399.763 201.074 mo
404.323 189.41 li
395.054 193.233 mo
396.546 189.41 li
0 0 0 0 cmyk
@
grestore
395.054 201.074 mo
406.717 201.074 li
406.717 189.411 li
395.054 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
406.717 201.074 mo
418.38 201.074 li
418.38 189.411 li
406.717 189.411 li
cp
.991394 .963012 .0224002 .00402838 cmyk
f
gsave
406.717 201.074 mo
418.38 201.074 li
418.38 189.411 li
406.717 189.411 li
cp
clp
406.717 201.074 mo
418.386 201.074 li
418.386 189.411 li
406.717 189.411 li
cp
411.884 201.074 mo
416.444 189.41 li
406.717 194.402 mo
408.668 189.41 li
0 0 0 0 cmyk
@
grestore
406.717 201.074 mo
418.386 201.074 li
418.386 189.411 li
406.717 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
418.386 201.074 mo
430.049 201.074 li
430.049 189.411 li
418.386 189.411 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
418.386 201.074 mo
430.049 201.074 li
430.049 189.411 li
418.386 189.411 li
cp
clp
418.386 201.074 mo
430.049 201.074 li
430.049 189.411 li
418.386 189.411 li
cp
427.394 201.074 mo
430.049 194.281 li
419.618 201.074 mo
424.178 189.41 li
0 0 0 0 cmyk
@
grestore
418.386 201.074 mo
430.049 201.074 li
430.049 189.411 li
418.386 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
430.049 201.074 mo
441.712 201.074 li
441.712 189.411 li
430.049 189.411 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
430.049 201.074 mo
441.712 201.074 li
441.712 189.411 li
430.049 189.411 li
cp
clp
430.049 201.074 mo
441.712 201.074 li
441.712 189.411 li
430.049 189.411 li
cp
436.712 201.074 mo
441.272 189.41 li
430.049 198.239 mo
433.496 189.41 li
0 0 0 0 cmyk
@
grestore
430.049 201.074 mo
441.712 201.074 li
441.712 189.411 li
430.049 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
441.713 201.074 mo
453.375 201.074 li
453.375 189.411 li
441.713 189.411 li
cp
.10486 .0541695 0 0 cmyk
f
gsave
441.713 201.074 mo
453.375 201.074 li
453.375 189.411 li
441.713 189.411 li
cp
clp
441.712 201.074 mo
453.379 201.074 li
453.379 189.411 li
441.712 189.411 li
cp
451.132 201.074 mo
453.379 195.323 li
443.356 201.074 mo
447.916 189.41 li
0 0 0 0 cmyk
@
grestore
441.712 201.074 mo
453.379 201.074 li
453.379 189.411 li
441.712 189.411 li
cp
.163394 .123903 .128511 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
VWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf456.124 197.792 mo(t3)[2.78 0 ]xsh248.688 38.0322 mo
221.386 38.0322 li
221.386 25.8322 li
248.688 25.8322 li
cp
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: FAAAAA+ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginVWSLXC+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208BD16D82> |-/D <1C60D8A8C9B6079F6249419CF69509002AC79A016C34D114AD8C7A9DD2474EBE314027FB7E1F48C795DC0A22C11652551956D26D402DBF3954D5C55EEDC4D2E02D32263ABBF714C52111C5848A3EB8C8B527B0FF3362F75E292ACAF79767633E5CF98F1E087651E36E4721AF4CBDAC7E4D68359E9108BDBBEA294A0489068CBF65F37E7CD4C7284AEAF641D010DF> |-/I <1C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |-/N <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106F3AC927984C1E464F121F968> |-systemdict /gcheck known {setglobal} if end {end} ifendVWSLXC+ArialMT /Encoding getdup 65 /A putdup 68 /D putdup 73 /I putdup 78 /N putpop%ADOEndSubsetFont
/VWSLXC+ArialMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A 2{/.notdef}rp /D 4{/.notdef}rp /I 4{/.notdef}rp /N 5{/.notdef}rp /T 29{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]VWSLXC+ArialMT nfVWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf222.588 33.9327 mo(ANDI)[6.67007 7.22 7.22 0 ]xsh248.688 61.3611 mo
221.386 61.3611 li
221.386 49.1611 li
248.688 49.1611 li
cp
0 0 0 0 cmyk
f
248.688 87.2372 mo
221.386 87.2372 li
221.386 75.0371 li
248.688 75.0371 li
cp
f
248.688 113.856 mo
221.386 113.856 li
221.386 101.656 li
248.688 101.656 li
cp
f
248.688 140.475 mo
221.386 140.475 li
221.386 128.275 li
248.688 128.275 li
cp
f
248.688 166.349 mo
221.386 166.349 li
221.386 154.149 li
248.688 154.149 li
cp
f
248.688 187.319 mo
221.386 187.319 li
221.386 175.119 li
248.688 175.119 li
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: FAAAAA+ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginVWSLXC+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC235F833AFCC30669C812FBF097879E1> |-/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52ABD0227B6CDD854C568D5A6F3817645C5> |-/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |-/E <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B66E9361DDE78FC667AB91EF9824> |-/G <1C60D8A8C9B6FF86FBC793890B55178BE49EEC5102DE4765B31919F6E98C7D78C667A3BB4B4E624B689DA4C385DFD1B29DE65FB8AA7AB2EF69B5E095C4AF9914BE00567D04850B7313AA11B0D0EAADB46E151A37395ABF4FDE5690DD208A8203F33BC5AE42ABB3FA5CE6CC7C2FF1141A09489DA9290F5991FC3FADB6E8008CAB5CAA6CE68D612C9A2AD14F1DB3B2ED2760EC1A22B5BECD6F37DA404DC4340669554C25AFCF53AD025C5AA750C1F3F80E3A98BEF6E511E50C5B0BE2D927EF> |-/H <1C60D8A8C9B6079F62EE7568E8B09CBA01F57B4ACE6DA24AC6EA79287DF31270F7DC42D147A6FAB1DABB6C> |-/K <1C60D8A8C9B64EDFF4E9C0F6048EB723B0CED8EE1109108A02369C8B45382285654732A05ADDD12E99CCD504BC058489833BA3AE060EFA> |-/M <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F80AF5A83421F8F> |-/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AAC8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B5380E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762289BE1> |-/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-/R <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D295257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F0B222> |-/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-/U <1C60D8A8C9B6079F6D3F1E4545C3E1CC9D8EF54571065F01BE5A50957BD2D8AD04D30C23B37CA98B969ECB5CA0D9A7C563636CB33377BB3DEB53D45DD0F3E333CD69EA3B53D63C91B303CFDF29F59C20776D4DC576C9C080B76AB60A21673EFC1F645BF33D33929C60> |-/W <1C60D8A8C9B5D6EF420A3AC101C9354A948DB23A64166EB3D55EEB13F0DE3A88231C2286900994060E46C1096C7ABFBA281AAEB86123AF398A1FE8A551414253B8F3844EF59084BCE1B4D5AF071FD672A0C8C15E821130EADB430FA7E525278C31C213B6FF1A25> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/b <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |-/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |-/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |-/w <1C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6FEA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7264371419D7043A117419C0FAF4C> |-systemdict /gcheck known {setglobal} if end {end} ifendVWSLXC+ArialMT /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 67 /C putdup 69 /E putdup 71 /G putdup 72 /H putdup 75 /K putdup 77 /M putdup 79 /O putdup 80 /P putdup 82 /R putdup 83 /S putdup 85 /U putdup 87 /W putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 105 /i putdup 108 /l putdup 109 /m putdup 111 /o putdup 112 /p putdup 115 /s putdup 119 /w putpop%ADOEndSubsetFont
/VWSLXC+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A /.notdef /C /D /E /.notdef /G /H /I /.notdef /K /.notdef /M /N /O /P /.notdef /R /S /T /U /.notdef /W 9{/.notdef}rp /a /b /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /.notdef /o /p /.notdef /r /s /t 2{/.notdef}rp /w 136{/.notdef}rp]VWSLXC+ArialMT nfVWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf222.588 58.7366 mo(DIGI)[7.22 2.78 7.78 0 ]xshVWSLXC+ArialMT*1 [9.9936 0 0 -10 0 0 ]msf222.588 83.2375 mo(KIWI)[6.6658 2.77823 9.43396 0 ]xshVWSLXC+ArialMT*1 [10 0 0 -10 0 0 ]msf221.588 110.713 mo(CASS)[7.22 6.67007 6.67007 0 ]xsh221.588 160.833 mo(OST)[7.78 6.67007 0 ]xsh222.248 136.523 mo(EMU)sh220.248 186.023 mo(RHEA)[7.22 7.22 6.67007 0 ]xsh108.108 221.443 mo(\(a\) Clades)[3.32993 5.56 3.32993 2.78 7.22 2.22 5.56 5.56 5.56 0 ]xsh318.898 223.423 mo(\(b\) Pairwise compare)[3.32993 5.56 3.32993 2.78 6.67007 5.56 2.22 3.32993 7.22 2.22 5 5.56 2.78 5 5.56 8.32993 5.56 5.56 3.32993 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 /1 /2 ]]
] del_res
/VWSLXE+Helvetica*1 uf/VWSLXE+Helvetica uf/HAAAAA+Helvetica uf/VWSLXC+ArialMT*1 uf/VWSLXC+ArialMT uf/FAAAAA+ArialMT uf/VWSLXD+TimesNewRomanPSMT*1 uf/VWSLXD+TimesNewRomanPSMT uf/GAAAAA+TimesNewRomanPSMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
